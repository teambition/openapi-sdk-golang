/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AddDepartmentMembersRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddDepartmentMembersRequest{}

// AddDepartmentMembersRequest struct for AddDepartmentMembersRequest
type AddDepartmentMembersRequest struct {
	// 部门 ID
	DeptId *string `json:"deptId,omitempty"`
	// 操作者 ID
	OperatorId *string `json:"operatorId,omitempty"`
	// 用户 ID 列表
	UserIds []string `json:"userIds,omitempty"`
}

// NewAddDepartmentMembersRequest instantiates a new AddDepartmentMembersRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddDepartmentMembersRequest() *AddDepartmentMembersRequest {
	this := AddDepartmentMembersRequest{}
	return &this
}

// NewAddDepartmentMembersRequestWithDefaults instantiates a new AddDepartmentMembersRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddDepartmentMembersRequestWithDefaults() *AddDepartmentMembersRequest {
	this := AddDepartmentMembersRequest{}
	return &this
}

// GetDeptId returns the DeptId field value if set, zero value otherwise.
func (o *AddDepartmentMembersRequest) GetDeptId() string {
	if o == nil || IsNil(o.DeptId) {
		var ret string
		return ret
	}
	return *o.DeptId
}

// GetDeptIdOk returns a tuple with the DeptId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDepartmentMembersRequest) GetDeptIdOk() (*string, bool) {
	if o == nil || IsNil(o.DeptId) {
		return nil, false
	}
	return o.DeptId, true
}

// HasDeptId returns a boolean if a field has been set.
func (o *AddDepartmentMembersRequest) HasDeptId() bool {
	if o != nil && !IsNil(o.DeptId) {
		return true
	}

	return false
}

// SetDeptId gets a reference to the given string and assigns it to the DeptId field.
func (o *AddDepartmentMembersRequest) SetDeptId(v string) {
	o.DeptId = &v
}

// GetOperatorId returns the OperatorId field value if set, zero value otherwise.
func (o *AddDepartmentMembersRequest) GetOperatorId() string {
	if o == nil || IsNil(o.OperatorId) {
		var ret string
		return ret
	}
	return *o.OperatorId
}

// GetOperatorIdOk returns a tuple with the OperatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDepartmentMembersRequest) GetOperatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.OperatorId) {
		return nil, false
	}
	return o.OperatorId, true
}

// HasOperatorId returns a boolean if a field has been set.
func (o *AddDepartmentMembersRequest) HasOperatorId() bool {
	if o != nil && !IsNil(o.OperatorId) {
		return true
	}

	return false
}

// SetOperatorId gets a reference to the given string and assigns it to the OperatorId field.
func (o *AddDepartmentMembersRequest) SetOperatorId(v string) {
	o.OperatorId = &v
}

// GetUserIds returns the UserIds field value if set, zero value otherwise.
func (o *AddDepartmentMembersRequest) GetUserIds() []string {
	if o == nil || IsNil(o.UserIds) {
		var ret []string
		return ret
	}
	return o.UserIds
}

// GetUserIdsOk returns a tuple with the UserIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDepartmentMembersRequest) GetUserIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.UserIds) {
		return nil, false
	}
	return o.UserIds, true
}

// HasUserIds returns a boolean if a field has been set.
func (o *AddDepartmentMembersRequest) HasUserIds() bool {
	if o != nil && !IsNil(o.UserIds) {
		return true
	}

	return false
}

// SetUserIds gets a reference to the given []string and assigns it to the UserIds field.
func (o *AddDepartmentMembersRequest) SetUserIds(v []string) {
	o.UserIds = v
}

func (o AddDepartmentMembersRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddDepartmentMembersRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeptId) {
		toSerialize["deptId"] = o.DeptId
	}
	if !IsNil(o.OperatorId) {
		toSerialize["operatorId"] = o.OperatorId
	}
	if !IsNil(o.UserIds) {
		toSerialize["userIds"] = o.UserIds
	}
	return toSerialize, nil
}

type NullableAddDepartmentMembersRequest struct {
	value *AddDepartmentMembersRequest
	isSet bool
}

func (v NullableAddDepartmentMembersRequest) Get() *AddDepartmentMembersRequest {
	return v.value
}

func (v *NullableAddDepartmentMembersRequest) Set(val *AddDepartmentMembersRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddDepartmentMembersRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddDepartmentMembersRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddDepartmentMembersRequest(val *AddDepartmentMembersRequest) *NullableAddDepartmentMembersRequest {
	return &NullableAddDepartmentMembersRequest{value: val, isSet: true}
}

func (v NullableAddDepartmentMembersRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddDepartmentMembersRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


