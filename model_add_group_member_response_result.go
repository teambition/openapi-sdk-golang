/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AddGroupMemberResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddGroupMemberResponseResult{}

// AddGroupMemberResponseResult struct for AddGroupMemberResponseResult
type AddGroupMemberResponseResult struct {
	// 用户 ID
	UserId *string `json:"userId,omitempty"`
	// 用户头像
	AvatarUrl *string `json:"avatarUrl,omitempty"`
	// 成员名称
	Name *string `json:"name,omitempty"`
}

// NewAddGroupMemberResponseResult instantiates a new AddGroupMemberResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddGroupMemberResponseResult() *AddGroupMemberResponseResult {
	this := AddGroupMemberResponseResult{}
	return &this
}

// NewAddGroupMemberResponseResultWithDefaults instantiates a new AddGroupMemberResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddGroupMemberResponseResultWithDefaults() *AddGroupMemberResponseResult {
	this := AddGroupMemberResponseResult{}
	return &this
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *AddGroupMemberResponseResult) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddGroupMemberResponseResult) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *AddGroupMemberResponseResult) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *AddGroupMemberResponseResult) SetUserId(v string) {
	o.UserId = &v
}

// GetAvatarUrl returns the AvatarUrl field value if set, zero value otherwise.
func (o *AddGroupMemberResponseResult) GetAvatarUrl() string {
	if o == nil || IsNil(o.AvatarUrl) {
		var ret string
		return ret
	}
	return *o.AvatarUrl
}

// GetAvatarUrlOk returns a tuple with the AvatarUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddGroupMemberResponseResult) GetAvatarUrlOk() (*string, bool) {
	if o == nil || IsNil(o.AvatarUrl) {
		return nil, false
	}
	return o.AvatarUrl, true
}

// HasAvatarUrl returns a boolean if a field has been set.
func (o *AddGroupMemberResponseResult) HasAvatarUrl() bool {
	if o != nil && !IsNil(o.AvatarUrl) {
		return true
	}

	return false
}

// SetAvatarUrl gets a reference to the given string and assigns it to the AvatarUrl field.
func (o *AddGroupMemberResponseResult) SetAvatarUrl(v string) {
	o.AvatarUrl = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AddGroupMemberResponseResult) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddGroupMemberResponseResult) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AddGroupMemberResponseResult) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AddGroupMemberResponseResult) SetName(v string) {
	o.Name = &v
}

func (o AddGroupMemberResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddGroupMemberResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	if !IsNil(o.AvatarUrl) {
		toSerialize["avatarUrl"] = o.AvatarUrl
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableAddGroupMemberResponseResult struct {
	value *AddGroupMemberResponseResult
	isSet bool
}

func (v NullableAddGroupMemberResponseResult) Get() *AddGroupMemberResponseResult {
	return v.value
}

func (v *NullableAddGroupMemberResponseResult) Set(val *AddGroupMemberResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableAddGroupMemberResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableAddGroupMemberResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddGroupMemberResponseResult(val *AddGroupMemberResponseResult) *NullableAddGroupMemberResponseResult {
	return &NullableAddGroupMemberResponseResult{value: val, isSet: true}
}

func (v NullableAddGroupMemberResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddGroupMemberResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


