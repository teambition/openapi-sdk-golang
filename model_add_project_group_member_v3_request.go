/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AddProjectGroupMemberV3Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddProjectGroupMemberV3Request{}

// AddProjectGroupMemberV3Request struct for AddProjectGroupMemberV3Request
type AddProjectGroupMemberV3Request struct {
	// 项目分组成员类型，如 organizationMember, organizationTeam, organizationGroup
	SubjectType *string `json:"subjectType,omitempty"`
	// 当 subjectType 为 organizationMember 时, 该值为 userId；当 subjectType 为 organizationTeam 时, 该值为 teamId；当 subjectType 为 organizationGroup 时, 该值为 groupId；
	SubjectId *string `json:"subjectId,omitempty"`
}

// NewAddProjectGroupMemberV3Request instantiates a new AddProjectGroupMemberV3Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddProjectGroupMemberV3Request() *AddProjectGroupMemberV3Request {
	this := AddProjectGroupMemberV3Request{}
	return &this
}

// NewAddProjectGroupMemberV3RequestWithDefaults instantiates a new AddProjectGroupMemberV3Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddProjectGroupMemberV3RequestWithDefaults() *AddProjectGroupMemberV3Request {
	this := AddProjectGroupMemberV3Request{}
	return &this
}

// GetSubjectType returns the SubjectType field value if set, zero value otherwise.
func (o *AddProjectGroupMemberV3Request) GetSubjectType() string {
	if o == nil || IsNil(o.SubjectType) {
		var ret string
		return ret
	}
	return *o.SubjectType
}

// GetSubjectTypeOk returns a tuple with the SubjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddProjectGroupMemberV3Request) GetSubjectTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SubjectType) {
		return nil, false
	}
	return o.SubjectType, true
}

// HasSubjectType returns a boolean if a field has been set.
func (o *AddProjectGroupMemberV3Request) HasSubjectType() bool {
	if o != nil && !IsNil(o.SubjectType) {
		return true
	}

	return false
}

// SetSubjectType gets a reference to the given string and assigns it to the SubjectType field.
func (o *AddProjectGroupMemberV3Request) SetSubjectType(v string) {
	o.SubjectType = &v
}

// GetSubjectId returns the SubjectId field value if set, zero value otherwise.
func (o *AddProjectGroupMemberV3Request) GetSubjectId() string {
	if o == nil || IsNil(o.SubjectId) {
		var ret string
		return ret
	}
	return *o.SubjectId
}

// GetSubjectIdOk returns a tuple with the SubjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddProjectGroupMemberV3Request) GetSubjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubjectId) {
		return nil, false
	}
	return o.SubjectId, true
}

// HasSubjectId returns a boolean if a field has been set.
func (o *AddProjectGroupMemberV3Request) HasSubjectId() bool {
	if o != nil && !IsNil(o.SubjectId) {
		return true
	}

	return false
}

// SetSubjectId gets a reference to the given string and assigns it to the SubjectId field.
func (o *AddProjectGroupMemberV3Request) SetSubjectId(v string) {
	o.SubjectId = &v
}

func (o AddProjectGroupMemberV3Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddProjectGroupMemberV3Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SubjectType) {
		toSerialize["subjectType"] = o.SubjectType
	}
	if !IsNil(o.SubjectId) {
		toSerialize["subjectId"] = o.SubjectId
	}
	return toSerialize, nil
}

type NullableAddProjectGroupMemberV3Request struct {
	value *AddProjectGroupMemberV3Request
	isSet bool
}

func (v NullableAddProjectGroupMemberV3Request) Get() *AddProjectGroupMemberV3Request {
	return v.value
}

func (v *NullableAddProjectGroupMemberV3Request) Set(val *AddProjectGroupMemberV3Request) {
	v.value = val
	v.isSet = true
}

func (v NullableAddProjectGroupMemberV3Request) IsSet() bool {
	return v.isSet
}

func (v *NullableAddProjectGroupMemberV3Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddProjectGroupMemberV3Request(val *AddProjectGroupMemberV3Request) *NullableAddProjectGroupMemberV3Request {
	return &NullableAddProjectGroupMemberV3Request{value: val, isSet: true}
}

func (v NullableAddProjectGroupMemberV3Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddProjectGroupMemberV3Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


