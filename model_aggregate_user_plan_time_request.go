/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AggregateUserPlanTimeRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AggregateUserPlanTimeRequest{}

// AggregateUserPlanTimeRequest struct for AggregateUserPlanTimeRequest
type AggregateUserPlanTimeRequest struct {
	// 查询的用户 ID
	UserIds []string `json:"userIds,omitempty"`
	// 当前用户 ID
	SubscriberId *string `json:"subscriberId,omitempty"`
	StartDate *string `json:"startDate,omitempty"`
	EndDate *string `json:"endDate,omitempty"`
	Filter *AggregateUserPlanTimeRequestFilter `json:"filter,omitempty"`
}

// NewAggregateUserPlanTimeRequest instantiates a new AggregateUserPlanTimeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAggregateUserPlanTimeRequest() *AggregateUserPlanTimeRequest {
	this := AggregateUserPlanTimeRequest{}
	return &this
}

// NewAggregateUserPlanTimeRequestWithDefaults instantiates a new AggregateUserPlanTimeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAggregateUserPlanTimeRequestWithDefaults() *AggregateUserPlanTimeRequest {
	this := AggregateUserPlanTimeRequest{}
	return &this
}

// GetUserIds returns the UserIds field value if set, zero value otherwise.
func (o *AggregateUserPlanTimeRequest) GetUserIds() []string {
	if o == nil || IsNil(o.UserIds) {
		var ret []string
		return ret
	}
	return o.UserIds
}

// GetUserIdsOk returns a tuple with the UserIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregateUserPlanTimeRequest) GetUserIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.UserIds) {
		return nil, false
	}
	return o.UserIds, true
}

// HasUserIds returns a boolean if a field has been set.
func (o *AggregateUserPlanTimeRequest) HasUserIds() bool {
	if o != nil && !IsNil(o.UserIds) {
		return true
	}

	return false
}

// SetUserIds gets a reference to the given []string and assigns it to the UserIds field.
func (o *AggregateUserPlanTimeRequest) SetUserIds(v []string) {
	o.UserIds = v
}

// GetSubscriberId returns the SubscriberId field value if set, zero value otherwise.
func (o *AggregateUserPlanTimeRequest) GetSubscriberId() string {
	if o == nil || IsNil(o.SubscriberId) {
		var ret string
		return ret
	}
	return *o.SubscriberId
}

// GetSubscriberIdOk returns a tuple with the SubscriberId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregateUserPlanTimeRequest) GetSubscriberIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriberId) {
		return nil, false
	}
	return o.SubscriberId, true
}

// HasSubscriberId returns a boolean if a field has been set.
func (o *AggregateUserPlanTimeRequest) HasSubscriberId() bool {
	if o != nil && !IsNil(o.SubscriberId) {
		return true
	}

	return false
}

// SetSubscriberId gets a reference to the given string and assigns it to the SubscriberId field.
func (o *AggregateUserPlanTimeRequest) SetSubscriberId(v string) {
	o.SubscriberId = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *AggregateUserPlanTimeRequest) GetStartDate() string {
	if o == nil || IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregateUserPlanTimeRequest) GetStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *AggregateUserPlanTimeRequest) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *AggregateUserPlanTimeRequest) SetStartDate(v string) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *AggregateUserPlanTimeRequest) GetEndDate() string {
	if o == nil || IsNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregateUserPlanTimeRequest) GetEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *AggregateUserPlanTimeRequest) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *AggregateUserPlanTimeRequest) SetEndDate(v string) {
	o.EndDate = &v
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *AggregateUserPlanTimeRequest) GetFilter() AggregateUserPlanTimeRequestFilter {
	if o == nil || IsNil(o.Filter) {
		var ret AggregateUserPlanTimeRequestFilter
		return ret
	}
	return *o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregateUserPlanTimeRequest) GetFilterOk() (*AggregateUserPlanTimeRequestFilter, bool) {
	if o == nil || IsNil(o.Filter) {
		return nil, false
	}
	return o.Filter, true
}

// HasFilter returns a boolean if a field has been set.
func (o *AggregateUserPlanTimeRequest) HasFilter() bool {
	if o != nil && !IsNil(o.Filter) {
		return true
	}

	return false
}

// SetFilter gets a reference to the given AggregateUserPlanTimeRequestFilter and assigns it to the Filter field.
func (o *AggregateUserPlanTimeRequest) SetFilter(v AggregateUserPlanTimeRequestFilter) {
	o.Filter = &v
}

func (o AggregateUserPlanTimeRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AggregateUserPlanTimeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserIds) {
		toSerialize["userIds"] = o.UserIds
	}
	if !IsNil(o.SubscriberId) {
		toSerialize["subscriberId"] = o.SubscriberId
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !IsNil(o.Filter) {
		toSerialize["filter"] = o.Filter
	}
	return toSerialize, nil
}

type NullableAggregateUserPlanTimeRequest struct {
	value *AggregateUserPlanTimeRequest
	isSet bool
}

func (v NullableAggregateUserPlanTimeRequest) Get() *AggregateUserPlanTimeRequest {
	return v.value
}

func (v *NullableAggregateUserPlanTimeRequest) Set(val *AggregateUserPlanTimeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAggregateUserPlanTimeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAggregateUserPlanTimeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAggregateUserPlanTimeRequest(val *AggregateUserPlanTimeRequest) *NullableAggregateUserPlanTimeRequest {
	return &NullableAggregateUserPlanTimeRequest{value: val, isSet: true}
}

func (v NullableAggregateUserPlanTimeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAggregateUserPlanTimeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


