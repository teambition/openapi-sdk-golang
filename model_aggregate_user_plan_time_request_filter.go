/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AggregateUserPlanTimeRequestFilter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AggregateUserPlanTimeRequestFilter{}

// AggregateUserPlanTimeRequestFilter struct for AggregateUserPlanTimeRequestFilter
type AggregateUserPlanTimeRequestFilter struct {
	Task *AggregateUserPlanTimeRequestFilterTask `json:"task,omitempty"`
	Project *AggregateUserPlanTimeRequestFilterProject `json:"project,omitempty"`
}

// NewAggregateUserPlanTimeRequestFilter instantiates a new AggregateUserPlanTimeRequestFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAggregateUserPlanTimeRequestFilter() *AggregateUserPlanTimeRequestFilter {
	this := AggregateUserPlanTimeRequestFilter{}
	return &this
}

// NewAggregateUserPlanTimeRequestFilterWithDefaults instantiates a new AggregateUserPlanTimeRequestFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAggregateUserPlanTimeRequestFilterWithDefaults() *AggregateUserPlanTimeRequestFilter {
	this := AggregateUserPlanTimeRequestFilter{}
	return &this
}

// GetTask returns the Task field value if set, zero value otherwise.
func (o *AggregateUserPlanTimeRequestFilter) GetTask() AggregateUserPlanTimeRequestFilterTask {
	if o == nil || IsNil(o.Task) {
		var ret AggregateUserPlanTimeRequestFilterTask
		return ret
	}
	return *o.Task
}

// GetTaskOk returns a tuple with the Task field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregateUserPlanTimeRequestFilter) GetTaskOk() (*AggregateUserPlanTimeRequestFilterTask, bool) {
	if o == nil || IsNil(o.Task) {
		return nil, false
	}
	return o.Task, true
}

// HasTask returns a boolean if a field has been set.
func (o *AggregateUserPlanTimeRequestFilter) HasTask() bool {
	if o != nil && !IsNil(o.Task) {
		return true
	}

	return false
}

// SetTask gets a reference to the given AggregateUserPlanTimeRequestFilterTask and assigns it to the Task field.
func (o *AggregateUserPlanTimeRequestFilter) SetTask(v AggregateUserPlanTimeRequestFilterTask) {
	o.Task = &v
}

// GetProject returns the Project field value if set, zero value otherwise.
func (o *AggregateUserPlanTimeRequestFilter) GetProject() AggregateUserPlanTimeRequestFilterProject {
	if o == nil || IsNil(o.Project) {
		var ret AggregateUserPlanTimeRequestFilterProject
		return ret
	}
	return *o.Project
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregateUserPlanTimeRequestFilter) GetProjectOk() (*AggregateUserPlanTimeRequestFilterProject, bool) {
	if o == nil || IsNil(o.Project) {
		return nil, false
	}
	return o.Project, true
}

// HasProject returns a boolean if a field has been set.
func (o *AggregateUserPlanTimeRequestFilter) HasProject() bool {
	if o != nil && !IsNil(o.Project) {
		return true
	}

	return false
}

// SetProject gets a reference to the given AggregateUserPlanTimeRequestFilterProject and assigns it to the Project field.
func (o *AggregateUserPlanTimeRequestFilter) SetProject(v AggregateUserPlanTimeRequestFilterProject) {
	o.Project = &v
}

func (o AggregateUserPlanTimeRequestFilter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AggregateUserPlanTimeRequestFilter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Task) {
		toSerialize["task"] = o.Task
	}
	if !IsNil(o.Project) {
		toSerialize["project"] = o.Project
	}
	return toSerialize, nil
}

type NullableAggregateUserPlanTimeRequestFilter struct {
	value *AggregateUserPlanTimeRequestFilter
	isSet bool
}

func (v NullableAggregateUserPlanTimeRequestFilter) Get() *AggregateUserPlanTimeRequestFilter {
	return v.value
}

func (v *NullableAggregateUserPlanTimeRequestFilter) Set(val *AggregateUserPlanTimeRequestFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableAggregateUserPlanTimeRequestFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableAggregateUserPlanTimeRequestFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAggregateUserPlanTimeRequestFilter(val *AggregateUserPlanTimeRequestFilter) *NullableAggregateUserPlanTimeRequestFilter {
	return &NullableAggregateUserPlanTimeRequestFilter{value: val, isSet: true}
}

func (v NullableAggregateUserPlanTimeRequestFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAggregateUserPlanTimeRequestFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


