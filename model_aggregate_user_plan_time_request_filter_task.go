/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AggregateUserPlanTimeRequestFilterTask type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AggregateUserPlanTimeRequestFilterTask{}

// AggregateUserPlanTimeRequestFilterTask struct for AggregateUserPlanTimeRequestFilterTask
type AggregateUserPlanTimeRequestFilterTask struct {
	// 是否已完成,1表示true,0表示false
	IsDone *int32 `json:"isDone,omitempty"`
	// 是否是回收站任务,1表示true,0表示false
	IsArchived *int32 `json:"isArchived,omitempty"`
	// 优先级
	Priority []float32 `json:"priority,omitempty"`
	Updated *string `json:"updated,omitempty"`
	DueDate *string `json:"dueDate,omitempty"`
	StartDate *string `json:"startDate,omitempty"`
	// 限定任务的所属项目的id
	ProjectId *string `json:"projectId,omitempty"`
	// 任务创建者id
	CreatorId []string `json:"creatorId,omitempty"`
	// 任务执行者id
	ExecutorId []string `json:"executorId,omitempty"`
	// 任务参与者id
	InvolveMembers []string `json:"involveMembers,omitempty"`
	// 任务类型id
	ScenarioId []string `json:"scenarioId,omitempty"`
	// 任务列表id
	StageId []string `json:"stageId,omitempty"`
	// 工作流状态id
	TaskflowstatusId []string `json:"taskflowstatusId,omitempty"`
}

// NewAggregateUserPlanTimeRequestFilterTask instantiates a new AggregateUserPlanTimeRequestFilterTask object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAggregateUserPlanTimeRequestFilterTask() *AggregateUserPlanTimeRequestFilterTask {
	this := AggregateUserPlanTimeRequestFilterTask{}
	return &this
}

// NewAggregateUserPlanTimeRequestFilterTaskWithDefaults instantiates a new AggregateUserPlanTimeRequestFilterTask object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAggregateUserPlanTimeRequestFilterTaskWithDefaults() *AggregateUserPlanTimeRequestFilterTask {
	this := AggregateUserPlanTimeRequestFilterTask{}
	return &this
}

// GetIsDone returns the IsDone field value if set, zero value otherwise.
func (o *AggregateUserPlanTimeRequestFilterTask) GetIsDone() int32 {
	if o == nil || IsNil(o.IsDone) {
		var ret int32
		return ret
	}
	return *o.IsDone
}

// GetIsDoneOk returns a tuple with the IsDone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregateUserPlanTimeRequestFilterTask) GetIsDoneOk() (*int32, bool) {
	if o == nil || IsNil(o.IsDone) {
		return nil, false
	}
	return o.IsDone, true
}

// HasIsDone returns a boolean if a field has been set.
func (o *AggregateUserPlanTimeRequestFilterTask) HasIsDone() bool {
	if o != nil && !IsNil(o.IsDone) {
		return true
	}

	return false
}

// SetIsDone gets a reference to the given int32 and assigns it to the IsDone field.
func (o *AggregateUserPlanTimeRequestFilterTask) SetIsDone(v int32) {
	o.IsDone = &v
}

// GetIsArchived returns the IsArchived field value if set, zero value otherwise.
func (o *AggregateUserPlanTimeRequestFilterTask) GetIsArchived() int32 {
	if o == nil || IsNil(o.IsArchived) {
		var ret int32
		return ret
	}
	return *o.IsArchived
}

// GetIsArchivedOk returns a tuple with the IsArchived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregateUserPlanTimeRequestFilterTask) GetIsArchivedOk() (*int32, bool) {
	if o == nil || IsNil(o.IsArchived) {
		return nil, false
	}
	return o.IsArchived, true
}

// HasIsArchived returns a boolean if a field has been set.
func (o *AggregateUserPlanTimeRequestFilterTask) HasIsArchived() bool {
	if o != nil && !IsNil(o.IsArchived) {
		return true
	}

	return false
}

// SetIsArchived gets a reference to the given int32 and assigns it to the IsArchived field.
func (o *AggregateUserPlanTimeRequestFilterTask) SetIsArchived(v int32) {
	o.IsArchived = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *AggregateUserPlanTimeRequestFilterTask) GetPriority() []float32 {
	if o == nil || IsNil(o.Priority) {
		var ret []float32
		return ret
	}
	return o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregateUserPlanTimeRequestFilterTask) GetPriorityOk() ([]float32, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *AggregateUserPlanTimeRequestFilterTask) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given []float32 and assigns it to the Priority field.
func (o *AggregateUserPlanTimeRequestFilterTask) SetPriority(v []float32) {
	o.Priority = v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *AggregateUserPlanTimeRequestFilterTask) GetUpdated() string {
	if o == nil || IsNil(o.Updated) {
		var ret string
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregateUserPlanTimeRequestFilterTask) GetUpdatedOk() (*string, bool) {
	if o == nil || IsNil(o.Updated) {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *AggregateUserPlanTimeRequestFilterTask) HasUpdated() bool {
	if o != nil && !IsNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given string and assigns it to the Updated field.
func (o *AggregateUserPlanTimeRequestFilterTask) SetUpdated(v string) {
	o.Updated = &v
}

// GetDueDate returns the DueDate field value if set, zero value otherwise.
func (o *AggregateUserPlanTimeRequestFilterTask) GetDueDate() string {
	if o == nil || IsNil(o.DueDate) {
		var ret string
		return ret
	}
	return *o.DueDate
}

// GetDueDateOk returns a tuple with the DueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregateUserPlanTimeRequestFilterTask) GetDueDateOk() (*string, bool) {
	if o == nil || IsNil(o.DueDate) {
		return nil, false
	}
	return o.DueDate, true
}

// HasDueDate returns a boolean if a field has been set.
func (o *AggregateUserPlanTimeRequestFilterTask) HasDueDate() bool {
	if o != nil && !IsNil(o.DueDate) {
		return true
	}

	return false
}

// SetDueDate gets a reference to the given string and assigns it to the DueDate field.
func (o *AggregateUserPlanTimeRequestFilterTask) SetDueDate(v string) {
	o.DueDate = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *AggregateUserPlanTimeRequestFilterTask) GetStartDate() string {
	if o == nil || IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregateUserPlanTimeRequestFilterTask) GetStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *AggregateUserPlanTimeRequestFilterTask) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *AggregateUserPlanTimeRequestFilterTask) SetStartDate(v string) {
	o.StartDate = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *AggregateUserPlanTimeRequestFilterTask) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId) {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregateUserPlanTimeRequestFilterTask) GetProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *AggregateUserPlanTimeRequestFilterTask) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *AggregateUserPlanTimeRequestFilterTask) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise.
func (o *AggregateUserPlanTimeRequestFilterTask) GetCreatorId() []string {
	if o == nil || IsNil(o.CreatorId) {
		var ret []string
		return ret
	}
	return o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregateUserPlanTimeRequestFilterTask) GetCreatorIdOk() ([]string, bool) {
	if o == nil || IsNil(o.CreatorId) {
		return nil, false
	}
	return o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *AggregateUserPlanTimeRequestFilterTask) HasCreatorId() bool {
	if o != nil && !IsNil(o.CreatorId) {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given []string and assigns it to the CreatorId field.
func (o *AggregateUserPlanTimeRequestFilterTask) SetCreatorId(v []string) {
	o.CreatorId = v
}

// GetExecutorId returns the ExecutorId field value if set, zero value otherwise.
func (o *AggregateUserPlanTimeRequestFilterTask) GetExecutorId() []string {
	if o == nil || IsNil(o.ExecutorId) {
		var ret []string
		return ret
	}
	return o.ExecutorId
}

// GetExecutorIdOk returns a tuple with the ExecutorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregateUserPlanTimeRequestFilterTask) GetExecutorIdOk() ([]string, bool) {
	if o == nil || IsNil(o.ExecutorId) {
		return nil, false
	}
	return o.ExecutorId, true
}

// HasExecutorId returns a boolean if a field has been set.
func (o *AggregateUserPlanTimeRequestFilterTask) HasExecutorId() bool {
	if o != nil && !IsNil(o.ExecutorId) {
		return true
	}

	return false
}

// SetExecutorId gets a reference to the given []string and assigns it to the ExecutorId field.
func (o *AggregateUserPlanTimeRequestFilterTask) SetExecutorId(v []string) {
	o.ExecutorId = v
}

// GetInvolveMembers returns the InvolveMembers field value if set, zero value otherwise.
func (o *AggregateUserPlanTimeRequestFilterTask) GetInvolveMembers() []string {
	if o == nil || IsNil(o.InvolveMembers) {
		var ret []string
		return ret
	}
	return o.InvolveMembers
}

// GetInvolveMembersOk returns a tuple with the InvolveMembers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregateUserPlanTimeRequestFilterTask) GetInvolveMembersOk() ([]string, bool) {
	if o == nil || IsNil(o.InvolveMembers) {
		return nil, false
	}
	return o.InvolveMembers, true
}

// HasInvolveMembers returns a boolean if a field has been set.
func (o *AggregateUserPlanTimeRequestFilterTask) HasInvolveMembers() bool {
	if o != nil && !IsNil(o.InvolveMembers) {
		return true
	}

	return false
}

// SetInvolveMembers gets a reference to the given []string and assigns it to the InvolveMembers field.
func (o *AggregateUserPlanTimeRequestFilterTask) SetInvolveMembers(v []string) {
	o.InvolveMembers = v
}

// GetScenarioId returns the ScenarioId field value if set, zero value otherwise.
func (o *AggregateUserPlanTimeRequestFilterTask) GetScenarioId() []string {
	if o == nil || IsNil(o.ScenarioId) {
		var ret []string
		return ret
	}
	return o.ScenarioId
}

// GetScenarioIdOk returns a tuple with the ScenarioId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregateUserPlanTimeRequestFilterTask) GetScenarioIdOk() ([]string, bool) {
	if o == nil || IsNil(o.ScenarioId) {
		return nil, false
	}
	return o.ScenarioId, true
}

// HasScenarioId returns a boolean if a field has been set.
func (o *AggregateUserPlanTimeRequestFilterTask) HasScenarioId() bool {
	if o != nil && !IsNil(o.ScenarioId) {
		return true
	}

	return false
}

// SetScenarioId gets a reference to the given []string and assigns it to the ScenarioId field.
func (o *AggregateUserPlanTimeRequestFilterTask) SetScenarioId(v []string) {
	o.ScenarioId = v
}

// GetStageId returns the StageId field value if set, zero value otherwise.
func (o *AggregateUserPlanTimeRequestFilterTask) GetStageId() []string {
	if o == nil || IsNil(o.StageId) {
		var ret []string
		return ret
	}
	return o.StageId
}

// GetStageIdOk returns a tuple with the StageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregateUserPlanTimeRequestFilterTask) GetStageIdOk() ([]string, bool) {
	if o == nil || IsNil(o.StageId) {
		return nil, false
	}
	return o.StageId, true
}

// HasStageId returns a boolean if a field has been set.
func (o *AggregateUserPlanTimeRequestFilterTask) HasStageId() bool {
	if o != nil && !IsNil(o.StageId) {
		return true
	}

	return false
}

// SetStageId gets a reference to the given []string and assigns it to the StageId field.
func (o *AggregateUserPlanTimeRequestFilterTask) SetStageId(v []string) {
	o.StageId = v
}

// GetTaskflowstatusId returns the TaskflowstatusId field value if set, zero value otherwise.
func (o *AggregateUserPlanTimeRequestFilterTask) GetTaskflowstatusId() []string {
	if o == nil || IsNil(o.TaskflowstatusId) {
		var ret []string
		return ret
	}
	return o.TaskflowstatusId
}

// GetTaskflowstatusIdOk returns a tuple with the TaskflowstatusId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregateUserPlanTimeRequestFilterTask) GetTaskflowstatusIdOk() ([]string, bool) {
	if o == nil || IsNil(o.TaskflowstatusId) {
		return nil, false
	}
	return o.TaskflowstatusId, true
}

// HasTaskflowstatusId returns a boolean if a field has been set.
func (o *AggregateUserPlanTimeRequestFilterTask) HasTaskflowstatusId() bool {
	if o != nil && !IsNil(o.TaskflowstatusId) {
		return true
	}

	return false
}

// SetTaskflowstatusId gets a reference to the given []string and assigns it to the TaskflowstatusId field.
func (o *AggregateUserPlanTimeRequestFilterTask) SetTaskflowstatusId(v []string) {
	o.TaskflowstatusId = v
}

func (o AggregateUserPlanTimeRequestFilterTask) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AggregateUserPlanTimeRequestFilterTask) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsDone) {
		toSerialize["isDone"] = o.IsDone
	}
	if !IsNil(o.IsArchived) {
		toSerialize["isArchived"] = o.IsArchived
	}
	if !IsNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}
	if !IsNil(o.Updated) {
		toSerialize["updated"] = o.Updated
	}
	if !IsNil(o.DueDate) {
		toSerialize["dueDate"] = o.DueDate
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.ProjectId) {
		toSerialize["projectId"] = o.ProjectId
	}
	if !IsNil(o.CreatorId) {
		toSerialize["creatorId"] = o.CreatorId
	}
	if !IsNil(o.ExecutorId) {
		toSerialize["executorId"] = o.ExecutorId
	}
	if !IsNil(o.InvolveMembers) {
		toSerialize["involveMembers"] = o.InvolveMembers
	}
	if !IsNil(o.ScenarioId) {
		toSerialize["scenarioId"] = o.ScenarioId
	}
	if !IsNil(o.StageId) {
		toSerialize["stageId"] = o.StageId
	}
	if !IsNil(o.TaskflowstatusId) {
		toSerialize["taskflowstatusId"] = o.TaskflowstatusId
	}
	return toSerialize, nil
}

type NullableAggregateUserPlanTimeRequestFilterTask struct {
	value *AggregateUserPlanTimeRequestFilterTask
	isSet bool
}

func (v NullableAggregateUserPlanTimeRequestFilterTask) Get() *AggregateUserPlanTimeRequestFilterTask {
	return v.value
}

func (v *NullableAggregateUserPlanTimeRequestFilterTask) Set(val *AggregateUserPlanTimeRequestFilterTask) {
	v.value = val
	v.isSet = true
}

func (v NullableAggregateUserPlanTimeRequestFilterTask) IsSet() bool {
	return v.isSet
}

func (v *NullableAggregateUserPlanTimeRequestFilterTask) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAggregateUserPlanTimeRequestFilterTask(val *AggregateUserPlanTimeRequestFilterTask) *NullableAggregateUserPlanTimeRequestFilterTask {
	return &NullableAggregateUserPlanTimeRequestFilterTask{value: val, isSet: true}
}

func (v NullableAggregateUserPlanTimeRequestFilterTask) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAggregateUserPlanTimeRequestFilterTask) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


