/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AggregateUserWorkTimeResponseResultInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AggregateUserWorkTimeResponseResultInner{}

// AggregateUserWorkTimeResponseResultInner struct for AggregateUserWorkTimeResponseResultInner
type AggregateUserWorkTimeResponseResultInner struct {
	// 用户id
	UserId *string `json:"userId,omitempty"`
	// 工时所属日期字符串
	Date *string `json:"date,omitempty"`
	// 总计工时时间(单位:毫秒)
	Worktime *float32 `json:"worktime,omitempty"`
	// 计划工时记录数量
	Count *float32 `json:"count,omitempty"`
	// 工时记录信息
	Objects []AggregateUserWorkTimeResponseResultInnerObjectsInner `json:"objects,omitempty"`
	ObjectIds []string `json:"objectIds,omitempty"`
	SubmitterIds []string `json:"submitterIds,omitempty"`
}

// NewAggregateUserWorkTimeResponseResultInner instantiates a new AggregateUserWorkTimeResponseResultInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAggregateUserWorkTimeResponseResultInner() *AggregateUserWorkTimeResponseResultInner {
	this := AggregateUserWorkTimeResponseResultInner{}
	return &this
}

// NewAggregateUserWorkTimeResponseResultInnerWithDefaults instantiates a new AggregateUserWorkTimeResponseResultInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAggregateUserWorkTimeResponseResultInnerWithDefaults() *AggregateUserWorkTimeResponseResultInner {
	this := AggregateUserWorkTimeResponseResultInner{}
	return &this
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *AggregateUserWorkTimeResponseResultInner) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregateUserWorkTimeResponseResultInner) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *AggregateUserWorkTimeResponseResultInner) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *AggregateUserWorkTimeResponseResultInner) SetUserId(v string) {
	o.UserId = &v
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *AggregateUserWorkTimeResponseResultInner) GetDate() string {
	if o == nil || IsNil(o.Date) {
		var ret string
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregateUserWorkTimeResponseResultInner) GetDateOk() (*string, bool) {
	if o == nil || IsNil(o.Date) {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *AggregateUserWorkTimeResponseResultInner) HasDate() bool {
	if o != nil && !IsNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given string and assigns it to the Date field.
func (o *AggregateUserWorkTimeResponseResultInner) SetDate(v string) {
	o.Date = &v
}

// GetWorktime returns the Worktime field value if set, zero value otherwise.
func (o *AggregateUserWorkTimeResponseResultInner) GetWorktime() float32 {
	if o == nil || IsNil(o.Worktime) {
		var ret float32
		return ret
	}
	return *o.Worktime
}

// GetWorktimeOk returns a tuple with the Worktime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregateUserWorkTimeResponseResultInner) GetWorktimeOk() (*float32, bool) {
	if o == nil || IsNil(o.Worktime) {
		return nil, false
	}
	return o.Worktime, true
}

// HasWorktime returns a boolean if a field has been set.
func (o *AggregateUserWorkTimeResponseResultInner) HasWorktime() bool {
	if o != nil && !IsNil(o.Worktime) {
		return true
	}

	return false
}

// SetWorktime gets a reference to the given float32 and assigns it to the Worktime field.
func (o *AggregateUserWorkTimeResponseResultInner) SetWorktime(v float32) {
	o.Worktime = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *AggregateUserWorkTimeResponseResultInner) GetCount() float32 {
	if o == nil || IsNil(o.Count) {
		var ret float32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregateUserWorkTimeResponseResultInner) GetCountOk() (*float32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *AggregateUserWorkTimeResponseResultInner) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given float32 and assigns it to the Count field.
func (o *AggregateUserWorkTimeResponseResultInner) SetCount(v float32) {
	o.Count = &v
}

// GetObjects returns the Objects field value if set, zero value otherwise.
func (o *AggregateUserWorkTimeResponseResultInner) GetObjects() []AggregateUserWorkTimeResponseResultInnerObjectsInner {
	if o == nil || IsNil(o.Objects) {
		var ret []AggregateUserWorkTimeResponseResultInnerObjectsInner
		return ret
	}
	return o.Objects
}

// GetObjectsOk returns a tuple with the Objects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregateUserWorkTimeResponseResultInner) GetObjectsOk() ([]AggregateUserWorkTimeResponseResultInnerObjectsInner, bool) {
	if o == nil || IsNil(o.Objects) {
		return nil, false
	}
	return o.Objects, true
}

// HasObjects returns a boolean if a field has been set.
func (o *AggregateUserWorkTimeResponseResultInner) HasObjects() bool {
	if o != nil && !IsNil(o.Objects) {
		return true
	}

	return false
}

// SetObjects gets a reference to the given []AggregateUserWorkTimeResponseResultInnerObjectsInner and assigns it to the Objects field.
func (o *AggregateUserWorkTimeResponseResultInner) SetObjects(v []AggregateUserWorkTimeResponseResultInnerObjectsInner) {
	o.Objects = v
}

// GetObjectIds returns the ObjectIds field value if set, zero value otherwise.
func (o *AggregateUserWorkTimeResponseResultInner) GetObjectIds() []string {
	if o == nil || IsNil(o.ObjectIds) {
		var ret []string
		return ret
	}
	return o.ObjectIds
}

// GetObjectIdsOk returns a tuple with the ObjectIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregateUserWorkTimeResponseResultInner) GetObjectIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ObjectIds) {
		return nil, false
	}
	return o.ObjectIds, true
}

// HasObjectIds returns a boolean if a field has been set.
func (o *AggregateUserWorkTimeResponseResultInner) HasObjectIds() bool {
	if o != nil && !IsNil(o.ObjectIds) {
		return true
	}

	return false
}

// SetObjectIds gets a reference to the given []string and assigns it to the ObjectIds field.
func (o *AggregateUserWorkTimeResponseResultInner) SetObjectIds(v []string) {
	o.ObjectIds = v
}

// GetSubmitterIds returns the SubmitterIds field value if set, zero value otherwise.
func (o *AggregateUserWorkTimeResponseResultInner) GetSubmitterIds() []string {
	if o == nil || IsNil(o.SubmitterIds) {
		var ret []string
		return ret
	}
	return o.SubmitterIds
}

// GetSubmitterIdsOk returns a tuple with the SubmitterIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregateUserWorkTimeResponseResultInner) GetSubmitterIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.SubmitterIds) {
		return nil, false
	}
	return o.SubmitterIds, true
}

// HasSubmitterIds returns a boolean if a field has been set.
func (o *AggregateUserWorkTimeResponseResultInner) HasSubmitterIds() bool {
	if o != nil && !IsNil(o.SubmitterIds) {
		return true
	}

	return false
}

// SetSubmitterIds gets a reference to the given []string and assigns it to the SubmitterIds field.
func (o *AggregateUserWorkTimeResponseResultInner) SetSubmitterIds(v []string) {
	o.SubmitterIds = v
}

func (o AggregateUserWorkTimeResponseResultInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AggregateUserWorkTimeResponseResultInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	if !IsNil(o.Date) {
		toSerialize["date"] = o.Date
	}
	if !IsNil(o.Worktime) {
		toSerialize["worktime"] = o.Worktime
	}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.Objects) {
		toSerialize["objects"] = o.Objects
	}
	if !IsNil(o.ObjectIds) {
		toSerialize["objectIds"] = o.ObjectIds
	}
	if !IsNil(o.SubmitterIds) {
		toSerialize["submitterIds"] = o.SubmitterIds
	}
	return toSerialize, nil
}

type NullableAggregateUserWorkTimeResponseResultInner struct {
	value *AggregateUserWorkTimeResponseResultInner
	isSet bool
}

func (v NullableAggregateUserWorkTimeResponseResultInner) Get() *AggregateUserWorkTimeResponseResultInner {
	return v.value
}

func (v *NullableAggregateUserWorkTimeResponseResultInner) Set(val *AggregateUserWorkTimeResponseResultInner) {
	v.value = val
	v.isSet = true
}

func (v NullableAggregateUserWorkTimeResponseResultInner) IsSet() bool {
	return v.isSet
}

func (v *NullableAggregateUserWorkTimeResponseResultInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAggregateUserWorkTimeResponseResultInner(val *AggregateUserWorkTimeResponseResultInner) *NullableAggregateUserWorkTimeResponseResultInner {
	return &NullableAggregateUserWorkTimeResponseResultInner{value: val, isSet: true}
}

func (v NullableAggregateUserWorkTimeResponseResultInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAggregateUserWorkTimeResponseResultInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


