/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BatchGetFileDetailsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BatchGetFileDetailsRequest{}

// BatchGetFileDetailsRequest struct for BatchGetFileDetailsRequest
type BatchGetFileDetailsRequest struct {
	// 是否获取文件下载地址
	NeedSign *bool `json:"needSign,omitempty"`
	// 文件资源标识 - 任务评论附件: `task:{taskId}/activity:{activityId}/file:{fileId}` - 任务评论附件的某个版本: `task:{taskId}/activity:{activityId}/file:{fileId}/version:{versionId}` - 任务文件字段: `task:{taskId}/cf:{cfId}/file:{fileId}` - 任务文件字段的某个版本: `task:{taskId}/cf:{cfId}/file:{fileId}/version:{versionId}` - 项目文件: `work:{workId}` - 项目文件的某个版本: `work:{workId}/version:{versionId}` 
	ResourceIds []string `json:"resourceIds,omitempty"`
	// 文件下载地址过期时间（默认30分钟后过期,最长7天）
	ExpireAfterSeconds *float32 `json:"expireAfterSeconds,omitempty"`
}

// NewBatchGetFileDetailsRequest instantiates a new BatchGetFileDetailsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBatchGetFileDetailsRequest() *BatchGetFileDetailsRequest {
	this := BatchGetFileDetailsRequest{}
	var needSign bool = false
	this.NeedSign = &needSign
	var expireAfterSeconds float32 = 1800
	this.ExpireAfterSeconds = &expireAfterSeconds
	return &this
}

// NewBatchGetFileDetailsRequestWithDefaults instantiates a new BatchGetFileDetailsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBatchGetFileDetailsRequestWithDefaults() *BatchGetFileDetailsRequest {
	this := BatchGetFileDetailsRequest{}
	var needSign bool = false
	this.NeedSign = &needSign
	var expireAfterSeconds float32 = 1800
	this.ExpireAfterSeconds = &expireAfterSeconds
	return &this
}

// GetNeedSign returns the NeedSign field value if set, zero value otherwise.
func (o *BatchGetFileDetailsRequest) GetNeedSign() bool {
	if o == nil || IsNil(o.NeedSign) {
		var ret bool
		return ret
	}
	return *o.NeedSign
}

// GetNeedSignOk returns a tuple with the NeedSign field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchGetFileDetailsRequest) GetNeedSignOk() (*bool, bool) {
	if o == nil || IsNil(o.NeedSign) {
		return nil, false
	}
	return o.NeedSign, true
}

// HasNeedSign returns a boolean if a field has been set.
func (o *BatchGetFileDetailsRequest) HasNeedSign() bool {
	if o != nil && !IsNil(o.NeedSign) {
		return true
	}

	return false
}

// SetNeedSign gets a reference to the given bool and assigns it to the NeedSign field.
func (o *BatchGetFileDetailsRequest) SetNeedSign(v bool) {
	o.NeedSign = &v
}

// GetResourceIds returns the ResourceIds field value if set, zero value otherwise.
func (o *BatchGetFileDetailsRequest) GetResourceIds() []string {
	if o == nil || IsNil(o.ResourceIds) {
		var ret []string
		return ret
	}
	return o.ResourceIds
}

// GetResourceIdsOk returns a tuple with the ResourceIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchGetFileDetailsRequest) GetResourceIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ResourceIds) {
		return nil, false
	}
	return o.ResourceIds, true
}

// HasResourceIds returns a boolean if a field has been set.
func (o *BatchGetFileDetailsRequest) HasResourceIds() bool {
	if o != nil && !IsNil(o.ResourceIds) {
		return true
	}

	return false
}

// SetResourceIds gets a reference to the given []string and assigns it to the ResourceIds field.
func (o *BatchGetFileDetailsRequest) SetResourceIds(v []string) {
	o.ResourceIds = v
}

// GetExpireAfterSeconds returns the ExpireAfterSeconds field value if set, zero value otherwise.
func (o *BatchGetFileDetailsRequest) GetExpireAfterSeconds() float32 {
	if o == nil || IsNil(o.ExpireAfterSeconds) {
		var ret float32
		return ret
	}
	return *o.ExpireAfterSeconds
}

// GetExpireAfterSecondsOk returns a tuple with the ExpireAfterSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchGetFileDetailsRequest) GetExpireAfterSecondsOk() (*float32, bool) {
	if o == nil || IsNil(o.ExpireAfterSeconds) {
		return nil, false
	}
	return o.ExpireAfterSeconds, true
}

// HasExpireAfterSeconds returns a boolean if a field has been set.
func (o *BatchGetFileDetailsRequest) HasExpireAfterSeconds() bool {
	if o != nil && !IsNil(o.ExpireAfterSeconds) {
		return true
	}

	return false
}

// SetExpireAfterSeconds gets a reference to the given float32 and assigns it to the ExpireAfterSeconds field.
func (o *BatchGetFileDetailsRequest) SetExpireAfterSeconds(v float32) {
	o.ExpireAfterSeconds = &v
}

func (o BatchGetFileDetailsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BatchGetFileDetailsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NeedSign) {
		toSerialize["needSign"] = o.NeedSign
	}
	if !IsNil(o.ResourceIds) {
		toSerialize["resourceIds"] = o.ResourceIds
	}
	if !IsNil(o.ExpireAfterSeconds) {
		toSerialize["expireAfterSeconds"] = o.ExpireAfterSeconds
	}
	return toSerialize, nil
}

type NullableBatchGetFileDetailsRequest struct {
	value *BatchGetFileDetailsRequest
	isSet bool
}

func (v NullableBatchGetFileDetailsRequest) Get() *BatchGetFileDetailsRequest {
	return v.value
}

func (v *NullableBatchGetFileDetailsRequest) Set(val *BatchGetFileDetailsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBatchGetFileDetailsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBatchGetFileDetailsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBatchGetFileDetailsRequest(val *BatchGetFileDetailsRequest) *NullableBatchGetFileDetailsRequest {
	return &NullableBatchGetFileDetailsRequest{value: val, isSet: true}
}

func (v NullableBatchGetFileDetailsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBatchGetFileDetailsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


