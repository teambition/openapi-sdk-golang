/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BatchGetFileDetailsResponseResultInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BatchGetFileDetailsResponseResultInner{}

// BatchGetFileDetailsResponseResultInner struct for BatchGetFileDetailsResponseResultInner
type BatchGetFileDetailsResponseResultInner struct {
	// 文件 id
	Id *string `json:"id,omitempty"`
	// 文件名
	FileName *string `json:"fileName,omitempty"`
	// 对象类型
	ObjectType *string `json:"objectType,omitempty"`
	// 文件大小
	FileSize *int32 `json:"fileSize,omitempty"`
	// 文件类型
	MimeType *string `json:"mimeType,omitempty"`
	// 创建时间
	Created *string `json:"created,omitempty"`
	// 更新时间
	Updated *string `json:"updated,omitempty"`
	// 创建者 id
	CreatorId *string `json:"creatorId,omitempty"`
	// 缩略图
	ThumbnailUrl *string `json:"thumbnailUrl,omitempty"`
	// 下载地址
	DownloadUrl *string `json:"downloadUrl,omitempty"`
	// 资源标识
	ResourceId *string `json:"resourceId,omitempty"`
	// 文件Token，用于提交到其他资源的文件字段或者备注中使用
	FileToken *string `json:"fileToken,omitempty"`
}

// NewBatchGetFileDetailsResponseResultInner instantiates a new BatchGetFileDetailsResponseResultInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBatchGetFileDetailsResponseResultInner() *BatchGetFileDetailsResponseResultInner {
	this := BatchGetFileDetailsResponseResultInner{}
	return &this
}

// NewBatchGetFileDetailsResponseResultInnerWithDefaults instantiates a new BatchGetFileDetailsResponseResultInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBatchGetFileDetailsResponseResultInnerWithDefaults() *BatchGetFileDetailsResponseResultInner {
	this := BatchGetFileDetailsResponseResultInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *BatchGetFileDetailsResponseResultInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchGetFileDetailsResponseResultInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *BatchGetFileDetailsResponseResultInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *BatchGetFileDetailsResponseResultInner) SetId(v string) {
	o.Id = &v
}

// GetFileName returns the FileName field value if set, zero value otherwise.
func (o *BatchGetFileDetailsResponseResultInner) GetFileName() string {
	if o == nil || IsNil(o.FileName) {
		var ret string
		return ret
	}
	return *o.FileName
}

// GetFileNameOk returns a tuple with the FileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchGetFileDetailsResponseResultInner) GetFileNameOk() (*string, bool) {
	if o == nil || IsNil(o.FileName) {
		return nil, false
	}
	return o.FileName, true
}

// HasFileName returns a boolean if a field has been set.
func (o *BatchGetFileDetailsResponseResultInner) HasFileName() bool {
	if o != nil && !IsNil(o.FileName) {
		return true
	}

	return false
}

// SetFileName gets a reference to the given string and assigns it to the FileName field.
func (o *BatchGetFileDetailsResponseResultInner) SetFileName(v string) {
	o.FileName = &v
}

// GetObjectType returns the ObjectType field value if set, zero value otherwise.
func (o *BatchGetFileDetailsResponseResultInner) GetObjectType() string {
	if o == nil || IsNil(o.ObjectType) {
		var ret string
		return ret
	}
	return *o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchGetFileDetailsResponseResultInner) GetObjectTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ObjectType) {
		return nil, false
	}
	return o.ObjectType, true
}

// HasObjectType returns a boolean if a field has been set.
func (o *BatchGetFileDetailsResponseResultInner) HasObjectType() bool {
	if o != nil && !IsNil(o.ObjectType) {
		return true
	}

	return false
}

// SetObjectType gets a reference to the given string and assigns it to the ObjectType field.
func (o *BatchGetFileDetailsResponseResultInner) SetObjectType(v string) {
	o.ObjectType = &v
}

// GetFileSize returns the FileSize field value if set, zero value otherwise.
func (o *BatchGetFileDetailsResponseResultInner) GetFileSize() int32 {
	if o == nil || IsNil(o.FileSize) {
		var ret int32
		return ret
	}
	return *o.FileSize
}

// GetFileSizeOk returns a tuple with the FileSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchGetFileDetailsResponseResultInner) GetFileSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.FileSize) {
		return nil, false
	}
	return o.FileSize, true
}

// HasFileSize returns a boolean if a field has been set.
func (o *BatchGetFileDetailsResponseResultInner) HasFileSize() bool {
	if o != nil && !IsNil(o.FileSize) {
		return true
	}

	return false
}

// SetFileSize gets a reference to the given int32 and assigns it to the FileSize field.
func (o *BatchGetFileDetailsResponseResultInner) SetFileSize(v int32) {
	o.FileSize = &v
}

// GetMimeType returns the MimeType field value if set, zero value otherwise.
func (o *BatchGetFileDetailsResponseResultInner) GetMimeType() string {
	if o == nil || IsNil(o.MimeType) {
		var ret string
		return ret
	}
	return *o.MimeType
}

// GetMimeTypeOk returns a tuple with the MimeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchGetFileDetailsResponseResultInner) GetMimeTypeOk() (*string, bool) {
	if o == nil || IsNil(o.MimeType) {
		return nil, false
	}
	return o.MimeType, true
}

// HasMimeType returns a boolean if a field has been set.
func (o *BatchGetFileDetailsResponseResultInner) HasMimeType() bool {
	if o != nil && !IsNil(o.MimeType) {
		return true
	}

	return false
}

// SetMimeType gets a reference to the given string and assigns it to the MimeType field.
func (o *BatchGetFileDetailsResponseResultInner) SetMimeType(v string) {
	o.MimeType = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *BatchGetFileDetailsResponseResultInner) GetCreated() string {
	if o == nil || IsNil(o.Created) {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchGetFileDetailsResponseResultInner) GetCreatedOk() (*string, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *BatchGetFileDetailsResponseResultInner) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *BatchGetFileDetailsResponseResultInner) SetCreated(v string) {
	o.Created = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *BatchGetFileDetailsResponseResultInner) GetUpdated() string {
	if o == nil || IsNil(o.Updated) {
		var ret string
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchGetFileDetailsResponseResultInner) GetUpdatedOk() (*string, bool) {
	if o == nil || IsNil(o.Updated) {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *BatchGetFileDetailsResponseResultInner) HasUpdated() bool {
	if o != nil && !IsNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given string and assigns it to the Updated field.
func (o *BatchGetFileDetailsResponseResultInner) SetUpdated(v string) {
	o.Updated = &v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise.
func (o *BatchGetFileDetailsResponseResultInner) GetCreatorId() string {
	if o == nil || IsNil(o.CreatorId) {
		var ret string
		return ret
	}
	return *o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchGetFileDetailsResponseResultInner) GetCreatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorId) {
		return nil, false
	}
	return o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *BatchGetFileDetailsResponseResultInner) HasCreatorId() bool {
	if o != nil && !IsNil(o.CreatorId) {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given string and assigns it to the CreatorId field.
func (o *BatchGetFileDetailsResponseResultInner) SetCreatorId(v string) {
	o.CreatorId = &v
}

// GetThumbnailUrl returns the ThumbnailUrl field value if set, zero value otherwise.
func (o *BatchGetFileDetailsResponseResultInner) GetThumbnailUrl() string {
	if o == nil || IsNil(o.ThumbnailUrl) {
		var ret string
		return ret
	}
	return *o.ThumbnailUrl
}

// GetThumbnailUrlOk returns a tuple with the ThumbnailUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchGetFileDetailsResponseResultInner) GetThumbnailUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ThumbnailUrl) {
		return nil, false
	}
	return o.ThumbnailUrl, true
}

// HasThumbnailUrl returns a boolean if a field has been set.
func (o *BatchGetFileDetailsResponseResultInner) HasThumbnailUrl() bool {
	if o != nil && !IsNil(o.ThumbnailUrl) {
		return true
	}

	return false
}

// SetThumbnailUrl gets a reference to the given string and assigns it to the ThumbnailUrl field.
func (o *BatchGetFileDetailsResponseResultInner) SetThumbnailUrl(v string) {
	o.ThumbnailUrl = &v
}

// GetDownloadUrl returns the DownloadUrl field value if set, zero value otherwise.
func (o *BatchGetFileDetailsResponseResultInner) GetDownloadUrl() string {
	if o == nil || IsNil(o.DownloadUrl) {
		var ret string
		return ret
	}
	return *o.DownloadUrl
}

// GetDownloadUrlOk returns a tuple with the DownloadUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchGetFileDetailsResponseResultInner) GetDownloadUrlOk() (*string, bool) {
	if o == nil || IsNil(o.DownloadUrl) {
		return nil, false
	}
	return o.DownloadUrl, true
}

// HasDownloadUrl returns a boolean if a field has been set.
func (o *BatchGetFileDetailsResponseResultInner) HasDownloadUrl() bool {
	if o != nil && !IsNil(o.DownloadUrl) {
		return true
	}

	return false
}

// SetDownloadUrl gets a reference to the given string and assigns it to the DownloadUrl field.
func (o *BatchGetFileDetailsResponseResultInner) SetDownloadUrl(v string) {
	o.DownloadUrl = &v
}

// GetResourceId returns the ResourceId field value if set, zero value otherwise.
func (o *BatchGetFileDetailsResponseResultInner) GetResourceId() string {
	if o == nil || IsNil(o.ResourceId) {
		var ret string
		return ret
	}
	return *o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchGetFileDetailsResponseResultInner) GetResourceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceId) {
		return nil, false
	}
	return o.ResourceId, true
}

// HasResourceId returns a boolean if a field has been set.
func (o *BatchGetFileDetailsResponseResultInner) HasResourceId() bool {
	if o != nil && !IsNil(o.ResourceId) {
		return true
	}

	return false
}

// SetResourceId gets a reference to the given string and assigns it to the ResourceId field.
func (o *BatchGetFileDetailsResponseResultInner) SetResourceId(v string) {
	o.ResourceId = &v
}

// GetFileToken returns the FileToken field value if set, zero value otherwise.
func (o *BatchGetFileDetailsResponseResultInner) GetFileToken() string {
	if o == nil || IsNil(o.FileToken) {
		var ret string
		return ret
	}
	return *o.FileToken
}

// GetFileTokenOk returns a tuple with the FileToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchGetFileDetailsResponseResultInner) GetFileTokenOk() (*string, bool) {
	if o == nil || IsNil(o.FileToken) {
		return nil, false
	}
	return o.FileToken, true
}

// HasFileToken returns a boolean if a field has been set.
func (o *BatchGetFileDetailsResponseResultInner) HasFileToken() bool {
	if o != nil && !IsNil(o.FileToken) {
		return true
	}

	return false
}

// SetFileToken gets a reference to the given string and assigns it to the FileToken field.
func (o *BatchGetFileDetailsResponseResultInner) SetFileToken(v string) {
	o.FileToken = &v
}

func (o BatchGetFileDetailsResponseResultInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BatchGetFileDetailsResponseResultInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.FileName) {
		toSerialize["fileName"] = o.FileName
	}
	if !IsNil(o.ObjectType) {
		toSerialize["objectType"] = o.ObjectType
	}
	if !IsNil(o.FileSize) {
		toSerialize["fileSize"] = o.FileSize
	}
	if !IsNil(o.MimeType) {
		toSerialize["mimeType"] = o.MimeType
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.Updated) {
		toSerialize["updated"] = o.Updated
	}
	if !IsNil(o.CreatorId) {
		toSerialize["creatorId"] = o.CreatorId
	}
	if !IsNil(o.ThumbnailUrl) {
		toSerialize["thumbnailUrl"] = o.ThumbnailUrl
	}
	if !IsNil(o.DownloadUrl) {
		toSerialize["downloadUrl"] = o.DownloadUrl
	}
	if !IsNil(o.ResourceId) {
		toSerialize["resourceId"] = o.ResourceId
	}
	if !IsNil(o.FileToken) {
		toSerialize["fileToken"] = o.FileToken
	}
	return toSerialize, nil
}

type NullableBatchGetFileDetailsResponseResultInner struct {
	value *BatchGetFileDetailsResponseResultInner
	isSet bool
}

func (v NullableBatchGetFileDetailsResponseResultInner) Get() *BatchGetFileDetailsResponseResultInner {
	return v.value
}

func (v *NullableBatchGetFileDetailsResponseResultInner) Set(val *BatchGetFileDetailsResponseResultInner) {
	v.value = val
	v.isSet = true
}

func (v NullableBatchGetFileDetailsResponseResultInner) IsSet() bool {
	return v.isSet
}

func (v *NullableBatchGetFileDetailsResponseResultInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBatchGetFileDetailsResponseResultInner(val *BatchGetFileDetailsResponseResultInner) *NullableBatchGetFileDetailsResponseResultInner {
	return &NullableBatchGetFileDetailsResponseResultInner{value: val, isSet: true}
}

func (v NullableBatchGetFileDetailsResponseResultInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBatchGetFileDetailsResponseResultInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


