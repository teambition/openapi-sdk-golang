/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BatchGetGroupMembersRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BatchGetGroupMembersRequest{}

// BatchGetGroupMembersRequest struct for BatchGetGroupMembersRequest
type BatchGetGroupMembersRequest struct {
	// 群组 ID
	GroupId *string `json:"groupId,omitempty"`
	// 用户 ID 列表
	UserIds []string `json:"userIds,omitempty"`
}

// NewBatchGetGroupMembersRequest instantiates a new BatchGetGroupMembersRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBatchGetGroupMembersRequest() *BatchGetGroupMembersRequest {
	this := BatchGetGroupMembersRequest{}
	return &this
}

// NewBatchGetGroupMembersRequestWithDefaults instantiates a new BatchGetGroupMembersRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBatchGetGroupMembersRequestWithDefaults() *BatchGetGroupMembersRequest {
	this := BatchGetGroupMembersRequest{}
	return &this
}

// GetGroupId returns the GroupId field value if set, zero value otherwise.
func (o *BatchGetGroupMembersRequest) GetGroupId() string {
	if o == nil || IsNil(o.GroupId) {
		var ret string
		return ret
	}
	return *o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchGetGroupMembersRequest) GetGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.GroupId) {
		return nil, false
	}
	return o.GroupId, true
}

// HasGroupId returns a boolean if a field has been set.
func (o *BatchGetGroupMembersRequest) HasGroupId() bool {
	if o != nil && !IsNil(o.GroupId) {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given string and assigns it to the GroupId field.
func (o *BatchGetGroupMembersRequest) SetGroupId(v string) {
	o.GroupId = &v
}

// GetUserIds returns the UserIds field value if set, zero value otherwise.
func (o *BatchGetGroupMembersRequest) GetUserIds() []string {
	if o == nil || IsNil(o.UserIds) {
		var ret []string
		return ret
	}
	return o.UserIds
}

// GetUserIdsOk returns a tuple with the UserIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchGetGroupMembersRequest) GetUserIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.UserIds) {
		return nil, false
	}
	return o.UserIds, true
}

// HasUserIds returns a boolean if a field has been set.
func (o *BatchGetGroupMembersRequest) HasUserIds() bool {
	if o != nil && !IsNil(o.UserIds) {
		return true
	}

	return false
}

// SetUserIds gets a reference to the given []string and assigns it to the UserIds field.
func (o *BatchGetGroupMembersRequest) SetUserIds(v []string) {
	o.UserIds = v
}

func (o BatchGetGroupMembersRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BatchGetGroupMembersRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GroupId) {
		toSerialize["groupId"] = o.GroupId
	}
	if !IsNil(o.UserIds) {
		toSerialize["userIds"] = o.UserIds
	}
	return toSerialize, nil
}

type NullableBatchGetGroupMembersRequest struct {
	value *BatchGetGroupMembersRequest
	isSet bool
}

func (v NullableBatchGetGroupMembersRequest) Get() *BatchGetGroupMembersRequest {
	return v.value
}

func (v *NullableBatchGetGroupMembersRequest) Set(val *BatchGetGroupMembersRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBatchGetGroupMembersRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBatchGetGroupMembersRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBatchGetGroupMembersRequest(val *BatchGetGroupMembersRequest) *NullableBatchGetGroupMembersRequest {
	return &NullableBatchGetGroupMembersRequest{value: val, isSet: true}
}

func (v NullableBatchGetGroupMembersRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBatchGetGroupMembersRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


