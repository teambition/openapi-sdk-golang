/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BatchGetGroupsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BatchGetGroupsRequest{}

// BatchGetGroupsRequest struct for BatchGetGroupsRequest
type BatchGetGroupsRequest struct {
	// 群组 ID 列表
	GroupIds []string `json:"groupIds,omitempty"`
}

// NewBatchGetGroupsRequest instantiates a new BatchGetGroupsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBatchGetGroupsRequest() *BatchGetGroupsRequest {
	this := BatchGetGroupsRequest{}
	return &this
}

// NewBatchGetGroupsRequestWithDefaults instantiates a new BatchGetGroupsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBatchGetGroupsRequestWithDefaults() *BatchGetGroupsRequest {
	this := BatchGetGroupsRequest{}
	return &this
}

// GetGroupIds returns the GroupIds field value if set, zero value otherwise.
func (o *BatchGetGroupsRequest) GetGroupIds() []string {
	if o == nil || IsNil(o.GroupIds) {
		var ret []string
		return ret
	}
	return o.GroupIds
}

// GetGroupIdsOk returns a tuple with the GroupIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchGetGroupsRequest) GetGroupIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.GroupIds) {
		return nil, false
	}
	return o.GroupIds, true
}

// HasGroupIds returns a boolean if a field has been set.
func (o *BatchGetGroupsRequest) HasGroupIds() bool {
	if o != nil && !IsNil(o.GroupIds) {
		return true
	}

	return false
}

// SetGroupIds gets a reference to the given []string and assigns it to the GroupIds field.
func (o *BatchGetGroupsRequest) SetGroupIds(v []string) {
	o.GroupIds = v
}

func (o BatchGetGroupsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BatchGetGroupsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GroupIds) {
		toSerialize["groupIds"] = o.GroupIds
	}
	return toSerialize, nil
}

type NullableBatchGetGroupsRequest struct {
	value *BatchGetGroupsRequest
	isSet bool
}

func (v NullableBatchGetGroupsRequest) Get() *BatchGetGroupsRequest {
	return v.value
}

func (v *NullableBatchGetGroupsRequest) Set(val *BatchGetGroupsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBatchGetGroupsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBatchGetGroupsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBatchGetGroupsRequest(val *BatchGetGroupsRequest) *NullableBatchGetGroupsRequest {
	return &NullableBatchGetGroupsRequest{value: val, isSet: true}
}

func (v NullableBatchGetGroupsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBatchGetGroupsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


