/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CheckUserVisibleInAppRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CheckUserVisibleInAppRequest{}

// CheckUserVisibleInAppRequest struct for CheckUserVisibleInAppRequest
type CheckUserVisibleInAppRequest struct {
	// 用户 ID 数组
	UserIds []string `json:"userIds,omitempty"`
}

// NewCheckUserVisibleInAppRequest instantiates a new CheckUserVisibleInAppRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCheckUserVisibleInAppRequest() *CheckUserVisibleInAppRequest {
	this := CheckUserVisibleInAppRequest{}
	return &this
}

// NewCheckUserVisibleInAppRequestWithDefaults instantiates a new CheckUserVisibleInAppRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCheckUserVisibleInAppRequestWithDefaults() *CheckUserVisibleInAppRequest {
	this := CheckUserVisibleInAppRequest{}
	return &this
}

// GetUserIds returns the UserIds field value if set, zero value otherwise.
func (o *CheckUserVisibleInAppRequest) GetUserIds() []string {
	if o == nil || IsNil(o.UserIds) {
		var ret []string
		return ret
	}
	return o.UserIds
}

// GetUserIdsOk returns a tuple with the UserIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckUserVisibleInAppRequest) GetUserIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.UserIds) {
		return nil, false
	}
	return o.UserIds, true
}

// HasUserIds returns a boolean if a field has been set.
func (o *CheckUserVisibleInAppRequest) HasUserIds() bool {
	if o != nil && !IsNil(o.UserIds) {
		return true
	}

	return false
}

// SetUserIds gets a reference to the given []string and assigns it to the UserIds field.
func (o *CheckUserVisibleInAppRequest) SetUserIds(v []string) {
	o.UserIds = v
}

func (o CheckUserVisibleInAppRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CheckUserVisibleInAppRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserIds) {
		toSerialize["userIds"] = o.UserIds
	}
	return toSerialize, nil
}

type NullableCheckUserVisibleInAppRequest struct {
	value *CheckUserVisibleInAppRequest
	isSet bool
}

func (v NullableCheckUserVisibleInAppRequest) Get() *CheckUserVisibleInAppRequest {
	return v.value
}

func (v *NullableCheckUserVisibleInAppRequest) Set(val *CheckUserVisibleInAppRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCheckUserVisibleInAppRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCheckUserVisibleInAppRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCheckUserVisibleInAppRequest(val *CheckUserVisibleInAppRequest) *NullableCheckUserVisibleInAppRequest {
	return &NullableCheckUserVisibleInAppRequest{value: val, isSet: true}
}

func (v NullableCheckUserVisibleInAppRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCheckUserVisibleInAppRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


