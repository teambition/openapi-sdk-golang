/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CountByCategoryV3ResponseResultInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CountByCategoryV3ResponseResultInner{}

// CountByCategoryV3ResponseResultInner 任务类型
type CountByCategoryV3ResponseResultInner struct {
	// 任务类型ID
	CategoryId *string `json:"categoryId,omitempty"`
	// 分类下自定义字段总数
	Count *int32 `json:"count,omitempty"`
}

// NewCountByCategoryV3ResponseResultInner instantiates a new CountByCategoryV3ResponseResultInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCountByCategoryV3ResponseResultInner() *CountByCategoryV3ResponseResultInner {
	this := CountByCategoryV3ResponseResultInner{}
	return &this
}

// NewCountByCategoryV3ResponseResultInnerWithDefaults instantiates a new CountByCategoryV3ResponseResultInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCountByCategoryV3ResponseResultInnerWithDefaults() *CountByCategoryV3ResponseResultInner {
	this := CountByCategoryV3ResponseResultInner{}
	return &this
}

// GetCategoryId returns the CategoryId field value if set, zero value otherwise.
func (o *CountByCategoryV3ResponseResultInner) GetCategoryId() string {
	if o == nil || IsNil(o.CategoryId) {
		var ret string
		return ret
	}
	return *o.CategoryId
}

// GetCategoryIdOk returns a tuple with the CategoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CountByCategoryV3ResponseResultInner) GetCategoryIdOk() (*string, bool) {
	if o == nil || IsNil(o.CategoryId) {
		return nil, false
	}
	return o.CategoryId, true
}

// HasCategoryId returns a boolean if a field has been set.
func (o *CountByCategoryV3ResponseResultInner) HasCategoryId() bool {
	if o != nil && !IsNil(o.CategoryId) {
		return true
	}

	return false
}

// SetCategoryId gets a reference to the given string and assigns it to the CategoryId field.
func (o *CountByCategoryV3ResponseResultInner) SetCategoryId(v string) {
	o.CategoryId = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *CountByCategoryV3ResponseResultInner) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CountByCategoryV3ResponseResultInner) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *CountByCategoryV3ResponseResultInner) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *CountByCategoryV3ResponseResultInner) SetCount(v int32) {
	o.Count = &v
}

func (o CountByCategoryV3ResponseResultInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CountByCategoryV3ResponseResultInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CategoryId) {
		toSerialize["categoryId"] = o.CategoryId
	}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	return toSerialize, nil
}

type NullableCountByCategoryV3ResponseResultInner struct {
	value *CountByCategoryV3ResponseResultInner
	isSet bool
}

func (v NullableCountByCategoryV3ResponseResultInner) Get() *CountByCategoryV3ResponseResultInner {
	return v.value
}

func (v *NullableCountByCategoryV3ResponseResultInner) Set(val *CountByCategoryV3ResponseResultInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCountByCategoryV3ResponseResultInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCountByCategoryV3ResponseResultInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCountByCategoryV3ResponseResultInner(val *CountByCategoryV3ResponseResultInner) *NullableCountByCategoryV3ResponseResultInner {
	return &NullableCountByCategoryV3ResponseResultInner{value: val, isSet: true}
}

func (v NullableCountByCategoryV3ResponseResultInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCountByCategoryV3ResponseResultInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


