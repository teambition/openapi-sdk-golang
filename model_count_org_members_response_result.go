/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CountOrgMembersResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CountOrgMembersResponseResult{}

// CountOrgMembersResponseResult struct for CountOrgMembersResponseResult
type CountOrgMembersResponseResult struct {
	// 成员总人数
	Count *float32 `json:"count,omitempty"`
	// 停用成员总数
	DisabledCount *float32 `json:"disabledCount,omitempty"`
	// 启用成员总数
	EnabledCount *float32 `json:"enabledCount,omitempty"`
}

// NewCountOrgMembersResponseResult instantiates a new CountOrgMembersResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCountOrgMembersResponseResult() *CountOrgMembersResponseResult {
	this := CountOrgMembersResponseResult{}
	return &this
}

// NewCountOrgMembersResponseResultWithDefaults instantiates a new CountOrgMembersResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCountOrgMembersResponseResultWithDefaults() *CountOrgMembersResponseResult {
	this := CountOrgMembersResponseResult{}
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *CountOrgMembersResponseResult) GetCount() float32 {
	if o == nil || IsNil(o.Count) {
		var ret float32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CountOrgMembersResponseResult) GetCountOk() (*float32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *CountOrgMembersResponseResult) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given float32 and assigns it to the Count field.
func (o *CountOrgMembersResponseResult) SetCount(v float32) {
	o.Count = &v
}

// GetDisabledCount returns the DisabledCount field value if set, zero value otherwise.
func (o *CountOrgMembersResponseResult) GetDisabledCount() float32 {
	if o == nil || IsNil(o.DisabledCount) {
		var ret float32
		return ret
	}
	return *o.DisabledCount
}

// GetDisabledCountOk returns a tuple with the DisabledCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CountOrgMembersResponseResult) GetDisabledCountOk() (*float32, bool) {
	if o == nil || IsNil(o.DisabledCount) {
		return nil, false
	}
	return o.DisabledCount, true
}

// HasDisabledCount returns a boolean if a field has been set.
func (o *CountOrgMembersResponseResult) HasDisabledCount() bool {
	if o != nil && !IsNil(o.DisabledCount) {
		return true
	}

	return false
}

// SetDisabledCount gets a reference to the given float32 and assigns it to the DisabledCount field.
func (o *CountOrgMembersResponseResult) SetDisabledCount(v float32) {
	o.DisabledCount = &v
}

// GetEnabledCount returns the EnabledCount field value if set, zero value otherwise.
func (o *CountOrgMembersResponseResult) GetEnabledCount() float32 {
	if o == nil || IsNil(o.EnabledCount) {
		var ret float32
		return ret
	}
	return *o.EnabledCount
}

// GetEnabledCountOk returns a tuple with the EnabledCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CountOrgMembersResponseResult) GetEnabledCountOk() (*float32, bool) {
	if o == nil || IsNil(o.EnabledCount) {
		return nil, false
	}
	return o.EnabledCount, true
}

// HasEnabledCount returns a boolean if a field has been set.
func (o *CountOrgMembersResponseResult) HasEnabledCount() bool {
	if o != nil && !IsNil(o.EnabledCount) {
		return true
	}

	return false
}

// SetEnabledCount gets a reference to the given float32 and assigns it to the EnabledCount field.
func (o *CountOrgMembersResponseResult) SetEnabledCount(v float32) {
	o.EnabledCount = &v
}

func (o CountOrgMembersResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CountOrgMembersResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.DisabledCount) {
		toSerialize["disabledCount"] = o.DisabledCount
	}
	if !IsNil(o.EnabledCount) {
		toSerialize["enabledCount"] = o.EnabledCount
	}
	return toSerialize, nil
}

type NullableCountOrgMembersResponseResult struct {
	value *CountOrgMembersResponseResult
	isSet bool
}

func (v NullableCountOrgMembersResponseResult) Get() *CountOrgMembersResponseResult {
	return v.value
}

func (v *NullableCountOrgMembersResponseResult) Set(val *CountOrgMembersResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableCountOrgMembersResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableCountOrgMembersResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCountOrgMembersResponseResult(val *CountOrgMembersResponseResult) *NullableCountOrgMembersResponseResult {
	return &NullableCountOrgMembersResponseResult{value: val, isSet: true}
}

func (v NullableCountOrgMembersResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCountOrgMembersResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


