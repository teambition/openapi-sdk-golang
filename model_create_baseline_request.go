/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateBaselineRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateBaselineRequest{}

// CreateBaselineRequest struct for CreateBaselineRequest
type CreateBaselineRequest struct {
	// 项目 ID
	ProjectId *string `json:"projectId,omitempty"`
	// 基线名称
	Title *string `json:"title,omitempty"`
	// 基线类型 snapshot = '传统快照型基线', realtime = '实时字段对比型基线'
	Kind *string `json:"kind,omitempty"`
	Payload *CreateBaselineRequestPayload `json:"payload,omitempty"`
}

// NewCreateBaselineRequest instantiates a new CreateBaselineRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateBaselineRequest() *CreateBaselineRequest {
	this := CreateBaselineRequest{}
	return &this
}

// NewCreateBaselineRequestWithDefaults instantiates a new CreateBaselineRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateBaselineRequestWithDefaults() *CreateBaselineRequest {
	this := CreateBaselineRequest{}
	return &this
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *CreateBaselineRequest) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId) {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBaselineRequest) GetProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *CreateBaselineRequest) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *CreateBaselineRequest) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *CreateBaselineRequest) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBaselineRequest) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *CreateBaselineRequest) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *CreateBaselineRequest) SetTitle(v string) {
	o.Title = &v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *CreateBaselineRequest) GetKind() string {
	if o == nil || IsNil(o.Kind) {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBaselineRequest) GetKindOk() (*string, bool) {
	if o == nil || IsNil(o.Kind) {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *CreateBaselineRequest) HasKind() bool {
	if o != nil && !IsNil(o.Kind) {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *CreateBaselineRequest) SetKind(v string) {
	o.Kind = &v
}

// GetPayload returns the Payload field value if set, zero value otherwise.
func (o *CreateBaselineRequest) GetPayload() CreateBaselineRequestPayload {
	if o == nil || IsNil(o.Payload) {
		var ret CreateBaselineRequestPayload
		return ret
	}
	return *o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBaselineRequest) GetPayloadOk() (*CreateBaselineRequestPayload, bool) {
	if o == nil || IsNil(o.Payload) {
		return nil, false
	}
	return o.Payload, true
}

// HasPayload returns a boolean if a field has been set.
func (o *CreateBaselineRequest) HasPayload() bool {
	if o != nil && !IsNil(o.Payload) {
		return true
	}

	return false
}

// SetPayload gets a reference to the given CreateBaselineRequestPayload and assigns it to the Payload field.
func (o *CreateBaselineRequest) SetPayload(v CreateBaselineRequestPayload) {
	o.Payload = &v
}

func (o CreateBaselineRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateBaselineRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProjectId) {
		toSerialize["projectId"] = o.ProjectId
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Kind) {
		toSerialize["kind"] = o.Kind
	}
	if !IsNil(o.Payload) {
		toSerialize["payload"] = o.Payload
	}
	return toSerialize, nil
}

type NullableCreateBaselineRequest struct {
	value *CreateBaselineRequest
	isSet bool
}

func (v NullableCreateBaselineRequest) Get() *CreateBaselineRequest {
	return v.value
}

func (v *NullableCreateBaselineRequest) Set(val *CreateBaselineRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateBaselineRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateBaselineRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateBaselineRequest(val *CreateBaselineRequest) *NullableCreateBaselineRequest {
	return &NullableCreateBaselineRequest{value: val, isSet: true}
}

func (v NullableCreateBaselineRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateBaselineRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


