/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the CreateBaselineResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateBaselineResponseResult{}

// CreateBaselineResponseResult struct for CreateBaselineResponseResult
type CreateBaselineResponseResult struct {
	// 基线ID
	Id *string `json:"id,omitempty"`
	// 基线名称
	Title *string `json:"title,omitempty"`
	// 基线类型 snapshot = '传统快照型基线', realtime = '实时字段对比型基线'
	Kind *string `json:"kind,omitempty"`
	// 创建时间
	Created *time.Time `json:"created,omitempty"`
	// 更新时间
	Updated *time.Time `json:"updated,omitempty"`
	// 基线创建者ID
	CreatorId *string `json:"creatorId,omitempty"`
	// 项目ID
	ProjectId *string `json:"projectId,omitempty"`
	Payload *GetBaselinesV3ResponseResultInnerPayload `json:"payload,omitempty"`
}

// NewCreateBaselineResponseResult instantiates a new CreateBaselineResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateBaselineResponseResult() *CreateBaselineResponseResult {
	this := CreateBaselineResponseResult{}
	return &this
}

// NewCreateBaselineResponseResultWithDefaults instantiates a new CreateBaselineResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateBaselineResponseResultWithDefaults() *CreateBaselineResponseResult {
	this := CreateBaselineResponseResult{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CreateBaselineResponseResult) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBaselineResponseResult) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CreateBaselineResponseResult) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CreateBaselineResponseResult) SetId(v string) {
	o.Id = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *CreateBaselineResponseResult) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBaselineResponseResult) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *CreateBaselineResponseResult) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *CreateBaselineResponseResult) SetTitle(v string) {
	o.Title = &v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *CreateBaselineResponseResult) GetKind() string {
	if o == nil || IsNil(o.Kind) {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBaselineResponseResult) GetKindOk() (*string, bool) {
	if o == nil || IsNil(o.Kind) {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *CreateBaselineResponseResult) HasKind() bool {
	if o != nil && !IsNil(o.Kind) {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *CreateBaselineResponseResult) SetKind(v string) {
	o.Kind = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *CreateBaselineResponseResult) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBaselineResponseResult) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *CreateBaselineResponseResult) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *CreateBaselineResponseResult) SetCreated(v time.Time) {
	o.Created = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *CreateBaselineResponseResult) GetUpdated() time.Time {
	if o == nil || IsNil(o.Updated) {
		var ret time.Time
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBaselineResponseResult) GetUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Updated) {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *CreateBaselineResponseResult) HasUpdated() bool {
	if o != nil && !IsNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given time.Time and assigns it to the Updated field.
func (o *CreateBaselineResponseResult) SetUpdated(v time.Time) {
	o.Updated = &v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise.
func (o *CreateBaselineResponseResult) GetCreatorId() string {
	if o == nil || IsNil(o.CreatorId) {
		var ret string
		return ret
	}
	return *o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBaselineResponseResult) GetCreatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorId) {
		return nil, false
	}
	return o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *CreateBaselineResponseResult) HasCreatorId() bool {
	if o != nil && !IsNil(o.CreatorId) {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given string and assigns it to the CreatorId field.
func (o *CreateBaselineResponseResult) SetCreatorId(v string) {
	o.CreatorId = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *CreateBaselineResponseResult) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId) {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBaselineResponseResult) GetProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *CreateBaselineResponseResult) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *CreateBaselineResponseResult) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetPayload returns the Payload field value if set, zero value otherwise.
func (o *CreateBaselineResponseResult) GetPayload() GetBaselinesV3ResponseResultInnerPayload {
	if o == nil || IsNil(o.Payload) {
		var ret GetBaselinesV3ResponseResultInnerPayload
		return ret
	}
	return *o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBaselineResponseResult) GetPayloadOk() (*GetBaselinesV3ResponseResultInnerPayload, bool) {
	if o == nil || IsNil(o.Payload) {
		return nil, false
	}
	return o.Payload, true
}

// HasPayload returns a boolean if a field has been set.
func (o *CreateBaselineResponseResult) HasPayload() bool {
	if o != nil && !IsNil(o.Payload) {
		return true
	}

	return false
}

// SetPayload gets a reference to the given GetBaselinesV3ResponseResultInnerPayload and assigns it to the Payload field.
func (o *CreateBaselineResponseResult) SetPayload(v GetBaselinesV3ResponseResultInnerPayload) {
	o.Payload = &v
}

func (o CreateBaselineResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateBaselineResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Kind) {
		toSerialize["kind"] = o.Kind
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.Updated) {
		toSerialize["updated"] = o.Updated
	}
	if !IsNil(o.CreatorId) {
		toSerialize["creatorId"] = o.CreatorId
	}
	if !IsNil(o.ProjectId) {
		toSerialize["projectId"] = o.ProjectId
	}
	if !IsNil(o.Payload) {
		toSerialize["payload"] = o.Payload
	}
	return toSerialize, nil
}

type NullableCreateBaselineResponseResult struct {
	value *CreateBaselineResponseResult
	isSet bool
}

func (v NullableCreateBaselineResponseResult) Get() *CreateBaselineResponseResult {
	return v.value
}

func (v *NullableCreateBaselineResponseResult) Set(val *CreateBaselineResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateBaselineResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateBaselineResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateBaselineResponseResult(val *CreateBaselineResponseResult) *NullableCreateBaselineResponseResult {
	return &NullableCreateBaselineResponseResult{value: val, isSet: true}
}

func (v NullableCreateBaselineResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateBaselineResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


