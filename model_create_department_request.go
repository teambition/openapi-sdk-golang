/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateDepartmentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateDepartmentRequest{}

// CreateDepartmentRequest struct for CreateDepartmentRequest
type CreateDepartmentRequest struct {
	// 创建人 ID
	OperatorId *string `json:"operatorId,omitempty"`
	// 部门负责人 ID
	LeaderId *string `json:"leaderId,omitempty"`
	// 父部门 ID（没有为空）
	ParentId *string `json:"parentId,omitempty"`
	// 部门名称
	Name *string `json:"name,omitempty"`
	// 外部部门ID，企业自己的部门编号
	OpenId *string `json:"openId,omitempty"`
}

// NewCreateDepartmentRequest instantiates a new CreateDepartmentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateDepartmentRequest() *CreateDepartmentRequest {
	this := CreateDepartmentRequest{}
	return &this
}

// NewCreateDepartmentRequestWithDefaults instantiates a new CreateDepartmentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateDepartmentRequestWithDefaults() *CreateDepartmentRequest {
	this := CreateDepartmentRequest{}
	return &this
}

// GetOperatorId returns the OperatorId field value if set, zero value otherwise.
func (o *CreateDepartmentRequest) GetOperatorId() string {
	if o == nil || IsNil(o.OperatorId) {
		var ret string
		return ret
	}
	return *o.OperatorId
}

// GetOperatorIdOk returns a tuple with the OperatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDepartmentRequest) GetOperatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.OperatorId) {
		return nil, false
	}
	return o.OperatorId, true
}

// HasOperatorId returns a boolean if a field has been set.
func (o *CreateDepartmentRequest) HasOperatorId() bool {
	if o != nil && !IsNil(o.OperatorId) {
		return true
	}

	return false
}

// SetOperatorId gets a reference to the given string and assigns it to the OperatorId field.
func (o *CreateDepartmentRequest) SetOperatorId(v string) {
	o.OperatorId = &v
}

// GetLeaderId returns the LeaderId field value if set, zero value otherwise.
func (o *CreateDepartmentRequest) GetLeaderId() string {
	if o == nil || IsNil(o.LeaderId) {
		var ret string
		return ret
	}
	return *o.LeaderId
}

// GetLeaderIdOk returns a tuple with the LeaderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDepartmentRequest) GetLeaderIdOk() (*string, bool) {
	if o == nil || IsNil(o.LeaderId) {
		return nil, false
	}
	return o.LeaderId, true
}

// HasLeaderId returns a boolean if a field has been set.
func (o *CreateDepartmentRequest) HasLeaderId() bool {
	if o != nil && !IsNil(o.LeaderId) {
		return true
	}

	return false
}

// SetLeaderId gets a reference to the given string and assigns it to the LeaderId field.
func (o *CreateDepartmentRequest) SetLeaderId(v string) {
	o.LeaderId = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *CreateDepartmentRequest) GetParentId() string {
	if o == nil || IsNil(o.ParentId) {
		var ret string
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDepartmentRequest) GetParentIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentId) {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *CreateDepartmentRequest) HasParentId() bool {
	if o != nil && !IsNil(o.ParentId) {
		return true
	}

	return false
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *CreateDepartmentRequest) SetParentId(v string) {
	o.ParentId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateDepartmentRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDepartmentRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateDepartmentRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateDepartmentRequest) SetName(v string) {
	o.Name = &v
}

// GetOpenId returns the OpenId field value if set, zero value otherwise.
func (o *CreateDepartmentRequest) GetOpenId() string {
	if o == nil || IsNil(o.OpenId) {
		var ret string
		return ret
	}
	return *o.OpenId
}

// GetOpenIdOk returns a tuple with the OpenId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDepartmentRequest) GetOpenIdOk() (*string, bool) {
	if o == nil || IsNil(o.OpenId) {
		return nil, false
	}
	return o.OpenId, true
}

// HasOpenId returns a boolean if a field has been set.
func (o *CreateDepartmentRequest) HasOpenId() bool {
	if o != nil && !IsNil(o.OpenId) {
		return true
	}

	return false
}

// SetOpenId gets a reference to the given string and assigns it to the OpenId field.
func (o *CreateDepartmentRequest) SetOpenId(v string) {
	o.OpenId = &v
}

func (o CreateDepartmentRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateDepartmentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OperatorId) {
		toSerialize["operatorId"] = o.OperatorId
	}
	if !IsNil(o.LeaderId) {
		toSerialize["leaderId"] = o.LeaderId
	}
	if !IsNil(o.ParentId) {
		toSerialize["parentId"] = o.ParentId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OpenId) {
		toSerialize["openId"] = o.OpenId
	}
	return toSerialize, nil
}

type NullableCreateDepartmentRequest struct {
	value *CreateDepartmentRequest
	isSet bool
}

func (v NullableCreateDepartmentRequest) Get() *CreateDepartmentRequest {
	return v.value
}

func (v *NullableCreateDepartmentRequest) Set(val *CreateDepartmentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateDepartmentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateDepartmentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateDepartmentRequest(val *CreateDepartmentRequest) *NullableCreateDepartmentRequest {
	return &NullableCreateDepartmentRequest{value: val, isSet: true}
}

func (v NullableCreateDepartmentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateDepartmentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


