/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateFileV3ResponseResultInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateFileV3ResponseResultInner{}

// CreateFileV3ResponseResultInner struct for CreateFileV3ResponseResultInner
type CreateFileV3ResponseResultInner struct {
	// 文件ID
	Id *string `json:"id,omitempty"`
	// 创建者ID
	CreatorId *string `json:"creatorId,omitempty"`
	// 文件夹ID
	ParentId *string `json:"parentId,omitempty"`
	// 文件名，包含扩展名，如：`example.jpg`
	FileName *string `json:"fileName,omitempty"`
	// 文件的 mimeType，如：`image/jpeg`
	FileType *string `json:"fileType,omitempty"`
	// 文件大小，单位 byte
	FileSize *int32 `json:"fileSize,omitempty"`
	// 创建时间
	Created *string `json:"created,omitempty"`
	// 更新时间
	Updated *string `json:"updated,omitempty"`
}

// NewCreateFileV3ResponseResultInner instantiates a new CreateFileV3ResponseResultInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateFileV3ResponseResultInner() *CreateFileV3ResponseResultInner {
	this := CreateFileV3ResponseResultInner{}
	return &this
}

// NewCreateFileV3ResponseResultInnerWithDefaults instantiates a new CreateFileV3ResponseResultInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateFileV3ResponseResultInnerWithDefaults() *CreateFileV3ResponseResultInner {
	this := CreateFileV3ResponseResultInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CreateFileV3ResponseResultInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFileV3ResponseResultInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CreateFileV3ResponseResultInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CreateFileV3ResponseResultInner) SetId(v string) {
	o.Id = &v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise.
func (o *CreateFileV3ResponseResultInner) GetCreatorId() string {
	if o == nil || IsNil(o.CreatorId) {
		var ret string
		return ret
	}
	return *o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFileV3ResponseResultInner) GetCreatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorId) {
		return nil, false
	}
	return o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *CreateFileV3ResponseResultInner) HasCreatorId() bool {
	if o != nil && !IsNil(o.CreatorId) {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given string and assigns it to the CreatorId field.
func (o *CreateFileV3ResponseResultInner) SetCreatorId(v string) {
	o.CreatorId = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *CreateFileV3ResponseResultInner) GetParentId() string {
	if o == nil || IsNil(o.ParentId) {
		var ret string
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFileV3ResponseResultInner) GetParentIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentId) {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *CreateFileV3ResponseResultInner) HasParentId() bool {
	if o != nil && !IsNil(o.ParentId) {
		return true
	}

	return false
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *CreateFileV3ResponseResultInner) SetParentId(v string) {
	o.ParentId = &v
}

// GetFileName returns the FileName field value if set, zero value otherwise.
func (o *CreateFileV3ResponseResultInner) GetFileName() string {
	if o == nil || IsNil(o.FileName) {
		var ret string
		return ret
	}
	return *o.FileName
}

// GetFileNameOk returns a tuple with the FileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFileV3ResponseResultInner) GetFileNameOk() (*string, bool) {
	if o == nil || IsNil(o.FileName) {
		return nil, false
	}
	return o.FileName, true
}

// HasFileName returns a boolean if a field has been set.
func (o *CreateFileV3ResponseResultInner) HasFileName() bool {
	if o != nil && !IsNil(o.FileName) {
		return true
	}

	return false
}

// SetFileName gets a reference to the given string and assigns it to the FileName field.
func (o *CreateFileV3ResponseResultInner) SetFileName(v string) {
	o.FileName = &v
}

// GetFileType returns the FileType field value if set, zero value otherwise.
func (o *CreateFileV3ResponseResultInner) GetFileType() string {
	if o == nil || IsNil(o.FileType) {
		var ret string
		return ret
	}
	return *o.FileType
}

// GetFileTypeOk returns a tuple with the FileType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFileV3ResponseResultInner) GetFileTypeOk() (*string, bool) {
	if o == nil || IsNil(o.FileType) {
		return nil, false
	}
	return o.FileType, true
}

// HasFileType returns a boolean if a field has been set.
func (o *CreateFileV3ResponseResultInner) HasFileType() bool {
	if o != nil && !IsNil(o.FileType) {
		return true
	}

	return false
}

// SetFileType gets a reference to the given string and assigns it to the FileType field.
func (o *CreateFileV3ResponseResultInner) SetFileType(v string) {
	o.FileType = &v
}

// GetFileSize returns the FileSize field value if set, zero value otherwise.
func (o *CreateFileV3ResponseResultInner) GetFileSize() int32 {
	if o == nil || IsNil(o.FileSize) {
		var ret int32
		return ret
	}
	return *o.FileSize
}

// GetFileSizeOk returns a tuple with the FileSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFileV3ResponseResultInner) GetFileSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.FileSize) {
		return nil, false
	}
	return o.FileSize, true
}

// HasFileSize returns a boolean if a field has been set.
func (o *CreateFileV3ResponseResultInner) HasFileSize() bool {
	if o != nil && !IsNil(o.FileSize) {
		return true
	}

	return false
}

// SetFileSize gets a reference to the given int32 and assigns it to the FileSize field.
func (o *CreateFileV3ResponseResultInner) SetFileSize(v int32) {
	o.FileSize = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *CreateFileV3ResponseResultInner) GetCreated() string {
	if o == nil || IsNil(o.Created) {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFileV3ResponseResultInner) GetCreatedOk() (*string, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *CreateFileV3ResponseResultInner) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *CreateFileV3ResponseResultInner) SetCreated(v string) {
	o.Created = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *CreateFileV3ResponseResultInner) GetUpdated() string {
	if o == nil || IsNil(o.Updated) {
		var ret string
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFileV3ResponseResultInner) GetUpdatedOk() (*string, bool) {
	if o == nil || IsNil(o.Updated) {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *CreateFileV3ResponseResultInner) HasUpdated() bool {
	if o != nil && !IsNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given string and assigns it to the Updated field.
func (o *CreateFileV3ResponseResultInner) SetUpdated(v string) {
	o.Updated = &v
}

func (o CreateFileV3ResponseResultInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateFileV3ResponseResultInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.CreatorId) {
		toSerialize["creatorId"] = o.CreatorId
	}
	if !IsNil(o.ParentId) {
		toSerialize["parentId"] = o.ParentId
	}
	if !IsNil(o.FileName) {
		toSerialize["fileName"] = o.FileName
	}
	if !IsNil(o.FileType) {
		toSerialize["fileType"] = o.FileType
	}
	if !IsNil(o.FileSize) {
		toSerialize["fileSize"] = o.FileSize
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.Updated) {
		toSerialize["updated"] = o.Updated
	}
	return toSerialize, nil
}

type NullableCreateFileV3ResponseResultInner struct {
	value *CreateFileV3ResponseResultInner
	isSet bool
}

func (v NullableCreateFileV3ResponseResultInner) Get() *CreateFileV3ResponseResultInner {
	return v.value
}

func (v *NullableCreateFileV3ResponseResultInner) Set(val *CreateFileV3ResponseResultInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateFileV3ResponseResultInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateFileV3ResponseResultInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateFileV3ResponseResultInner(val *CreateFileV3ResponseResultInner) *NullableCreateFileV3ResponseResultInner {
	return &NullableCreateFileV3ResponseResultInner{value: val, isSet: true}
}

func (v NullableCreateFileV3ResponseResultInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateFileV3ResponseResultInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


