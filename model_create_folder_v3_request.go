/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateFolderV3Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateFolderV3Request{}

// CreateFolderV3Request struct for CreateFolderV3Request
type CreateFolderV3Request struct {
	// 项目ID
	ProjectId *string `json:"projectId,omitempty"`
	// 归属父文件夹 ID，不提供默认创建顶级文件夹
	ParentId *string `json:"parentId,omitempty"`
	// 文件夹标题
	Title *string `json:"title,omitempty"`
	// 文件夹显示颜色
	Color *string `json:"color,omitempty"`
	// 文件夹描述
	Description *string `json:"description,omitempty"`
}

// NewCreateFolderV3Request instantiates a new CreateFolderV3Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateFolderV3Request() *CreateFolderV3Request {
	this := CreateFolderV3Request{}
	return &this
}

// NewCreateFolderV3RequestWithDefaults instantiates a new CreateFolderV3Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateFolderV3RequestWithDefaults() *CreateFolderV3Request {
	this := CreateFolderV3Request{}
	return &this
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *CreateFolderV3Request) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId) {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFolderV3Request) GetProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *CreateFolderV3Request) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *CreateFolderV3Request) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *CreateFolderV3Request) GetParentId() string {
	if o == nil || IsNil(o.ParentId) {
		var ret string
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFolderV3Request) GetParentIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentId) {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *CreateFolderV3Request) HasParentId() bool {
	if o != nil && !IsNil(o.ParentId) {
		return true
	}

	return false
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *CreateFolderV3Request) SetParentId(v string) {
	o.ParentId = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *CreateFolderV3Request) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFolderV3Request) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *CreateFolderV3Request) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *CreateFolderV3Request) SetTitle(v string) {
	o.Title = &v
}

// GetColor returns the Color field value if set, zero value otherwise.
func (o *CreateFolderV3Request) GetColor() string {
	if o == nil || IsNil(o.Color) {
		var ret string
		return ret
	}
	return *o.Color
}

// GetColorOk returns a tuple with the Color field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFolderV3Request) GetColorOk() (*string, bool) {
	if o == nil || IsNil(o.Color) {
		return nil, false
	}
	return o.Color, true
}

// HasColor returns a boolean if a field has been set.
func (o *CreateFolderV3Request) HasColor() bool {
	if o != nil && !IsNil(o.Color) {
		return true
	}

	return false
}

// SetColor gets a reference to the given string and assigns it to the Color field.
func (o *CreateFolderV3Request) SetColor(v string) {
	o.Color = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateFolderV3Request) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFolderV3Request) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateFolderV3Request) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateFolderV3Request) SetDescription(v string) {
	o.Description = &v
}

func (o CreateFolderV3Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateFolderV3Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProjectId) {
		toSerialize["projectId"] = o.ProjectId
	}
	if !IsNil(o.ParentId) {
		toSerialize["parentId"] = o.ParentId
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Color) {
		toSerialize["color"] = o.Color
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return toSerialize, nil
}

type NullableCreateFolderV3Request struct {
	value *CreateFolderV3Request
	isSet bool
}

func (v NullableCreateFolderV3Request) Get() *CreateFolderV3Request {
	return v.value
}

func (v *NullableCreateFolderV3Request) Set(val *CreateFolderV3Request) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateFolderV3Request) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateFolderV3Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateFolderV3Request(val *CreateFolderV3Request) *NullableCreateFolderV3Request {
	return &NullableCreateFolderV3Request{value: val, isSet: true}
}

func (v NullableCreateFolderV3Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateFolderV3Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


