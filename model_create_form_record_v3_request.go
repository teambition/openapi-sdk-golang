/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateFormRecordV3Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateFormRecordV3Request{}

// CreateFormRecordV3Request 
type CreateFormRecordV3Request struct {
	// 表单空间id
	FormProjectId *string `json:"formProjectId,omitempty"`
	// 表单类型id
	SfcId *string `json:"sfcId,omitempty"`
	// 表单类型别名
	SfcAlias *string `json:"sfcAlias,omitempty"`
	// 自定义字段值列表【customfields与customfieldsAlias传一项即可】
	Customfields []CreateFormRecordV3RequestCustomfieldsInner `json:"customfields,omitempty"`
}

// NewCreateFormRecordV3Request instantiates a new CreateFormRecordV3Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateFormRecordV3Request() *CreateFormRecordV3Request {
	this := CreateFormRecordV3Request{}
	return &this
}

// NewCreateFormRecordV3RequestWithDefaults instantiates a new CreateFormRecordV3Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateFormRecordV3RequestWithDefaults() *CreateFormRecordV3Request {
	this := CreateFormRecordV3Request{}
	return &this
}

// GetFormProjectId returns the FormProjectId field value if set, zero value otherwise.
func (o *CreateFormRecordV3Request) GetFormProjectId() string {
	if o == nil || IsNil(o.FormProjectId) {
		var ret string
		return ret
	}
	return *o.FormProjectId
}

// GetFormProjectIdOk returns a tuple with the FormProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFormRecordV3Request) GetFormProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.FormProjectId) {
		return nil, false
	}
	return o.FormProjectId, true
}

// HasFormProjectId returns a boolean if a field has been set.
func (o *CreateFormRecordV3Request) HasFormProjectId() bool {
	if o != nil && !IsNil(o.FormProjectId) {
		return true
	}

	return false
}

// SetFormProjectId gets a reference to the given string and assigns it to the FormProjectId field.
func (o *CreateFormRecordV3Request) SetFormProjectId(v string) {
	o.FormProjectId = &v
}

// GetSfcId returns the SfcId field value if set, zero value otherwise.
func (o *CreateFormRecordV3Request) GetSfcId() string {
	if o == nil || IsNil(o.SfcId) {
		var ret string
		return ret
	}
	return *o.SfcId
}

// GetSfcIdOk returns a tuple with the SfcId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFormRecordV3Request) GetSfcIdOk() (*string, bool) {
	if o == nil || IsNil(o.SfcId) {
		return nil, false
	}
	return o.SfcId, true
}

// HasSfcId returns a boolean if a field has been set.
func (o *CreateFormRecordV3Request) HasSfcId() bool {
	if o != nil && !IsNil(o.SfcId) {
		return true
	}

	return false
}

// SetSfcId gets a reference to the given string and assigns it to the SfcId field.
func (o *CreateFormRecordV3Request) SetSfcId(v string) {
	o.SfcId = &v
}

// GetSfcAlias returns the SfcAlias field value if set, zero value otherwise.
func (o *CreateFormRecordV3Request) GetSfcAlias() string {
	if o == nil || IsNil(o.SfcAlias) {
		var ret string
		return ret
	}
	return *o.SfcAlias
}

// GetSfcAliasOk returns a tuple with the SfcAlias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFormRecordV3Request) GetSfcAliasOk() (*string, bool) {
	if o == nil || IsNil(o.SfcAlias) {
		return nil, false
	}
	return o.SfcAlias, true
}

// HasSfcAlias returns a boolean if a field has been set.
func (o *CreateFormRecordV3Request) HasSfcAlias() bool {
	if o != nil && !IsNil(o.SfcAlias) {
		return true
	}

	return false
}

// SetSfcAlias gets a reference to the given string and assigns it to the SfcAlias field.
func (o *CreateFormRecordV3Request) SetSfcAlias(v string) {
	o.SfcAlias = &v
}

// GetCustomfields returns the Customfields field value if set, zero value otherwise.
func (o *CreateFormRecordV3Request) GetCustomfields() []CreateFormRecordV3RequestCustomfieldsInner {
	if o == nil || IsNil(o.Customfields) {
		var ret []CreateFormRecordV3RequestCustomfieldsInner
		return ret
	}
	return o.Customfields
}

// GetCustomfieldsOk returns a tuple with the Customfields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFormRecordV3Request) GetCustomfieldsOk() ([]CreateFormRecordV3RequestCustomfieldsInner, bool) {
	if o == nil || IsNil(o.Customfields) {
		return nil, false
	}
	return o.Customfields, true
}

// HasCustomfields returns a boolean if a field has been set.
func (o *CreateFormRecordV3Request) HasCustomfields() bool {
	if o != nil && !IsNil(o.Customfields) {
		return true
	}

	return false
}

// SetCustomfields gets a reference to the given []CreateFormRecordV3RequestCustomfieldsInner and assigns it to the Customfields field.
func (o *CreateFormRecordV3Request) SetCustomfields(v []CreateFormRecordV3RequestCustomfieldsInner) {
	o.Customfields = v
}

func (o CreateFormRecordV3Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateFormRecordV3Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FormProjectId) {
		toSerialize["formProjectId"] = o.FormProjectId
	}
	if !IsNil(o.SfcId) {
		toSerialize["sfcId"] = o.SfcId
	}
	if !IsNil(o.SfcAlias) {
		toSerialize["sfcAlias"] = o.SfcAlias
	}
	if !IsNil(o.Customfields) {
		toSerialize["customfields"] = o.Customfields
	}
	return toSerialize, nil
}

type NullableCreateFormRecordV3Request struct {
	value *CreateFormRecordV3Request
	isSet bool
}

func (v NullableCreateFormRecordV3Request) Get() *CreateFormRecordV3Request {
	return v.value
}

func (v *NullableCreateFormRecordV3Request) Set(val *CreateFormRecordV3Request) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateFormRecordV3Request) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateFormRecordV3Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateFormRecordV3Request(val *CreateFormRecordV3Request) *NullableCreateFormRecordV3Request {
	return &NullableCreateFormRecordV3Request{value: val, isSet: true}
}

func (v NullableCreateFormRecordV3Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateFormRecordV3Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


