/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateOrgRoleRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateOrgRoleRequest{}

// CreateOrgRoleRequest struct for CreateOrgRoleRequest
type CreateOrgRoleRequest struct {
	// 创建人 ID
	OperatorId *string `json:"operatorId,omitempty"`
	// 角色名称
	Name *string `json:"name,omitempty"`
	// 权限点
	Permissions []string `json:"permissions,omitempty"`
	// 外部角色ID，企业自己的角色编号
	OpenId *string `json:"openId,omitempty"`
	// 角色级别1:管理员, 0:企业成员, -1: 外部成员
	Level *float32 `json:"level,omitempty"`
}

// NewCreateOrgRoleRequest instantiates a new CreateOrgRoleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrgRoleRequest() *CreateOrgRoleRequest {
	this := CreateOrgRoleRequest{}
	return &this
}

// NewCreateOrgRoleRequestWithDefaults instantiates a new CreateOrgRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrgRoleRequestWithDefaults() *CreateOrgRoleRequest {
	this := CreateOrgRoleRequest{}
	return &this
}

// GetOperatorId returns the OperatorId field value if set, zero value otherwise.
func (o *CreateOrgRoleRequest) GetOperatorId() string {
	if o == nil || IsNil(o.OperatorId) {
		var ret string
		return ret
	}
	return *o.OperatorId
}

// GetOperatorIdOk returns a tuple with the OperatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrgRoleRequest) GetOperatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.OperatorId) {
		return nil, false
	}
	return o.OperatorId, true
}

// HasOperatorId returns a boolean if a field has been set.
func (o *CreateOrgRoleRequest) HasOperatorId() bool {
	if o != nil && !IsNil(o.OperatorId) {
		return true
	}

	return false
}

// SetOperatorId gets a reference to the given string and assigns it to the OperatorId field.
func (o *CreateOrgRoleRequest) SetOperatorId(v string) {
	o.OperatorId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateOrgRoleRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrgRoleRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateOrgRoleRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateOrgRoleRequest) SetName(v string) {
	o.Name = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *CreateOrgRoleRequest) GetPermissions() []string {
	if o == nil || IsNil(o.Permissions) {
		var ret []string
		return ret
	}
	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrgRoleRequest) GetPermissionsOk() ([]string, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *CreateOrgRoleRequest) HasPermissions() bool {
	if o != nil && !IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []string and assigns it to the Permissions field.
func (o *CreateOrgRoleRequest) SetPermissions(v []string) {
	o.Permissions = v
}

// GetOpenId returns the OpenId field value if set, zero value otherwise.
func (o *CreateOrgRoleRequest) GetOpenId() string {
	if o == nil || IsNil(o.OpenId) {
		var ret string
		return ret
	}
	return *o.OpenId
}

// GetOpenIdOk returns a tuple with the OpenId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrgRoleRequest) GetOpenIdOk() (*string, bool) {
	if o == nil || IsNil(o.OpenId) {
		return nil, false
	}
	return o.OpenId, true
}

// HasOpenId returns a boolean if a field has been set.
func (o *CreateOrgRoleRequest) HasOpenId() bool {
	if o != nil && !IsNil(o.OpenId) {
		return true
	}

	return false
}

// SetOpenId gets a reference to the given string and assigns it to the OpenId field.
func (o *CreateOrgRoleRequest) SetOpenId(v string) {
	o.OpenId = &v
}

// GetLevel returns the Level field value if set, zero value otherwise.
func (o *CreateOrgRoleRequest) GetLevel() float32 {
	if o == nil || IsNil(o.Level) {
		var ret float32
		return ret
	}
	return *o.Level
}

// GetLevelOk returns a tuple with the Level field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrgRoleRequest) GetLevelOk() (*float32, bool) {
	if o == nil || IsNil(o.Level) {
		return nil, false
	}
	return o.Level, true
}

// HasLevel returns a boolean if a field has been set.
func (o *CreateOrgRoleRequest) HasLevel() bool {
	if o != nil && !IsNil(o.Level) {
		return true
	}

	return false
}

// SetLevel gets a reference to the given float32 and assigns it to the Level field.
func (o *CreateOrgRoleRequest) SetLevel(v float32) {
	o.Level = &v
}

func (o CreateOrgRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateOrgRoleRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OperatorId) {
		toSerialize["operatorId"] = o.OperatorId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Permissions) {
		toSerialize["permissions"] = o.Permissions
	}
	if !IsNil(o.OpenId) {
		toSerialize["openId"] = o.OpenId
	}
	if !IsNil(o.Level) {
		toSerialize["level"] = o.Level
	}
	return toSerialize, nil
}

type NullableCreateOrgRoleRequest struct {
	value *CreateOrgRoleRequest
	isSet bool
}

func (v NullableCreateOrgRoleRequest) Get() *CreateOrgRoleRequest {
	return v.value
}

func (v *NullableCreateOrgRoleRequest) Set(val *CreateOrgRoleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrgRoleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrgRoleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrgRoleRequest(val *CreateOrgRoleRequest) *NullableCreateOrgRoleRequest {
	return &NullableCreateOrgRoleRequest{value: val, isSet: true}
}

func (v NullableCreateOrgRoleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrgRoleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


