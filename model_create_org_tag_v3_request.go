/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateOrgTagV3Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateOrgTagV3Request{}

// CreateOrgTagV3Request struct for CreateOrgTagV3Request
type CreateOrgTagV3Request struct {
	// 标签名字
	Name *string `json:"name,omitempty"`
	// 标签颜色
	Color *string `json:"color,omitempty"`
	// 标签分类IDs，用逗号组合
	TagcategoryIds *string `json:"tagcategoryIds,omitempty"`
}

// NewCreateOrgTagV3Request instantiates a new CreateOrgTagV3Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrgTagV3Request() *CreateOrgTagV3Request {
	this := CreateOrgTagV3Request{}
	return &this
}

// NewCreateOrgTagV3RequestWithDefaults instantiates a new CreateOrgTagV3Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrgTagV3RequestWithDefaults() *CreateOrgTagV3Request {
	this := CreateOrgTagV3Request{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateOrgTagV3Request) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrgTagV3Request) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateOrgTagV3Request) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateOrgTagV3Request) SetName(v string) {
	o.Name = &v
}

// GetColor returns the Color field value if set, zero value otherwise.
func (o *CreateOrgTagV3Request) GetColor() string {
	if o == nil || IsNil(o.Color) {
		var ret string
		return ret
	}
	return *o.Color
}

// GetColorOk returns a tuple with the Color field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrgTagV3Request) GetColorOk() (*string, bool) {
	if o == nil || IsNil(o.Color) {
		return nil, false
	}
	return o.Color, true
}

// HasColor returns a boolean if a field has been set.
func (o *CreateOrgTagV3Request) HasColor() bool {
	if o != nil && !IsNil(o.Color) {
		return true
	}

	return false
}

// SetColor gets a reference to the given string and assigns it to the Color field.
func (o *CreateOrgTagV3Request) SetColor(v string) {
	o.Color = &v
}

// GetTagcategoryIds returns the TagcategoryIds field value if set, zero value otherwise.
func (o *CreateOrgTagV3Request) GetTagcategoryIds() string {
	if o == nil || IsNil(o.TagcategoryIds) {
		var ret string
		return ret
	}
	return *o.TagcategoryIds
}

// GetTagcategoryIdsOk returns a tuple with the TagcategoryIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrgTagV3Request) GetTagcategoryIdsOk() (*string, bool) {
	if o == nil || IsNil(o.TagcategoryIds) {
		return nil, false
	}
	return o.TagcategoryIds, true
}

// HasTagcategoryIds returns a boolean if a field has been set.
func (o *CreateOrgTagV3Request) HasTagcategoryIds() bool {
	if o != nil && !IsNil(o.TagcategoryIds) {
		return true
	}

	return false
}

// SetTagcategoryIds gets a reference to the given string and assigns it to the TagcategoryIds field.
func (o *CreateOrgTagV3Request) SetTagcategoryIds(v string) {
	o.TagcategoryIds = &v
}

func (o CreateOrgTagV3Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateOrgTagV3Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Color) {
		toSerialize["color"] = o.Color
	}
	if !IsNil(o.TagcategoryIds) {
		toSerialize["tagcategoryIds"] = o.TagcategoryIds
	}
	return toSerialize, nil
}

type NullableCreateOrgTagV3Request struct {
	value *CreateOrgTagV3Request
	isSet bool
}

func (v NullableCreateOrgTagV3Request) Get() *CreateOrgTagV3Request {
	return v.value
}

func (v *NullableCreateOrgTagV3Request) Set(val *CreateOrgTagV3Request) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrgTagV3Request) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrgTagV3Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrgTagV3Request(val *CreateOrgTagV3Request) *NullableCreateOrgTagV3Request {
	return &NullableCreateOrgTagV3Request{value: val, isSet: true}
}

func (v NullableCreateOrgTagV3Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrgTagV3Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


