/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreatePlanTimeRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreatePlanTimeRequest{}

// CreatePlanTimeRequest struct for CreatePlanTimeRequest
type CreatePlanTimeRequest struct {
	// 工时执行人ID
	UserId *string `json:"userId,omitempty"`
	// 工时提交人ID
	SubmitterId *string `json:"submitterId,omitempty"`
	// 任务 ID
	ObjectId *string `json:"objectId,omitempty"`
	// 入参: task
	ObjectType *string `json:"objectType,omitempty"`
	// 是否包含节假日, 传 1 表示周六日也填工时，否则填0系统会跳过周六日顺延周一开始填工时
	IncludesHolidays *int32 `json:"includesHolidays,omitempty"`
	// 如果开始截止时间跨天了，填1，否则填0
	IsDuration *int32 `json:"isDuration,omitempty"`
	// 计划工时数
	Plantime *int32 `json:"plantime,omitempty"`
	// 开始时间
	StartDate *string `json:"startDate,omitempty"`
	// 结束时间
	EndDate *string `json:"endDate,omitempty"`
	// 是否关闭任务动态
	IgnoreActivity *bool `json:"ignoreActivity,omitempty"`
}

// NewCreatePlanTimeRequest instantiates a new CreatePlanTimeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreatePlanTimeRequest() *CreatePlanTimeRequest {
	this := CreatePlanTimeRequest{}
	return &this
}

// NewCreatePlanTimeRequestWithDefaults instantiates a new CreatePlanTimeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreatePlanTimeRequestWithDefaults() *CreatePlanTimeRequest {
	this := CreatePlanTimeRequest{}
	return &this
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *CreatePlanTimeRequest) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePlanTimeRequest) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *CreatePlanTimeRequest) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *CreatePlanTimeRequest) SetUserId(v string) {
	o.UserId = &v
}

// GetSubmitterId returns the SubmitterId field value if set, zero value otherwise.
func (o *CreatePlanTimeRequest) GetSubmitterId() string {
	if o == nil || IsNil(o.SubmitterId) {
		var ret string
		return ret
	}
	return *o.SubmitterId
}

// GetSubmitterIdOk returns a tuple with the SubmitterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePlanTimeRequest) GetSubmitterIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubmitterId) {
		return nil, false
	}
	return o.SubmitterId, true
}

// HasSubmitterId returns a boolean if a field has been set.
func (o *CreatePlanTimeRequest) HasSubmitterId() bool {
	if o != nil && !IsNil(o.SubmitterId) {
		return true
	}

	return false
}

// SetSubmitterId gets a reference to the given string and assigns it to the SubmitterId field.
func (o *CreatePlanTimeRequest) SetSubmitterId(v string) {
	o.SubmitterId = &v
}

// GetObjectId returns the ObjectId field value if set, zero value otherwise.
func (o *CreatePlanTimeRequest) GetObjectId() string {
	if o == nil || IsNil(o.ObjectId) {
		var ret string
		return ret
	}
	return *o.ObjectId
}

// GetObjectIdOk returns a tuple with the ObjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePlanTimeRequest) GetObjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ObjectId) {
		return nil, false
	}
	return o.ObjectId, true
}

// HasObjectId returns a boolean if a field has been set.
func (o *CreatePlanTimeRequest) HasObjectId() bool {
	if o != nil && !IsNil(o.ObjectId) {
		return true
	}

	return false
}

// SetObjectId gets a reference to the given string and assigns it to the ObjectId field.
func (o *CreatePlanTimeRequest) SetObjectId(v string) {
	o.ObjectId = &v
}

// GetObjectType returns the ObjectType field value if set, zero value otherwise.
func (o *CreatePlanTimeRequest) GetObjectType() string {
	if o == nil || IsNil(o.ObjectType) {
		var ret string
		return ret
	}
	return *o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePlanTimeRequest) GetObjectTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ObjectType) {
		return nil, false
	}
	return o.ObjectType, true
}

// HasObjectType returns a boolean if a field has been set.
func (o *CreatePlanTimeRequest) HasObjectType() bool {
	if o != nil && !IsNil(o.ObjectType) {
		return true
	}

	return false
}

// SetObjectType gets a reference to the given string and assigns it to the ObjectType field.
func (o *CreatePlanTimeRequest) SetObjectType(v string) {
	o.ObjectType = &v
}

// GetIncludesHolidays returns the IncludesHolidays field value if set, zero value otherwise.
func (o *CreatePlanTimeRequest) GetIncludesHolidays() int32 {
	if o == nil || IsNil(o.IncludesHolidays) {
		var ret int32
		return ret
	}
	return *o.IncludesHolidays
}

// GetIncludesHolidaysOk returns a tuple with the IncludesHolidays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePlanTimeRequest) GetIncludesHolidaysOk() (*int32, bool) {
	if o == nil || IsNil(o.IncludesHolidays) {
		return nil, false
	}
	return o.IncludesHolidays, true
}

// HasIncludesHolidays returns a boolean if a field has been set.
func (o *CreatePlanTimeRequest) HasIncludesHolidays() bool {
	if o != nil && !IsNil(o.IncludesHolidays) {
		return true
	}

	return false
}

// SetIncludesHolidays gets a reference to the given int32 and assigns it to the IncludesHolidays field.
func (o *CreatePlanTimeRequest) SetIncludesHolidays(v int32) {
	o.IncludesHolidays = &v
}

// GetIsDuration returns the IsDuration field value if set, zero value otherwise.
func (o *CreatePlanTimeRequest) GetIsDuration() int32 {
	if o == nil || IsNil(o.IsDuration) {
		var ret int32
		return ret
	}
	return *o.IsDuration
}

// GetIsDurationOk returns a tuple with the IsDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePlanTimeRequest) GetIsDurationOk() (*int32, bool) {
	if o == nil || IsNil(o.IsDuration) {
		return nil, false
	}
	return o.IsDuration, true
}

// HasIsDuration returns a boolean if a field has been set.
func (o *CreatePlanTimeRequest) HasIsDuration() bool {
	if o != nil && !IsNil(o.IsDuration) {
		return true
	}

	return false
}

// SetIsDuration gets a reference to the given int32 and assigns it to the IsDuration field.
func (o *CreatePlanTimeRequest) SetIsDuration(v int32) {
	o.IsDuration = &v
}

// GetPlantime returns the Plantime field value if set, zero value otherwise.
func (o *CreatePlanTimeRequest) GetPlantime() int32 {
	if o == nil || IsNil(o.Plantime) {
		var ret int32
		return ret
	}
	return *o.Plantime
}

// GetPlantimeOk returns a tuple with the Plantime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePlanTimeRequest) GetPlantimeOk() (*int32, bool) {
	if o == nil || IsNil(o.Plantime) {
		return nil, false
	}
	return o.Plantime, true
}

// HasPlantime returns a boolean if a field has been set.
func (o *CreatePlanTimeRequest) HasPlantime() bool {
	if o != nil && !IsNil(o.Plantime) {
		return true
	}

	return false
}

// SetPlantime gets a reference to the given int32 and assigns it to the Plantime field.
func (o *CreatePlanTimeRequest) SetPlantime(v int32) {
	o.Plantime = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *CreatePlanTimeRequest) GetStartDate() string {
	if o == nil || IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePlanTimeRequest) GetStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *CreatePlanTimeRequest) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *CreatePlanTimeRequest) SetStartDate(v string) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *CreatePlanTimeRequest) GetEndDate() string {
	if o == nil || IsNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePlanTimeRequest) GetEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *CreatePlanTimeRequest) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *CreatePlanTimeRequest) SetEndDate(v string) {
	o.EndDate = &v
}

// GetIgnoreActivity returns the IgnoreActivity field value if set, zero value otherwise.
func (o *CreatePlanTimeRequest) GetIgnoreActivity() bool {
	if o == nil || IsNil(o.IgnoreActivity) {
		var ret bool
		return ret
	}
	return *o.IgnoreActivity
}

// GetIgnoreActivityOk returns a tuple with the IgnoreActivity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePlanTimeRequest) GetIgnoreActivityOk() (*bool, bool) {
	if o == nil || IsNil(o.IgnoreActivity) {
		return nil, false
	}
	return o.IgnoreActivity, true
}

// HasIgnoreActivity returns a boolean if a field has been set.
func (o *CreatePlanTimeRequest) HasIgnoreActivity() bool {
	if o != nil && !IsNil(o.IgnoreActivity) {
		return true
	}

	return false
}

// SetIgnoreActivity gets a reference to the given bool and assigns it to the IgnoreActivity field.
func (o *CreatePlanTimeRequest) SetIgnoreActivity(v bool) {
	o.IgnoreActivity = &v
}

func (o CreatePlanTimeRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreatePlanTimeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	if !IsNil(o.SubmitterId) {
		toSerialize["submitterId"] = o.SubmitterId
	}
	if !IsNil(o.ObjectId) {
		toSerialize["objectId"] = o.ObjectId
	}
	if !IsNil(o.ObjectType) {
		toSerialize["objectType"] = o.ObjectType
	}
	if !IsNil(o.IncludesHolidays) {
		toSerialize["includesHolidays"] = o.IncludesHolidays
	}
	if !IsNil(o.IsDuration) {
		toSerialize["isDuration"] = o.IsDuration
	}
	if !IsNil(o.Plantime) {
		toSerialize["plantime"] = o.Plantime
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !IsNil(o.IgnoreActivity) {
		toSerialize["ignoreActivity"] = o.IgnoreActivity
	}
	return toSerialize, nil
}

type NullableCreatePlanTimeRequest struct {
	value *CreatePlanTimeRequest
	isSet bool
}

func (v NullableCreatePlanTimeRequest) Get() *CreatePlanTimeRequest {
	return v.value
}

func (v *NullableCreatePlanTimeRequest) Set(val *CreatePlanTimeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreatePlanTimeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreatePlanTimeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreatePlanTimeRequest(val *CreatePlanTimeRequest) *NullableCreatePlanTimeRequest {
	return &NullableCreatePlanTimeRequest{value: val, isSet: true}
}

func (v NullableCreatePlanTimeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreatePlanTimeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


