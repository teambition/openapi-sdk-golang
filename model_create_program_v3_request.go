/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the CreateProgramV3Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateProgramV3Request{}

// CreateProgramV3Request struct for CreateProgramV3Request
type CreateProgramV3Request struct {
	// 企业 ID
	OrganizationId *string `json:"organizationId,omitempty"`
	// 父项目集 ID
	ParentId *string `json:"parentId,omitempty"`
	// 持有者 ID
	HolderId *string `json:"holderId,omitempty"`
	// 开始日期
	StartDate *time.Time `json:"startDate,omitempty"`
	// 截止日期
	DueDate *time.Time `json:"dueDate,omitempty"`
	// 项目集名称
	Name *string `json:"name,omitempty"`
	// 项目集描述
	Description *string `json:"description,omitempty"`
	// 项目集内用户 ID 列表
	UserIds []string `json:"userIds,omitempty"`
}

// NewCreateProgramV3Request instantiates a new CreateProgramV3Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateProgramV3Request() *CreateProgramV3Request {
	this := CreateProgramV3Request{}
	var description string = ""
	this.Description = &description
	return &this
}

// NewCreateProgramV3RequestWithDefaults instantiates a new CreateProgramV3Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateProgramV3RequestWithDefaults() *CreateProgramV3Request {
	this := CreateProgramV3Request{}
	var description string = ""
	this.Description = &description
	return &this
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *CreateProgramV3Request) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProgramV3Request) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *CreateProgramV3Request) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *CreateProgramV3Request) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *CreateProgramV3Request) GetParentId() string {
	if o == nil || IsNil(o.ParentId) {
		var ret string
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProgramV3Request) GetParentIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentId) {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *CreateProgramV3Request) HasParentId() bool {
	if o != nil && !IsNil(o.ParentId) {
		return true
	}

	return false
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *CreateProgramV3Request) SetParentId(v string) {
	o.ParentId = &v
}

// GetHolderId returns the HolderId field value if set, zero value otherwise.
func (o *CreateProgramV3Request) GetHolderId() string {
	if o == nil || IsNil(o.HolderId) {
		var ret string
		return ret
	}
	return *o.HolderId
}

// GetHolderIdOk returns a tuple with the HolderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProgramV3Request) GetHolderIdOk() (*string, bool) {
	if o == nil || IsNil(o.HolderId) {
		return nil, false
	}
	return o.HolderId, true
}

// HasHolderId returns a boolean if a field has been set.
func (o *CreateProgramV3Request) HasHolderId() bool {
	if o != nil && !IsNil(o.HolderId) {
		return true
	}

	return false
}

// SetHolderId gets a reference to the given string and assigns it to the HolderId field.
func (o *CreateProgramV3Request) SetHolderId(v string) {
	o.HolderId = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *CreateProgramV3Request) GetStartDate() time.Time {
	if o == nil || IsNil(o.StartDate) {
		var ret time.Time
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProgramV3Request) GetStartDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *CreateProgramV3Request) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given time.Time and assigns it to the StartDate field.
func (o *CreateProgramV3Request) SetStartDate(v time.Time) {
	o.StartDate = &v
}

// GetDueDate returns the DueDate field value if set, zero value otherwise.
func (o *CreateProgramV3Request) GetDueDate() time.Time {
	if o == nil || IsNil(o.DueDate) {
		var ret time.Time
		return ret
	}
	return *o.DueDate
}

// GetDueDateOk returns a tuple with the DueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProgramV3Request) GetDueDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DueDate) {
		return nil, false
	}
	return o.DueDate, true
}

// HasDueDate returns a boolean if a field has been set.
func (o *CreateProgramV3Request) HasDueDate() bool {
	if o != nil && !IsNil(o.DueDate) {
		return true
	}

	return false
}

// SetDueDate gets a reference to the given time.Time and assigns it to the DueDate field.
func (o *CreateProgramV3Request) SetDueDate(v time.Time) {
	o.DueDate = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateProgramV3Request) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProgramV3Request) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateProgramV3Request) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateProgramV3Request) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateProgramV3Request) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProgramV3Request) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateProgramV3Request) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateProgramV3Request) SetDescription(v string) {
	o.Description = &v
}

// GetUserIds returns the UserIds field value if set, zero value otherwise.
func (o *CreateProgramV3Request) GetUserIds() []string {
	if o == nil || IsNil(o.UserIds) {
		var ret []string
		return ret
	}
	return o.UserIds
}

// GetUserIdsOk returns a tuple with the UserIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProgramV3Request) GetUserIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.UserIds) {
		return nil, false
	}
	return o.UserIds, true
}

// HasUserIds returns a boolean if a field has been set.
func (o *CreateProgramV3Request) HasUserIds() bool {
	if o != nil && !IsNil(o.UserIds) {
		return true
	}

	return false
}

// SetUserIds gets a reference to the given []string and assigns it to the UserIds field.
func (o *CreateProgramV3Request) SetUserIds(v []string) {
	o.UserIds = v
}

func (o CreateProgramV3Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateProgramV3Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if !IsNil(o.ParentId) {
		toSerialize["parentId"] = o.ParentId
	}
	if !IsNil(o.HolderId) {
		toSerialize["holderId"] = o.HolderId
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.DueDate) {
		toSerialize["dueDate"] = o.DueDate
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.UserIds) {
		toSerialize["userIds"] = o.UserIds
	}
	return toSerialize, nil
}

type NullableCreateProgramV3Request struct {
	value *CreateProgramV3Request
	isSet bool
}

func (v NullableCreateProgramV3Request) Get() *CreateProgramV3Request {
	return v.value
}

func (v *NullableCreateProgramV3Request) Set(val *CreateProgramV3Request) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateProgramV3Request) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateProgramV3Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateProgramV3Request(val *CreateProgramV3Request) *NullableCreateProgramV3Request {
	return &NullableCreateProgramV3Request{value: val, isSet: true}
}

func (v NullableCreateProgramV3Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateProgramV3Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


