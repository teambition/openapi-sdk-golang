/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the CreateProgramV3ResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateProgramV3ResponseResult{}

// CreateProgramV3ResponseResult struct for CreateProgramV3ResponseResult
type CreateProgramV3ResponseResult struct {
	// 项目集 ID
	Id *string `json:"id,omitempty"`
	// 项目集名称
	Name *string `json:"name,omitempty"`
	// 企业 ID
	OrganizationId *string `json:"organizationId,omitempty"`
	// 创建者 ID
	CreatorId *string `json:"creatorId,omitempty"`
	// 项目集拥有者 ID
	HolderId *string `json:"holderId,omitempty"`
	// 祖先 ID 列表
	AncestorIds []string `json:"ancestorIds,omitempty"`
	// 项目集描述
	Description *string `json:"description,omitempty"`
	// 创建时间
	Created *time.Time `json:"created,omitempty"`
	// 修改时间
	Updated *time.Time `json:"updated,omitempty"`
	// 开始日期
	StartDate *time.Time `json:"startDate,omitempty"`
	// 截止日期
	DueDate *time.Time `json:"dueDate,omitempty"`
}

// NewCreateProgramV3ResponseResult instantiates a new CreateProgramV3ResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateProgramV3ResponseResult() *CreateProgramV3ResponseResult {
	this := CreateProgramV3ResponseResult{}
	return &this
}

// NewCreateProgramV3ResponseResultWithDefaults instantiates a new CreateProgramV3ResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateProgramV3ResponseResultWithDefaults() *CreateProgramV3ResponseResult {
	this := CreateProgramV3ResponseResult{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CreateProgramV3ResponseResult) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProgramV3ResponseResult) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CreateProgramV3ResponseResult) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CreateProgramV3ResponseResult) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateProgramV3ResponseResult) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProgramV3ResponseResult) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateProgramV3ResponseResult) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateProgramV3ResponseResult) SetName(v string) {
	o.Name = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *CreateProgramV3ResponseResult) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProgramV3ResponseResult) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *CreateProgramV3ResponseResult) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *CreateProgramV3ResponseResult) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise.
func (o *CreateProgramV3ResponseResult) GetCreatorId() string {
	if o == nil || IsNil(o.CreatorId) {
		var ret string
		return ret
	}
	return *o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProgramV3ResponseResult) GetCreatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorId) {
		return nil, false
	}
	return o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *CreateProgramV3ResponseResult) HasCreatorId() bool {
	if o != nil && !IsNil(o.CreatorId) {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given string and assigns it to the CreatorId field.
func (o *CreateProgramV3ResponseResult) SetCreatorId(v string) {
	o.CreatorId = &v
}

// GetHolderId returns the HolderId field value if set, zero value otherwise.
func (o *CreateProgramV3ResponseResult) GetHolderId() string {
	if o == nil || IsNil(o.HolderId) {
		var ret string
		return ret
	}
	return *o.HolderId
}

// GetHolderIdOk returns a tuple with the HolderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProgramV3ResponseResult) GetHolderIdOk() (*string, bool) {
	if o == nil || IsNil(o.HolderId) {
		return nil, false
	}
	return o.HolderId, true
}

// HasHolderId returns a boolean if a field has been set.
func (o *CreateProgramV3ResponseResult) HasHolderId() bool {
	if o != nil && !IsNil(o.HolderId) {
		return true
	}

	return false
}

// SetHolderId gets a reference to the given string and assigns it to the HolderId field.
func (o *CreateProgramV3ResponseResult) SetHolderId(v string) {
	o.HolderId = &v
}

// GetAncestorIds returns the AncestorIds field value if set, zero value otherwise.
func (o *CreateProgramV3ResponseResult) GetAncestorIds() []string {
	if o == nil || IsNil(o.AncestorIds) {
		var ret []string
		return ret
	}
	return o.AncestorIds
}

// GetAncestorIdsOk returns a tuple with the AncestorIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProgramV3ResponseResult) GetAncestorIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.AncestorIds) {
		return nil, false
	}
	return o.AncestorIds, true
}

// HasAncestorIds returns a boolean if a field has been set.
func (o *CreateProgramV3ResponseResult) HasAncestorIds() bool {
	if o != nil && !IsNil(o.AncestorIds) {
		return true
	}

	return false
}

// SetAncestorIds gets a reference to the given []string and assigns it to the AncestorIds field.
func (o *CreateProgramV3ResponseResult) SetAncestorIds(v []string) {
	o.AncestorIds = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateProgramV3ResponseResult) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProgramV3ResponseResult) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateProgramV3ResponseResult) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateProgramV3ResponseResult) SetDescription(v string) {
	o.Description = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *CreateProgramV3ResponseResult) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProgramV3ResponseResult) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *CreateProgramV3ResponseResult) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *CreateProgramV3ResponseResult) SetCreated(v time.Time) {
	o.Created = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *CreateProgramV3ResponseResult) GetUpdated() time.Time {
	if o == nil || IsNil(o.Updated) {
		var ret time.Time
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProgramV3ResponseResult) GetUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Updated) {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *CreateProgramV3ResponseResult) HasUpdated() bool {
	if o != nil && !IsNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given time.Time and assigns it to the Updated field.
func (o *CreateProgramV3ResponseResult) SetUpdated(v time.Time) {
	o.Updated = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *CreateProgramV3ResponseResult) GetStartDate() time.Time {
	if o == nil || IsNil(o.StartDate) {
		var ret time.Time
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProgramV3ResponseResult) GetStartDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *CreateProgramV3ResponseResult) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given time.Time and assigns it to the StartDate field.
func (o *CreateProgramV3ResponseResult) SetStartDate(v time.Time) {
	o.StartDate = &v
}

// GetDueDate returns the DueDate field value if set, zero value otherwise.
func (o *CreateProgramV3ResponseResult) GetDueDate() time.Time {
	if o == nil || IsNil(o.DueDate) {
		var ret time.Time
		return ret
	}
	return *o.DueDate
}

// GetDueDateOk returns a tuple with the DueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProgramV3ResponseResult) GetDueDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DueDate) {
		return nil, false
	}
	return o.DueDate, true
}

// HasDueDate returns a boolean if a field has been set.
func (o *CreateProgramV3ResponseResult) HasDueDate() bool {
	if o != nil && !IsNil(o.DueDate) {
		return true
	}

	return false
}

// SetDueDate gets a reference to the given time.Time and assigns it to the DueDate field.
func (o *CreateProgramV3ResponseResult) SetDueDate(v time.Time) {
	o.DueDate = &v
}

func (o CreateProgramV3ResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateProgramV3ResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if !IsNil(o.CreatorId) {
		toSerialize["creatorId"] = o.CreatorId
	}
	if !IsNil(o.HolderId) {
		toSerialize["holderId"] = o.HolderId
	}
	if !IsNil(o.AncestorIds) {
		toSerialize["ancestorIds"] = o.AncestorIds
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.Updated) {
		toSerialize["updated"] = o.Updated
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.DueDate) {
		toSerialize["dueDate"] = o.DueDate
	}
	return toSerialize, nil
}

type NullableCreateProgramV3ResponseResult struct {
	value *CreateProgramV3ResponseResult
	isSet bool
}

func (v NullableCreateProgramV3ResponseResult) Get() *CreateProgramV3ResponseResult {
	return v.value
}

func (v *NullableCreateProgramV3ResponseResult) Set(val *CreateProgramV3ResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateProgramV3ResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateProgramV3ResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateProgramV3ResponseResult(val *CreateProgramV3ResponseResult) *NullableCreateProgramV3ResponseResult {
	return &NullableCreateProgramV3ResponseResult{value: val, isSet: true}
}

func (v NullableCreateProgramV3ResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateProgramV3ResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


