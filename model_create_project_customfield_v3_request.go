/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateProjectCustomfieldV3Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateProjectCustomfieldV3Request{}

// CreateProjectCustomfieldV3Request struct for CreateProjectCustomfieldV3Request
type CreateProjectCustomfieldV3Request struct {
	Name *string `json:"name,omitempty"`
	// 字段类型  - `text`: 文本 - `number`: 数字 - `date`: 日期 - `dropDown`: 单选 - `multipleChoice`: 多选 
	Type *string `json:"type,omitempty"`
	AdvancedCustomfieldId *string `json:"advancedCustomfieldId,omitempty"`
	Choices []CreateProjectCustomfieldV3RequestChoicesInner `json:"choices,omitempty"`
	// 标签集合
	Labels []string `json:"labels,omitempty"`
	// 内容载荷
	Payload map[string]interface{} `json:"payload,omitempty"`
}

// NewCreateProjectCustomfieldV3Request instantiates a new CreateProjectCustomfieldV3Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateProjectCustomfieldV3Request() *CreateProjectCustomfieldV3Request {
	this := CreateProjectCustomfieldV3Request{}
	return &this
}

// NewCreateProjectCustomfieldV3RequestWithDefaults instantiates a new CreateProjectCustomfieldV3Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateProjectCustomfieldV3RequestWithDefaults() *CreateProjectCustomfieldV3Request {
	this := CreateProjectCustomfieldV3Request{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateProjectCustomfieldV3Request) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectCustomfieldV3Request) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateProjectCustomfieldV3Request) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateProjectCustomfieldV3Request) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CreateProjectCustomfieldV3Request) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectCustomfieldV3Request) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CreateProjectCustomfieldV3Request) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *CreateProjectCustomfieldV3Request) SetType(v string) {
	o.Type = &v
}

// GetAdvancedCustomfieldId returns the AdvancedCustomfieldId field value if set, zero value otherwise.
func (o *CreateProjectCustomfieldV3Request) GetAdvancedCustomfieldId() string {
	if o == nil || IsNil(o.AdvancedCustomfieldId) {
		var ret string
		return ret
	}
	return *o.AdvancedCustomfieldId
}

// GetAdvancedCustomfieldIdOk returns a tuple with the AdvancedCustomfieldId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectCustomfieldV3Request) GetAdvancedCustomfieldIdOk() (*string, bool) {
	if o == nil || IsNil(o.AdvancedCustomfieldId) {
		return nil, false
	}
	return o.AdvancedCustomfieldId, true
}

// HasAdvancedCustomfieldId returns a boolean if a field has been set.
func (o *CreateProjectCustomfieldV3Request) HasAdvancedCustomfieldId() bool {
	if o != nil && !IsNil(o.AdvancedCustomfieldId) {
		return true
	}

	return false
}

// SetAdvancedCustomfieldId gets a reference to the given string and assigns it to the AdvancedCustomfieldId field.
func (o *CreateProjectCustomfieldV3Request) SetAdvancedCustomfieldId(v string) {
	o.AdvancedCustomfieldId = &v
}

// GetChoices returns the Choices field value if set, zero value otherwise.
func (o *CreateProjectCustomfieldV3Request) GetChoices() []CreateProjectCustomfieldV3RequestChoicesInner {
	if o == nil || IsNil(o.Choices) {
		var ret []CreateProjectCustomfieldV3RequestChoicesInner
		return ret
	}
	return o.Choices
}

// GetChoicesOk returns a tuple with the Choices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectCustomfieldV3Request) GetChoicesOk() ([]CreateProjectCustomfieldV3RequestChoicesInner, bool) {
	if o == nil || IsNil(o.Choices) {
		return nil, false
	}
	return o.Choices, true
}

// HasChoices returns a boolean if a field has been set.
func (o *CreateProjectCustomfieldV3Request) HasChoices() bool {
	if o != nil && !IsNil(o.Choices) {
		return true
	}

	return false
}

// SetChoices gets a reference to the given []CreateProjectCustomfieldV3RequestChoicesInner and assigns it to the Choices field.
func (o *CreateProjectCustomfieldV3Request) SetChoices(v []CreateProjectCustomfieldV3RequestChoicesInner) {
	o.Choices = v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *CreateProjectCustomfieldV3Request) GetLabels() []string {
	if o == nil || IsNil(o.Labels) {
		var ret []string
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectCustomfieldV3Request) GetLabelsOk() ([]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *CreateProjectCustomfieldV3Request) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *CreateProjectCustomfieldV3Request) SetLabels(v []string) {
	o.Labels = v
}

// GetPayload returns the Payload field value if set, zero value otherwise.
func (o *CreateProjectCustomfieldV3Request) GetPayload() map[string]interface{} {
	if o == nil || IsNil(o.Payload) {
		var ret map[string]interface{}
		return ret
	}
	return o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectCustomfieldV3Request) GetPayloadOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Payload) {
		return map[string]interface{}{}, false
	}
	return o.Payload, true
}

// HasPayload returns a boolean if a field has been set.
func (o *CreateProjectCustomfieldV3Request) HasPayload() bool {
	if o != nil && !IsNil(o.Payload) {
		return true
	}

	return false
}

// SetPayload gets a reference to the given map[string]interface{} and assigns it to the Payload field.
func (o *CreateProjectCustomfieldV3Request) SetPayload(v map[string]interface{}) {
	o.Payload = v
}

func (o CreateProjectCustomfieldV3Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateProjectCustomfieldV3Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.AdvancedCustomfieldId) {
		toSerialize["advancedCustomfieldId"] = o.AdvancedCustomfieldId
	}
	if !IsNil(o.Choices) {
		toSerialize["choices"] = o.Choices
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.Payload) {
		toSerialize["payload"] = o.Payload
	}
	return toSerialize, nil
}

type NullableCreateProjectCustomfieldV3Request struct {
	value *CreateProjectCustomfieldV3Request
	isSet bool
}

func (v NullableCreateProjectCustomfieldV3Request) Get() *CreateProjectCustomfieldV3Request {
	return v.value
}

func (v *NullableCreateProjectCustomfieldV3Request) Set(val *CreateProjectCustomfieldV3Request) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateProjectCustomfieldV3Request) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateProjectCustomfieldV3Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateProjectCustomfieldV3Request(val *CreateProjectCustomfieldV3Request) *NullableCreateProjectCustomfieldV3Request {
	return &NullableCreateProjectCustomfieldV3Request{value: val, isSet: true}
}

func (v NullableCreateProjectCustomfieldV3Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateProjectCustomfieldV3Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


