/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateProjectCustomfieldV3RequestChoicesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateProjectCustomfieldV3RequestChoicesInner{}

// CreateProjectCustomfieldV3RequestChoicesInner struct for CreateProjectCustomfieldV3RequestChoicesInner
type CreateProjectCustomfieldV3RequestChoicesInner struct {
	Value *string `json:"value,omitempty"`
}

// NewCreateProjectCustomfieldV3RequestChoicesInner instantiates a new CreateProjectCustomfieldV3RequestChoicesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateProjectCustomfieldV3RequestChoicesInner() *CreateProjectCustomfieldV3RequestChoicesInner {
	this := CreateProjectCustomfieldV3RequestChoicesInner{}
	return &this
}

// NewCreateProjectCustomfieldV3RequestChoicesInnerWithDefaults instantiates a new CreateProjectCustomfieldV3RequestChoicesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateProjectCustomfieldV3RequestChoicesInnerWithDefaults() *CreateProjectCustomfieldV3RequestChoicesInner {
	this := CreateProjectCustomfieldV3RequestChoicesInner{}
	return &this
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *CreateProjectCustomfieldV3RequestChoicesInner) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectCustomfieldV3RequestChoicesInner) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *CreateProjectCustomfieldV3RequestChoicesInner) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *CreateProjectCustomfieldV3RequestChoicesInner) SetValue(v string) {
	o.Value = &v
}

func (o CreateProjectCustomfieldV3RequestChoicesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateProjectCustomfieldV3RequestChoicesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableCreateProjectCustomfieldV3RequestChoicesInner struct {
	value *CreateProjectCustomfieldV3RequestChoicesInner
	isSet bool
}

func (v NullableCreateProjectCustomfieldV3RequestChoicesInner) Get() *CreateProjectCustomfieldV3RequestChoicesInner {
	return v.value
}

func (v *NullableCreateProjectCustomfieldV3RequestChoicesInner) Set(val *CreateProjectCustomfieldV3RequestChoicesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateProjectCustomfieldV3RequestChoicesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateProjectCustomfieldV3RequestChoicesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateProjectCustomfieldV3RequestChoicesInner(val *CreateProjectCustomfieldV3RequestChoicesInner) *NullableCreateProjectCustomfieldV3RequestChoicesInner {
	return &NullableCreateProjectCustomfieldV3RequestChoicesInner{value: val, isSet: true}
}

func (v NullableCreateProjectCustomfieldV3RequestChoicesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateProjectCustomfieldV3RequestChoicesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


