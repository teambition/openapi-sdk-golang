/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the CreateProjectFromTemplateV3Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateProjectFromTemplateV3Request{}

// CreateProjectFromTemplateV3Request 从模板创建项目请求
type CreateProjectFromTemplateV3Request struct {
	// 项目名称
	Name *string `json:"name,omitempty"`
	// 模板ID
	TemplateId *string `json:"templateId,omitempty"`
	// 模板名称（取通过模版名匹配到的第一个模版，templateId、templateName至少传一个，与templateId同时传入时优先用templateId）
	TemplateName *string `json:"templateName,omitempty"`
	// 是否为模板项目，默认为 false
	IsTemplate *bool `json:"isTemplate,omitempty"`
	// 项目可见性
	Visibility *string `json:"visibility,omitempty"`
	// 项目所属项目集ID
	ProgramId *string `json:"programId,omitempty"`
	// 项目所属项目集名称（取通过项目集名匹配到的第一个项目集，与programId同时传入时优先用programId）
	ProgramName *string `json:"programName,omitempty"`
	// 项目描述
	Description *string `json:"description,omitempty"`
	// 项目开始时间
	StartDate *time.Time `json:"startDate,omitempty"`
	// 项目结束时间
	EndDate *time.Time `json:"endDate,omitempty"`
}

// NewCreateProjectFromTemplateV3Request instantiates a new CreateProjectFromTemplateV3Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateProjectFromTemplateV3Request() *CreateProjectFromTemplateV3Request {
	this := CreateProjectFromTemplateV3Request{}
	return &this
}

// NewCreateProjectFromTemplateV3RequestWithDefaults instantiates a new CreateProjectFromTemplateV3Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateProjectFromTemplateV3RequestWithDefaults() *CreateProjectFromTemplateV3Request {
	this := CreateProjectFromTemplateV3Request{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateProjectFromTemplateV3Request) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectFromTemplateV3Request) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateProjectFromTemplateV3Request) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateProjectFromTemplateV3Request) SetName(v string) {
	o.Name = &v
}

// GetTemplateId returns the TemplateId field value if set, zero value otherwise.
func (o *CreateProjectFromTemplateV3Request) GetTemplateId() string {
	if o == nil || IsNil(o.TemplateId) {
		var ret string
		return ret
	}
	return *o.TemplateId
}

// GetTemplateIdOk returns a tuple with the TemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectFromTemplateV3Request) GetTemplateIdOk() (*string, bool) {
	if o == nil || IsNil(o.TemplateId) {
		return nil, false
	}
	return o.TemplateId, true
}

// HasTemplateId returns a boolean if a field has been set.
func (o *CreateProjectFromTemplateV3Request) HasTemplateId() bool {
	if o != nil && !IsNil(o.TemplateId) {
		return true
	}

	return false
}

// SetTemplateId gets a reference to the given string and assigns it to the TemplateId field.
func (o *CreateProjectFromTemplateV3Request) SetTemplateId(v string) {
	o.TemplateId = &v
}

// GetTemplateName returns the TemplateName field value if set, zero value otherwise.
func (o *CreateProjectFromTemplateV3Request) GetTemplateName() string {
	if o == nil || IsNil(o.TemplateName) {
		var ret string
		return ret
	}
	return *o.TemplateName
}

// GetTemplateNameOk returns a tuple with the TemplateName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectFromTemplateV3Request) GetTemplateNameOk() (*string, bool) {
	if o == nil || IsNil(o.TemplateName) {
		return nil, false
	}
	return o.TemplateName, true
}

// HasTemplateName returns a boolean if a field has been set.
func (o *CreateProjectFromTemplateV3Request) HasTemplateName() bool {
	if o != nil && !IsNil(o.TemplateName) {
		return true
	}

	return false
}

// SetTemplateName gets a reference to the given string and assigns it to the TemplateName field.
func (o *CreateProjectFromTemplateV3Request) SetTemplateName(v string) {
	o.TemplateName = &v
}

// GetIsTemplate returns the IsTemplate field value if set, zero value otherwise.
func (o *CreateProjectFromTemplateV3Request) GetIsTemplate() bool {
	if o == nil || IsNil(o.IsTemplate) {
		var ret bool
		return ret
	}
	return *o.IsTemplate
}

// GetIsTemplateOk returns a tuple with the IsTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectFromTemplateV3Request) GetIsTemplateOk() (*bool, bool) {
	if o == nil || IsNil(o.IsTemplate) {
		return nil, false
	}
	return o.IsTemplate, true
}

// HasIsTemplate returns a boolean if a field has been set.
func (o *CreateProjectFromTemplateV3Request) HasIsTemplate() bool {
	if o != nil && !IsNil(o.IsTemplate) {
		return true
	}

	return false
}

// SetIsTemplate gets a reference to the given bool and assigns it to the IsTemplate field.
func (o *CreateProjectFromTemplateV3Request) SetIsTemplate(v bool) {
	o.IsTemplate = &v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *CreateProjectFromTemplateV3Request) GetVisibility() string {
	if o == nil || IsNil(o.Visibility) {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectFromTemplateV3Request) GetVisibilityOk() (*string, bool) {
	if o == nil || IsNil(o.Visibility) {
		return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *CreateProjectFromTemplateV3Request) HasVisibility() bool {
	if o != nil && !IsNil(o.Visibility) {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *CreateProjectFromTemplateV3Request) SetVisibility(v string) {
	o.Visibility = &v
}

// GetProgramId returns the ProgramId field value if set, zero value otherwise.
func (o *CreateProjectFromTemplateV3Request) GetProgramId() string {
	if o == nil || IsNil(o.ProgramId) {
		var ret string
		return ret
	}
	return *o.ProgramId
}

// GetProgramIdOk returns a tuple with the ProgramId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectFromTemplateV3Request) GetProgramIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProgramId) {
		return nil, false
	}
	return o.ProgramId, true
}

// HasProgramId returns a boolean if a field has been set.
func (o *CreateProjectFromTemplateV3Request) HasProgramId() bool {
	if o != nil && !IsNil(o.ProgramId) {
		return true
	}

	return false
}

// SetProgramId gets a reference to the given string and assigns it to the ProgramId field.
func (o *CreateProjectFromTemplateV3Request) SetProgramId(v string) {
	o.ProgramId = &v
}

// GetProgramName returns the ProgramName field value if set, zero value otherwise.
func (o *CreateProjectFromTemplateV3Request) GetProgramName() string {
	if o == nil || IsNil(o.ProgramName) {
		var ret string
		return ret
	}
	return *o.ProgramName
}

// GetProgramNameOk returns a tuple with the ProgramName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectFromTemplateV3Request) GetProgramNameOk() (*string, bool) {
	if o == nil || IsNil(o.ProgramName) {
		return nil, false
	}
	return o.ProgramName, true
}

// HasProgramName returns a boolean if a field has been set.
func (o *CreateProjectFromTemplateV3Request) HasProgramName() bool {
	if o != nil && !IsNil(o.ProgramName) {
		return true
	}

	return false
}

// SetProgramName gets a reference to the given string and assigns it to the ProgramName field.
func (o *CreateProjectFromTemplateV3Request) SetProgramName(v string) {
	o.ProgramName = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateProjectFromTemplateV3Request) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectFromTemplateV3Request) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateProjectFromTemplateV3Request) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateProjectFromTemplateV3Request) SetDescription(v string) {
	o.Description = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *CreateProjectFromTemplateV3Request) GetStartDate() time.Time {
	if o == nil || IsNil(o.StartDate) {
		var ret time.Time
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectFromTemplateV3Request) GetStartDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *CreateProjectFromTemplateV3Request) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given time.Time and assigns it to the StartDate field.
func (o *CreateProjectFromTemplateV3Request) SetStartDate(v time.Time) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *CreateProjectFromTemplateV3Request) GetEndDate() time.Time {
	if o == nil || IsNil(o.EndDate) {
		var ret time.Time
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectFromTemplateV3Request) GetEndDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *CreateProjectFromTemplateV3Request) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given time.Time and assigns it to the EndDate field.
func (o *CreateProjectFromTemplateV3Request) SetEndDate(v time.Time) {
	o.EndDate = &v
}

func (o CreateProjectFromTemplateV3Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateProjectFromTemplateV3Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.TemplateId) {
		toSerialize["templateId"] = o.TemplateId
	}
	if !IsNil(o.TemplateName) {
		toSerialize["templateName"] = o.TemplateName
	}
	if !IsNil(o.IsTemplate) {
		toSerialize["isTemplate"] = o.IsTemplate
	}
	if !IsNil(o.Visibility) {
		toSerialize["visibility"] = o.Visibility
	}
	if !IsNil(o.ProgramId) {
		toSerialize["programId"] = o.ProgramId
	}
	if !IsNil(o.ProgramName) {
		toSerialize["programName"] = o.ProgramName
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	return toSerialize, nil
}

type NullableCreateProjectFromTemplateV3Request struct {
	value *CreateProjectFromTemplateV3Request
	isSet bool
}

func (v NullableCreateProjectFromTemplateV3Request) Get() *CreateProjectFromTemplateV3Request {
	return v.value
}

func (v *NullableCreateProjectFromTemplateV3Request) Set(val *CreateProjectFromTemplateV3Request) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateProjectFromTemplateV3Request) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateProjectFromTemplateV3Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateProjectFromTemplateV3Request(val *CreateProjectFromTemplateV3Request) *NullableCreateProjectFromTemplateV3Request {
	return &NullableCreateProjectFromTemplateV3Request{value: val, isSet: true}
}

func (v NullableCreateProjectFromTemplateV3Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateProjectFromTemplateV3Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


