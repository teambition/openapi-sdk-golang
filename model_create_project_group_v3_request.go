/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateProjectGroupV3Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateProjectGroupV3Request{}

// CreateProjectGroupV3Request struct for CreateProjectGroupV3Request
type CreateProjectGroupV3Request struct {
	Name *string `json:"name,omitempty"`
	// 归属企业 ID
	OrganizationId *string `json:"organizationId,omitempty"`
	// 项目分组可见性，involves 私有项目分组, organization 公开项目分组
	Visible *string `json:"visible,omitempty"`
	// 父级项目分组 ID
	ParentId *string `json:"parentId,omitempty"`
}

// NewCreateProjectGroupV3Request instantiates a new CreateProjectGroupV3Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateProjectGroupV3Request() *CreateProjectGroupV3Request {
	this := CreateProjectGroupV3Request{}
	return &this
}

// NewCreateProjectGroupV3RequestWithDefaults instantiates a new CreateProjectGroupV3Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateProjectGroupV3RequestWithDefaults() *CreateProjectGroupV3Request {
	this := CreateProjectGroupV3Request{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateProjectGroupV3Request) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectGroupV3Request) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateProjectGroupV3Request) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateProjectGroupV3Request) SetName(v string) {
	o.Name = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *CreateProjectGroupV3Request) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectGroupV3Request) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *CreateProjectGroupV3Request) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *CreateProjectGroupV3Request) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetVisible returns the Visible field value if set, zero value otherwise.
func (o *CreateProjectGroupV3Request) GetVisible() string {
	if o == nil || IsNil(o.Visible) {
		var ret string
		return ret
	}
	return *o.Visible
}

// GetVisibleOk returns a tuple with the Visible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectGroupV3Request) GetVisibleOk() (*string, bool) {
	if o == nil || IsNil(o.Visible) {
		return nil, false
	}
	return o.Visible, true
}

// HasVisible returns a boolean if a field has been set.
func (o *CreateProjectGroupV3Request) HasVisible() bool {
	if o != nil && !IsNil(o.Visible) {
		return true
	}

	return false
}

// SetVisible gets a reference to the given string and assigns it to the Visible field.
func (o *CreateProjectGroupV3Request) SetVisible(v string) {
	o.Visible = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *CreateProjectGroupV3Request) GetParentId() string {
	if o == nil || IsNil(o.ParentId) {
		var ret string
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectGroupV3Request) GetParentIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentId) {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *CreateProjectGroupV3Request) HasParentId() bool {
	if o != nil && !IsNil(o.ParentId) {
		return true
	}

	return false
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *CreateProjectGroupV3Request) SetParentId(v string) {
	o.ParentId = &v
}

func (o CreateProjectGroupV3Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateProjectGroupV3Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if !IsNil(o.Visible) {
		toSerialize["visible"] = o.Visible
	}
	if !IsNil(o.ParentId) {
		toSerialize["parentId"] = o.ParentId
	}
	return toSerialize, nil
}

type NullableCreateProjectGroupV3Request struct {
	value *CreateProjectGroupV3Request
	isSet bool
}

func (v NullableCreateProjectGroupV3Request) Get() *CreateProjectGroupV3Request {
	return v.value
}

func (v *NullableCreateProjectGroupV3Request) Set(val *CreateProjectGroupV3Request) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateProjectGroupV3Request) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateProjectGroupV3Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateProjectGroupV3Request(val *CreateProjectGroupV3Request) *NullableCreateProjectGroupV3Request {
	return &NullableCreateProjectGroupV3Request{value: val, isSet: true}
}

func (v NullableCreateProjectGroupV3Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateProjectGroupV3Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


