/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateProjectLinkV3Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateProjectLinkV3Request{}

// CreateProjectLinkV3Request 创建项目关联请求
type CreateProjectLinkV3Request struct {
	// 关联目标对象 ID
	LinkedId *string `json:"linkedId,omitempty"`
	// 关联目标对象类型
	LinkedType *string `json:"linkedType,omitempty"`
	LinkedData *CreateProjectLinkV3RequestLinkedData `json:"linkedData,omitempty"`
}

// NewCreateProjectLinkV3Request instantiates a new CreateProjectLinkV3Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateProjectLinkV3Request() *CreateProjectLinkV3Request {
	this := CreateProjectLinkV3Request{}
	return &this
}

// NewCreateProjectLinkV3RequestWithDefaults instantiates a new CreateProjectLinkV3Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateProjectLinkV3RequestWithDefaults() *CreateProjectLinkV3Request {
	this := CreateProjectLinkV3Request{}
	return &this
}

// GetLinkedId returns the LinkedId field value if set, zero value otherwise.
func (o *CreateProjectLinkV3Request) GetLinkedId() string {
	if o == nil || IsNil(o.LinkedId) {
		var ret string
		return ret
	}
	return *o.LinkedId
}

// GetLinkedIdOk returns a tuple with the LinkedId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectLinkV3Request) GetLinkedIdOk() (*string, bool) {
	if o == nil || IsNil(o.LinkedId) {
		return nil, false
	}
	return o.LinkedId, true
}

// HasLinkedId returns a boolean if a field has been set.
func (o *CreateProjectLinkV3Request) HasLinkedId() bool {
	if o != nil && !IsNil(o.LinkedId) {
		return true
	}

	return false
}

// SetLinkedId gets a reference to the given string and assigns it to the LinkedId field.
func (o *CreateProjectLinkV3Request) SetLinkedId(v string) {
	o.LinkedId = &v
}

// GetLinkedType returns the LinkedType field value if set, zero value otherwise.
func (o *CreateProjectLinkV3Request) GetLinkedType() string {
	if o == nil || IsNil(o.LinkedType) {
		var ret string
		return ret
	}
	return *o.LinkedType
}

// GetLinkedTypeOk returns a tuple with the LinkedType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectLinkV3Request) GetLinkedTypeOk() (*string, bool) {
	if o == nil || IsNil(o.LinkedType) {
		return nil, false
	}
	return o.LinkedType, true
}

// HasLinkedType returns a boolean if a field has been set.
func (o *CreateProjectLinkV3Request) HasLinkedType() bool {
	if o != nil && !IsNil(o.LinkedType) {
		return true
	}

	return false
}

// SetLinkedType gets a reference to the given string and assigns it to the LinkedType field.
func (o *CreateProjectLinkV3Request) SetLinkedType(v string) {
	o.LinkedType = &v
}

// GetLinkedData returns the LinkedData field value if set, zero value otherwise.
func (o *CreateProjectLinkV3Request) GetLinkedData() CreateProjectLinkV3RequestLinkedData {
	if o == nil || IsNil(o.LinkedData) {
		var ret CreateProjectLinkV3RequestLinkedData
		return ret
	}
	return *o.LinkedData
}

// GetLinkedDataOk returns a tuple with the LinkedData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectLinkV3Request) GetLinkedDataOk() (*CreateProjectLinkV3RequestLinkedData, bool) {
	if o == nil || IsNil(o.LinkedData) {
		return nil, false
	}
	return o.LinkedData, true
}

// HasLinkedData returns a boolean if a field has been set.
func (o *CreateProjectLinkV3Request) HasLinkedData() bool {
	if o != nil && !IsNil(o.LinkedData) {
		return true
	}

	return false
}

// SetLinkedData gets a reference to the given CreateProjectLinkV3RequestLinkedData and assigns it to the LinkedData field.
func (o *CreateProjectLinkV3Request) SetLinkedData(v CreateProjectLinkV3RequestLinkedData) {
	o.LinkedData = &v
}

func (o CreateProjectLinkV3Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateProjectLinkV3Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LinkedId) {
		toSerialize["linkedId"] = o.LinkedId
	}
	if !IsNil(o.LinkedType) {
		toSerialize["linkedType"] = o.LinkedType
	}
	if !IsNil(o.LinkedData) {
		toSerialize["linkedData"] = o.LinkedData
	}
	return toSerialize, nil
}

type NullableCreateProjectLinkV3Request struct {
	value *CreateProjectLinkV3Request
	isSet bool
}

func (v NullableCreateProjectLinkV3Request) Get() *CreateProjectLinkV3Request {
	return v.value
}

func (v *NullableCreateProjectLinkV3Request) Set(val *CreateProjectLinkV3Request) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateProjectLinkV3Request) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateProjectLinkV3Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateProjectLinkV3Request(val *CreateProjectLinkV3Request) *NullableCreateProjectLinkV3Request {
	return &NullableCreateProjectLinkV3Request{value: val, isSet: true}
}

func (v NullableCreateProjectLinkV3Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateProjectLinkV3Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


