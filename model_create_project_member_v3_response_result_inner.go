/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the CreateProjectMemberV3ResponseResultInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateProjectMemberV3ResponseResultInner{}

// CreateProjectMemberV3ResponseResultInner 项目成员信息
type CreateProjectMemberV3ResponseResultInner struct {
	// 成员ID
	Id *string `json:"id,omitempty"`
	// 成员ID
	MemberId *string `json:"memberId,omitempty"`
	// 用户ID
	UserId *string `json:"userId,omitempty"`
	// 项目ID
	BoundToObjectId *string `json:"boundToObjectId,omitempty"`
	// 
	BoundToObjectType *string `json:"boundToObjectType,omitempty"`
	// 项目角色等级， 0=成员；1=管理员；2=拥有者
	Role *int32 `json:"role,omitempty"`
	// 项目角色ID，若有 roleIds 有多个时，_roleId 取 level 最大值对应的 ID
	RoleId *string `json:"roleId,omitempty"`
	RoleIds []string `json:"roleIds,omitempty"`
	// 加入时间
	Joined *time.Time `json:"joined,omitempty"`
}

// NewCreateProjectMemberV3ResponseResultInner instantiates a new CreateProjectMemberV3ResponseResultInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateProjectMemberV3ResponseResultInner() *CreateProjectMemberV3ResponseResultInner {
	this := CreateProjectMemberV3ResponseResultInner{}
	return &this
}

// NewCreateProjectMemberV3ResponseResultInnerWithDefaults instantiates a new CreateProjectMemberV3ResponseResultInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateProjectMemberV3ResponseResultInnerWithDefaults() *CreateProjectMemberV3ResponseResultInner {
	this := CreateProjectMemberV3ResponseResultInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CreateProjectMemberV3ResponseResultInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectMemberV3ResponseResultInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CreateProjectMemberV3ResponseResultInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CreateProjectMemberV3ResponseResultInner) SetId(v string) {
	o.Id = &v
}

// GetMemberId returns the MemberId field value if set, zero value otherwise.
func (o *CreateProjectMemberV3ResponseResultInner) GetMemberId() string {
	if o == nil || IsNil(o.MemberId) {
		var ret string
		return ret
	}
	return *o.MemberId
}

// GetMemberIdOk returns a tuple with the MemberId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectMemberV3ResponseResultInner) GetMemberIdOk() (*string, bool) {
	if o == nil || IsNil(o.MemberId) {
		return nil, false
	}
	return o.MemberId, true
}

// HasMemberId returns a boolean if a field has been set.
func (o *CreateProjectMemberV3ResponseResultInner) HasMemberId() bool {
	if o != nil && !IsNil(o.MemberId) {
		return true
	}

	return false
}

// SetMemberId gets a reference to the given string and assigns it to the MemberId field.
func (o *CreateProjectMemberV3ResponseResultInner) SetMemberId(v string) {
	o.MemberId = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *CreateProjectMemberV3ResponseResultInner) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectMemberV3ResponseResultInner) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *CreateProjectMemberV3ResponseResultInner) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *CreateProjectMemberV3ResponseResultInner) SetUserId(v string) {
	o.UserId = &v
}

// GetBoundToObjectId returns the BoundToObjectId field value if set, zero value otherwise.
func (o *CreateProjectMemberV3ResponseResultInner) GetBoundToObjectId() string {
	if o == nil || IsNil(o.BoundToObjectId) {
		var ret string
		return ret
	}
	return *o.BoundToObjectId
}

// GetBoundToObjectIdOk returns a tuple with the BoundToObjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectMemberV3ResponseResultInner) GetBoundToObjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.BoundToObjectId) {
		return nil, false
	}
	return o.BoundToObjectId, true
}

// HasBoundToObjectId returns a boolean if a field has been set.
func (o *CreateProjectMemberV3ResponseResultInner) HasBoundToObjectId() bool {
	if o != nil && !IsNil(o.BoundToObjectId) {
		return true
	}

	return false
}

// SetBoundToObjectId gets a reference to the given string and assigns it to the BoundToObjectId field.
func (o *CreateProjectMemberV3ResponseResultInner) SetBoundToObjectId(v string) {
	o.BoundToObjectId = &v
}

// GetBoundToObjectType returns the BoundToObjectType field value if set, zero value otherwise.
func (o *CreateProjectMemberV3ResponseResultInner) GetBoundToObjectType() string {
	if o == nil || IsNil(o.BoundToObjectType) {
		var ret string
		return ret
	}
	return *o.BoundToObjectType
}

// GetBoundToObjectTypeOk returns a tuple with the BoundToObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectMemberV3ResponseResultInner) GetBoundToObjectTypeOk() (*string, bool) {
	if o == nil || IsNil(o.BoundToObjectType) {
		return nil, false
	}
	return o.BoundToObjectType, true
}

// HasBoundToObjectType returns a boolean if a field has been set.
func (o *CreateProjectMemberV3ResponseResultInner) HasBoundToObjectType() bool {
	if o != nil && !IsNil(o.BoundToObjectType) {
		return true
	}

	return false
}

// SetBoundToObjectType gets a reference to the given string and assigns it to the BoundToObjectType field.
func (o *CreateProjectMemberV3ResponseResultInner) SetBoundToObjectType(v string) {
	o.BoundToObjectType = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *CreateProjectMemberV3ResponseResultInner) GetRole() int32 {
	if o == nil || IsNil(o.Role) {
		var ret int32
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectMemberV3ResponseResultInner) GetRoleOk() (*int32, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *CreateProjectMemberV3ResponseResultInner) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given int32 and assigns it to the Role field.
func (o *CreateProjectMemberV3ResponseResultInner) SetRole(v int32) {
	o.Role = &v
}

// GetRoleId returns the RoleId field value if set, zero value otherwise.
func (o *CreateProjectMemberV3ResponseResultInner) GetRoleId() string {
	if o == nil || IsNil(o.RoleId) {
		var ret string
		return ret
	}
	return *o.RoleId
}

// GetRoleIdOk returns a tuple with the RoleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectMemberV3ResponseResultInner) GetRoleIdOk() (*string, bool) {
	if o == nil || IsNil(o.RoleId) {
		return nil, false
	}
	return o.RoleId, true
}

// HasRoleId returns a boolean if a field has been set.
func (o *CreateProjectMemberV3ResponseResultInner) HasRoleId() bool {
	if o != nil && !IsNil(o.RoleId) {
		return true
	}

	return false
}

// SetRoleId gets a reference to the given string and assigns it to the RoleId field.
func (o *CreateProjectMemberV3ResponseResultInner) SetRoleId(v string) {
	o.RoleId = &v
}

// GetRoleIds returns the RoleIds field value if set, zero value otherwise.
func (o *CreateProjectMemberV3ResponseResultInner) GetRoleIds() []string {
	if o == nil || IsNil(o.RoleIds) {
		var ret []string
		return ret
	}
	return o.RoleIds
}

// GetRoleIdsOk returns a tuple with the RoleIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectMemberV3ResponseResultInner) GetRoleIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.RoleIds) {
		return nil, false
	}
	return o.RoleIds, true
}

// HasRoleIds returns a boolean if a field has been set.
func (o *CreateProjectMemberV3ResponseResultInner) HasRoleIds() bool {
	if o != nil && !IsNil(o.RoleIds) {
		return true
	}

	return false
}

// SetRoleIds gets a reference to the given []string and assigns it to the RoleIds field.
func (o *CreateProjectMemberV3ResponseResultInner) SetRoleIds(v []string) {
	o.RoleIds = v
}

// GetJoined returns the Joined field value if set, zero value otherwise.
func (o *CreateProjectMemberV3ResponseResultInner) GetJoined() time.Time {
	if o == nil || IsNil(o.Joined) {
		var ret time.Time
		return ret
	}
	return *o.Joined
}

// GetJoinedOk returns a tuple with the Joined field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectMemberV3ResponseResultInner) GetJoinedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Joined) {
		return nil, false
	}
	return o.Joined, true
}

// HasJoined returns a boolean if a field has been set.
func (o *CreateProjectMemberV3ResponseResultInner) HasJoined() bool {
	if o != nil && !IsNil(o.Joined) {
		return true
	}

	return false
}

// SetJoined gets a reference to the given time.Time and assigns it to the Joined field.
func (o *CreateProjectMemberV3ResponseResultInner) SetJoined(v time.Time) {
	o.Joined = &v
}

func (o CreateProjectMemberV3ResponseResultInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateProjectMemberV3ResponseResultInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.MemberId) {
		toSerialize["memberId"] = o.MemberId
	}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	if !IsNil(o.BoundToObjectId) {
		toSerialize["boundToObjectId"] = o.BoundToObjectId
	}
	if !IsNil(o.BoundToObjectType) {
		toSerialize["boundToObjectType"] = o.BoundToObjectType
	}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	if !IsNil(o.RoleId) {
		toSerialize["roleId"] = o.RoleId
	}
	if !IsNil(o.RoleIds) {
		toSerialize["roleIds"] = o.RoleIds
	}
	if !IsNil(o.Joined) {
		toSerialize["joined"] = o.Joined
	}
	return toSerialize, nil
}

type NullableCreateProjectMemberV3ResponseResultInner struct {
	value *CreateProjectMemberV3ResponseResultInner
	isSet bool
}

func (v NullableCreateProjectMemberV3ResponseResultInner) Get() *CreateProjectMemberV3ResponseResultInner {
	return v.value
}

func (v *NullableCreateProjectMemberV3ResponseResultInner) Set(val *CreateProjectMemberV3ResponseResultInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateProjectMemberV3ResponseResultInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateProjectMemberV3ResponseResultInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateProjectMemberV3ResponseResultInner(val *CreateProjectMemberV3ResponseResultInner) *NullableCreateProjectMemberV3ResponseResultInner {
	return &NullableCreateProjectMemberV3ResponseResultInner{value: val, isSet: true}
}

func (v NullableCreateProjectMemberV3ResponseResultInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateProjectMemberV3ResponseResultInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


