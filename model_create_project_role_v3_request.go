/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateProjectRoleV3Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateProjectRoleV3Request{}

// CreateProjectRoleV3Request struct for CreateProjectRoleV3Request
type CreateProjectRoleV3Request struct {
	// 角色名称
	Name *string `json:"name,omitempty"`
	Permissions []string `json:"permissions,omitempty"`
	// 是否在项目角色下隐藏
	Hidden *bool `json:"hidden,omitempty"`
}

// NewCreateProjectRoleV3Request instantiates a new CreateProjectRoleV3Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateProjectRoleV3Request() *CreateProjectRoleV3Request {
	this := CreateProjectRoleV3Request{}
	return &this
}

// NewCreateProjectRoleV3RequestWithDefaults instantiates a new CreateProjectRoleV3Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateProjectRoleV3RequestWithDefaults() *CreateProjectRoleV3Request {
	this := CreateProjectRoleV3Request{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateProjectRoleV3Request) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectRoleV3Request) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateProjectRoleV3Request) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateProjectRoleV3Request) SetName(v string) {
	o.Name = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *CreateProjectRoleV3Request) GetPermissions() []string {
	if o == nil || IsNil(o.Permissions) {
		var ret []string
		return ret
	}
	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectRoleV3Request) GetPermissionsOk() ([]string, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *CreateProjectRoleV3Request) HasPermissions() bool {
	if o != nil && !IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []string and assigns it to the Permissions field.
func (o *CreateProjectRoleV3Request) SetPermissions(v []string) {
	o.Permissions = v
}

// GetHidden returns the Hidden field value if set, zero value otherwise.
func (o *CreateProjectRoleV3Request) GetHidden() bool {
	if o == nil || IsNil(o.Hidden) {
		var ret bool
		return ret
	}
	return *o.Hidden
}

// GetHiddenOk returns a tuple with the Hidden field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectRoleV3Request) GetHiddenOk() (*bool, bool) {
	if o == nil || IsNil(o.Hidden) {
		return nil, false
	}
	return o.Hidden, true
}

// HasHidden returns a boolean if a field has been set.
func (o *CreateProjectRoleV3Request) HasHidden() bool {
	if o != nil && !IsNil(o.Hidden) {
		return true
	}

	return false
}

// SetHidden gets a reference to the given bool and assigns it to the Hidden field.
func (o *CreateProjectRoleV3Request) SetHidden(v bool) {
	o.Hidden = &v
}

func (o CreateProjectRoleV3Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateProjectRoleV3Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Permissions) {
		toSerialize["permissions"] = o.Permissions
	}
	if !IsNil(o.Hidden) {
		toSerialize["hidden"] = o.Hidden
	}
	return toSerialize, nil
}

type NullableCreateProjectRoleV3Request struct {
	value *CreateProjectRoleV3Request
	isSet bool
}

func (v NullableCreateProjectRoleV3Request) Get() *CreateProjectRoleV3Request {
	return v.value
}

func (v *NullableCreateProjectRoleV3Request) Set(val *CreateProjectRoleV3Request) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateProjectRoleV3Request) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateProjectRoleV3Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateProjectRoleV3Request(val *CreateProjectRoleV3Request) *NullableCreateProjectRoleV3Request {
	return &NullableCreateProjectRoleV3Request{value: val, isSet: true}
}

func (v NullableCreateProjectRoleV3Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateProjectRoleV3Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


