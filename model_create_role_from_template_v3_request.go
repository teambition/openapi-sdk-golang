/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateRoleFromTemplateV3Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateRoleFromTemplateV3Request{}

// CreateRoleFromTemplateV3Request struct for CreateRoleFromTemplateV3Request
type CreateRoleFromTemplateV3Request struct {
	// 企业后台项目角色 ID 列表
	RoleIds []string `json:"roleIds,omitempty"`
}

// NewCreateRoleFromTemplateV3Request instantiates a new CreateRoleFromTemplateV3Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateRoleFromTemplateV3Request() *CreateRoleFromTemplateV3Request {
	this := CreateRoleFromTemplateV3Request{}
	return &this
}

// NewCreateRoleFromTemplateV3RequestWithDefaults instantiates a new CreateRoleFromTemplateV3Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateRoleFromTemplateV3RequestWithDefaults() *CreateRoleFromTemplateV3Request {
	this := CreateRoleFromTemplateV3Request{}
	return &this
}

// GetRoleIds returns the RoleIds field value if set, zero value otherwise.
func (o *CreateRoleFromTemplateV3Request) GetRoleIds() []string {
	if o == nil || IsNil(o.RoleIds) {
		var ret []string
		return ret
	}
	return o.RoleIds
}

// GetRoleIdsOk returns a tuple with the RoleIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRoleFromTemplateV3Request) GetRoleIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.RoleIds) {
		return nil, false
	}
	return o.RoleIds, true
}

// HasRoleIds returns a boolean if a field has been set.
func (o *CreateRoleFromTemplateV3Request) HasRoleIds() bool {
	if o != nil && !IsNil(o.RoleIds) {
		return true
	}

	return false
}

// SetRoleIds gets a reference to the given []string and assigns it to the RoleIds field.
func (o *CreateRoleFromTemplateV3Request) SetRoleIds(v []string) {
	o.RoleIds = v
}

func (o CreateRoleFromTemplateV3Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateRoleFromTemplateV3Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RoleIds) {
		toSerialize["roleIds"] = o.RoleIds
	}
	return toSerialize, nil
}

type NullableCreateRoleFromTemplateV3Request struct {
	value *CreateRoleFromTemplateV3Request
	isSet bool
}

func (v NullableCreateRoleFromTemplateV3Request) Get() *CreateRoleFromTemplateV3Request {
	return v.value
}

func (v *NullableCreateRoleFromTemplateV3Request) Set(val *CreateRoleFromTemplateV3Request) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateRoleFromTemplateV3Request) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateRoleFromTemplateV3Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateRoleFromTemplateV3Request(val *CreateRoleFromTemplateV3Request) *NullableCreateRoleFromTemplateV3Request {
	return &NullableCreateRoleFromTemplateV3Request{value: val, isSet: true}
}

func (v NullableCreateRoleFromTemplateV3Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateRoleFromTemplateV3Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


