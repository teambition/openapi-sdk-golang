/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateSfcV3Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateSfcV3Request{}

// CreateSfcV3Request struct for CreateSfcV3Request
type CreateSfcV3Request struct {
	// 名称
	Name *string `json:"name,omitempty"`
	// 图标，可选值：   - `task`   - `hr`   - `resource`   - `order`   - `salesLead`   - `subtask`   - `call`   - `visit`   - `forum`   - `milestone` 
	Icon *string `json:"icon,omitempty"`
	// 任务类型绑定的工作流ID
	TaskflowId *string `json:"taskflowId,omitempty"`
	// 基础字段列表
	Basicfields []CreateSfcV3RequestBasicfieldsInner `json:"basicfields,omitempty"`
	// 字段列表
	Scenariofields []CreateSfcV3RequestScenariofieldsInner `json:"scenariofields,omitempty"`
	// 内容载荷
	Payload map[string]interface{} `json:"payload,omitempty"`
}

// NewCreateSfcV3Request instantiates a new CreateSfcV3Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSfcV3Request() *CreateSfcV3Request {
	this := CreateSfcV3Request{}
	return &this
}

// NewCreateSfcV3RequestWithDefaults instantiates a new CreateSfcV3Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSfcV3RequestWithDefaults() *CreateSfcV3Request {
	this := CreateSfcV3Request{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateSfcV3Request) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSfcV3Request) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateSfcV3Request) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateSfcV3Request) SetName(v string) {
	o.Name = &v
}

// GetIcon returns the Icon field value if set, zero value otherwise.
func (o *CreateSfcV3Request) GetIcon() string {
	if o == nil || IsNil(o.Icon) {
		var ret string
		return ret
	}
	return *o.Icon
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSfcV3Request) GetIconOk() (*string, bool) {
	if o == nil || IsNil(o.Icon) {
		return nil, false
	}
	return o.Icon, true
}

// HasIcon returns a boolean if a field has been set.
func (o *CreateSfcV3Request) HasIcon() bool {
	if o != nil && !IsNil(o.Icon) {
		return true
	}

	return false
}

// SetIcon gets a reference to the given string and assigns it to the Icon field.
func (o *CreateSfcV3Request) SetIcon(v string) {
	o.Icon = &v
}

// GetTaskflowId returns the TaskflowId field value if set, zero value otherwise.
func (o *CreateSfcV3Request) GetTaskflowId() string {
	if o == nil || IsNil(o.TaskflowId) {
		var ret string
		return ret
	}
	return *o.TaskflowId
}

// GetTaskflowIdOk returns a tuple with the TaskflowId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSfcV3Request) GetTaskflowIdOk() (*string, bool) {
	if o == nil || IsNil(o.TaskflowId) {
		return nil, false
	}
	return o.TaskflowId, true
}

// HasTaskflowId returns a boolean if a field has been set.
func (o *CreateSfcV3Request) HasTaskflowId() bool {
	if o != nil && !IsNil(o.TaskflowId) {
		return true
	}

	return false
}

// SetTaskflowId gets a reference to the given string and assigns it to the TaskflowId field.
func (o *CreateSfcV3Request) SetTaskflowId(v string) {
	o.TaskflowId = &v
}

// GetBasicfields returns the Basicfields field value if set, zero value otherwise.
func (o *CreateSfcV3Request) GetBasicfields() []CreateSfcV3RequestBasicfieldsInner {
	if o == nil || IsNil(o.Basicfields) {
		var ret []CreateSfcV3RequestBasicfieldsInner
		return ret
	}
	return o.Basicfields
}

// GetBasicfieldsOk returns a tuple with the Basicfields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSfcV3Request) GetBasicfieldsOk() ([]CreateSfcV3RequestBasicfieldsInner, bool) {
	if o == nil || IsNil(o.Basicfields) {
		return nil, false
	}
	return o.Basicfields, true
}

// HasBasicfields returns a boolean if a field has been set.
func (o *CreateSfcV3Request) HasBasicfields() bool {
	if o != nil && !IsNil(o.Basicfields) {
		return true
	}

	return false
}

// SetBasicfields gets a reference to the given []CreateSfcV3RequestBasicfieldsInner and assigns it to the Basicfields field.
func (o *CreateSfcV3Request) SetBasicfields(v []CreateSfcV3RequestBasicfieldsInner) {
	o.Basicfields = v
}

// GetScenariofields returns the Scenariofields field value if set, zero value otherwise.
func (o *CreateSfcV3Request) GetScenariofields() []CreateSfcV3RequestScenariofieldsInner {
	if o == nil || IsNil(o.Scenariofields) {
		var ret []CreateSfcV3RequestScenariofieldsInner
		return ret
	}
	return o.Scenariofields
}

// GetScenariofieldsOk returns a tuple with the Scenariofields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSfcV3Request) GetScenariofieldsOk() ([]CreateSfcV3RequestScenariofieldsInner, bool) {
	if o == nil || IsNil(o.Scenariofields) {
		return nil, false
	}
	return o.Scenariofields, true
}

// HasScenariofields returns a boolean if a field has been set.
func (o *CreateSfcV3Request) HasScenariofields() bool {
	if o != nil && !IsNil(o.Scenariofields) {
		return true
	}

	return false
}

// SetScenariofields gets a reference to the given []CreateSfcV3RequestScenariofieldsInner and assigns it to the Scenariofields field.
func (o *CreateSfcV3Request) SetScenariofields(v []CreateSfcV3RequestScenariofieldsInner) {
	o.Scenariofields = v
}

// GetPayload returns the Payload field value if set, zero value otherwise.
func (o *CreateSfcV3Request) GetPayload() map[string]interface{} {
	if o == nil || IsNil(o.Payload) {
		var ret map[string]interface{}
		return ret
	}
	return o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSfcV3Request) GetPayloadOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Payload) {
		return map[string]interface{}{}, false
	}
	return o.Payload, true
}

// HasPayload returns a boolean if a field has been set.
func (o *CreateSfcV3Request) HasPayload() bool {
	if o != nil && !IsNil(o.Payload) {
		return true
	}

	return false
}

// SetPayload gets a reference to the given map[string]interface{} and assigns it to the Payload field.
func (o *CreateSfcV3Request) SetPayload(v map[string]interface{}) {
	o.Payload = v
}

func (o CreateSfcV3Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateSfcV3Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Icon) {
		toSerialize["icon"] = o.Icon
	}
	if !IsNil(o.TaskflowId) {
		toSerialize["taskflowId"] = o.TaskflowId
	}
	if !IsNil(o.Basicfields) {
		toSerialize["basicfields"] = o.Basicfields
	}
	if !IsNil(o.Scenariofields) {
		toSerialize["scenariofields"] = o.Scenariofields
	}
	if !IsNil(o.Payload) {
		toSerialize["payload"] = o.Payload
	}
	return toSerialize, nil
}

type NullableCreateSfcV3Request struct {
	value *CreateSfcV3Request
	isSet bool
}

func (v NullableCreateSfcV3Request) Get() *CreateSfcV3Request {
	return v.value
}

func (v *NullableCreateSfcV3Request) Set(val *CreateSfcV3Request) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSfcV3Request) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSfcV3Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSfcV3Request(val *CreateSfcV3Request) *NullableCreateSfcV3Request {
	return &NullableCreateSfcV3Request{value: val, isSet: true}
}

func (v NullableCreateSfcV3Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSfcV3Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


