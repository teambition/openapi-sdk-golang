/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateSfcV3RequestBasicfieldsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateSfcV3RequestBasicfieldsInner{}

// CreateSfcV3RequestBasicfieldsInner struct for CreateSfcV3RequestBasicfieldsInner
type CreateSfcV3RequestBasicfieldsInner struct {
	// 可选值：executor，startDate， dueDate
	FieldType string `json:"fieldType"`
	Required *bool `json:"required,omitempty"`
}

// NewCreateSfcV3RequestBasicfieldsInner instantiates a new CreateSfcV3RequestBasicfieldsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSfcV3RequestBasicfieldsInner(fieldType string) *CreateSfcV3RequestBasicfieldsInner {
	this := CreateSfcV3RequestBasicfieldsInner{}
	this.FieldType = fieldType
	return &this
}

// NewCreateSfcV3RequestBasicfieldsInnerWithDefaults instantiates a new CreateSfcV3RequestBasicfieldsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSfcV3RequestBasicfieldsInnerWithDefaults() *CreateSfcV3RequestBasicfieldsInner {
	this := CreateSfcV3RequestBasicfieldsInner{}
	return &this
}

// GetFieldType returns the FieldType field value
func (o *CreateSfcV3RequestBasicfieldsInner) GetFieldType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FieldType
}

// GetFieldTypeOk returns a tuple with the FieldType field value
// and a boolean to check if the value has been set.
func (o *CreateSfcV3RequestBasicfieldsInner) GetFieldTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FieldType, true
}

// SetFieldType sets field value
func (o *CreateSfcV3RequestBasicfieldsInner) SetFieldType(v string) {
	o.FieldType = v
}

// GetRequired returns the Required field value if set, zero value otherwise.
func (o *CreateSfcV3RequestBasicfieldsInner) GetRequired() bool {
	if o == nil || IsNil(o.Required) {
		var ret bool
		return ret
	}
	return *o.Required
}

// GetRequiredOk returns a tuple with the Required field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSfcV3RequestBasicfieldsInner) GetRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.Required) {
		return nil, false
	}
	return o.Required, true
}

// HasRequired returns a boolean if a field has been set.
func (o *CreateSfcV3RequestBasicfieldsInner) HasRequired() bool {
	if o != nil && !IsNil(o.Required) {
		return true
	}

	return false
}

// SetRequired gets a reference to the given bool and assigns it to the Required field.
func (o *CreateSfcV3RequestBasicfieldsInner) SetRequired(v bool) {
	o.Required = &v
}

func (o CreateSfcV3RequestBasicfieldsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateSfcV3RequestBasicfieldsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["fieldType"] = o.FieldType
	if !IsNil(o.Required) {
		toSerialize["required"] = o.Required
	}
	return toSerialize, nil
}

type NullableCreateSfcV3RequestBasicfieldsInner struct {
	value *CreateSfcV3RequestBasicfieldsInner
	isSet bool
}

func (v NullableCreateSfcV3RequestBasicfieldsInner) Get() *CreateSfcV3RequestBasicfieldsInner {
	return v.value
}

func (v *NullableCreateSfcV3RequestBasicfieldsInner) Set(val *CreateSfcV3RequestBasicfieldsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSfcV3RequestBasicfieldsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSfcV3RequestBasicfieldsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSfcV3RequestBasicfieldsInner(val *CreateSfcV3RequestBasicfieldsInner) *NullableCreateSfcV3RequestBasicfieldsInner {
	return &NullableCreateSfcV3RequestBasicfieldsInner{value: val, isSet: true}
}

func (v NullableCreateSfcV3RequestBasicfieldsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSfcV3RequestBasicfieldsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


