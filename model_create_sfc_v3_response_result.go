/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the CreateSfcV3ResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateSfcV3ResponseResult{}

// CreateSfcV3ResponseResult 任务类型
type CreateSfcV3ResponseResult struct {
	// 任务类型ID
	Id *string `json:"id,omitempty"`
	// 名称
	Name *string `json:"name,omitempty"`
	// 类型
	Type *string `json:"type,omitempty"`
	Scenariofields []CreateSfcV3ResponseResultScenariofieldsInner `json:"scenariofields,omitempty"`
	// 创建人ID
	CreatorId *string `json:"creatorId,omitempty"`
	// 是否来自安装应用,可能有 application.risk | application.story | application.bug
	Source *string `json:"source,omitempty"`
	// 创建时间
	Created *time.Time `json:"created,omitempty"`
	// 所属对象ID
	BoundToObjectId *string `json:"boundToObjectId,omitempty"`
	// 所属对象类型
	BoundToObjectType *string `json:"boundToObjectType,omitempty"`
	// 工作流ID
	TaskflowId *string `json:"taskflowId,omitempty"`
}

// NewCreateSfcV3ResponseResult instantiates a new CreateSfcV3ResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSfcV3ResponseResult() *CreateSfcV3ResponseResult {
	this := CreateSfcV3ResponseResult{}
	return &this
}

// NewCreateSfcV3ResponseResultWithDefaults instantiates a new CreateSfcV3ResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSfcV3ResponseResultWithDefaults() *CreateSfcV3ResponseResult {
	this := CreateSfcV3ResponseResult{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CreateSfcV3ResponseResult) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSfcV3ResponseResult) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CreateSfcV3ResponseResult) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CreateSfcV3ResponseResult) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateSfcV3ResponseResult) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSfcV3ResponseResult) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateSfcV3ResponseResult) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateSfcV3ResponseResult) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CreateSfcV3ResponseResult) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSfcV3ResponseResult) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CreateSfcV3ResponseResult) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *CreateSfcV3ResponseResult) SetType(v string) {
	o.Type = &v
}

// GetScenariofields returns the Scenariofields field value if set, zero value otherwise.
func (o *CreateSfcV3ResponseResult) GetScenariofields() []CreateSfcV3ResponseResultScenariofieldsInner {
	if o == nil || IsNil(o.Scenariofields) {
		var ret []CreateSfcV3ResponseResultScenariofieldsInner
		return ret
	}
	return o.Scenariofields
}

// GetScenariofieldsOk returns a tuple with the Scenariofields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSfcV3ResponseResult) GetScenariofieldsOk() ([]CreateSfcV3ResponseResultScenariofieldsInner, bool) {
	if o == nil || IsNil(o.Scenariofields) {
		return nil, false
	}
	return o.Scenariofields, true
}

// HasScenariofields returns a boolean if a field has been set.
func (o *CreateSfcV3ResponseResult) HasScenariofields() bool {
	if o != nil && !IsNil(o.Scenariofields) {
		return true
	}

	return false
}

// SetScenariofields gets a reference to the given []CreateSfcV3ResponseResultScenariofieldsInner and assigns it to the Scenariofields field.
func (o *CreateSfcV3ResponseResult) SetScenariofields(v []CreateSfcV3ResponseResultScenariofieldsInner) {
	o.Scenariofields = v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise.
func (o *CreateSfcV3ResponseResult) GetCreatorId() string {
	if o == nil || IsNil(o.CreatorId) {
		var ret string
		return ret
	}
	return *o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSfcV3ResponseResult) GetCreatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorId) {
		return nil, false
	}
	return o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *CreateSfcV3ResponseResult) HasCreatorId() bool {
	if o != nil && !IsNil(o.CreatorId) {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given string and assigns it to the CreatorId field.
func (o *CreateSfcV3ResponseResult) SetCreatorId(v string) {
	o.CreatorId = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *CreateSfcV3ResponseResult) GetSource() string {
	if o == nil || IsNil(o.Source) {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSfcV3ResponseResult) GetSourceOk() (*string, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *CreateSfcV3ResponseResult) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *CreateSfcV3ResponseResult) SetSource(v string) {
	o.Source = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *CreateSfcV3ResponseResult) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSfcV3ResponseResult) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *CreateSfcV3ResponseResult) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *CreateSfcV3ResponseResult) SetCreated(v time.Time) {
	o.Created = &v
}

// GetBoundToObjectId returns the BoundToObjectId field value if set, zero value otherwise.
func (o *CreateSfcV3ResponseResult) GetBoundToObjectId() string {
	if o == nil || IsNil(o.BoundToObjectId) {
		var ret string
		return ret
	}
	return *o.BoundToObjectId
}

// GetBoundToObjectIdOk returns a tuple with the BoundToObjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSfcV3ResponseResult) GetBoundToObjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.BoundToObjectId) {
		return nil, false
	}
	return o.BoundToObjectId, true
}

// HasBoundToObjectId returns a boolean if a field has been set.
func (o *CreateSfcV3ResponseResult) HasBoundToObjectId() bool {
	if o != nil && !IsNil(o.BoundToObjectId) {
		return true
	}

	return false
}

// SetBoundToObjectId gets a reference to the given string and assigns it to the BoundToObjectId field.
func (o *CreateSfcV3ResponseResult) SetBoundToObjectId(v string) {
	o.BoundToObjectId = &v
}

// GetBoundToObjectType returns the BoundToObjectType field value if set, zero value otherwise.
func (o *CreateSfcV3ResponseResult) GetBoundToObjectType() string {
	if o == nil || IsNil(o.BoundToObjectType) {
		var ret string
		return ret
	}
	return *o.BoundToObjectType
}

// GetBoundToObjectTypeOk returns a tuple with the BoundToObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSfcV3ResponseResult) GetBoundToObjectTypeOk() (*string, bool) {
	if o == nil || IsNil(o.BoundToObjectType) {
		return nil, false
	}
	return o.BoundToObjectType, true
}

// HasBoundToObjectType returns a boolean if a field has been set.
func (o *CreateSfcV3ResponseResult) HasBoundToObjectType() bool {
	if o != nil && !IsNil(o.BoundToObjectType) {
		return true
	}

	return false
}

// SetBoundToObjectType gets a reference to the given string and assigns it to the BoundToObjectType field.
func (o *CreateSfcV3ResponseResult) SetBoundToObjectType(v string) {
	o.BoundToObjectType = &v
}

// GetTaskflowId returns the TaskflowId field value if set, zero value otherwise.
func (o *CreateSfcV3ResponseResult) GetTaskflowId() string {
	if o == nil || IsNil(o.TaskflowId) {
		var ret string
		return ret
	}
	return *o.TaskflowId
}

// GetTaskflowIdOk returns a tuple with the TaskflowId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSfcV3ResponseResult) GetTaskflowIdOk() (*string, bool) {
	if o == nil || IsNil(o.TaskflowId) {
		return nil, false
	}
	return o.TaskflowId, true
}

// HasTaskflowId returns a boolean if a field has been set.
func (o *CreateSfcV3ResponseResult) HasTaskflowId() bool {
	if o != nil && !IsNil(o.TaskflowId) {
		return true
	}

	return false
}

// SetTaskflowId gets a reference to the given string and assigns it to the TaskflowId field.
func (o *CreateSfcV3ResponseResult) SetTaskflowId(v string) {
	o.TaskflowId = &v
}

func (o CreateSfcV3ResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateSfcV3ResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Scenariofields) {
		toSerialize["scenariofields"] = o.Scenariofields
	}
	if !IsNil(o.CreatorId) {
		toSerialize["creatorId"] = o.CreatorId
	}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.BoundToObjectId) {
		toSerialize["boundToObjectId"] = o.BoundToObjectId
	}
	if !IsNil(o.BoundToObjectType) {
		toSerialize["boundToObjectType"] = o.BoundToObjectType
	}
	if !IsNil(o.TaskflowId) {
		toSerialize["taskflowId"] = o.TaskflowId
	}
	return toSerialize, nil
}

type NullableCreateSfcV3ResponseResult struct {
	value *CreateSfcV3ResponseResult
	isSet bool
}

func (v NullableCreateSfcV3ResponseResult) Get() *CreateSfcV3ResponseResult {
	return v.value
}

func (v *NullableCreateSfcV3ResponseResult) Set(val *CreateSfcV3ResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSfcV3ResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSfcV3ResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSfcV3ResponseResult(val *CreateSfcV3ResponseResult) *NullableCreateSfcV3ResponseResult {
	return &NullableCreateSfcV3ResponseResult{value: val, isSet: true}
}

func (v NullableCreateSfcV3ResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSfcV3ResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


