/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the CreateSprintV3Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateSprintV3Request{}

// CreateSprintV3Request struct for CreateSprintV3Request
type CreateSprintV3Request struct {
	Name *string `json:"name,omitempty"`
	StartDate *time.Time `json:"startDate,omitempty"`
	DueDate *time.Time `json:"dueDate,omitempty"`
	ExecutorId *string `json:"executorId,omitempty"`
	Description *string `json:"description,omitempty"`
}

// NewCreateSprintV3Request instantiates a new CreateSprintV3Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSprintV3Request() *CreateSprintV3Request {
	this := CreateSprintV3Request{}
	return &this
}

// NewCreateSprintV3RequestWithDefaults instantiates a new CreateSprintV3Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSprintV3RequestWithDefaults() *CreateSprintV3Request {
	this := CreateSprintV3Request{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateSprintV3Request) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSprintV3Request) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateSprintV3Request) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateSprintV3Request) SetName(v string) {
	o.Name = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *CreateSprintV3Request) GetStartDate() time.Time {
	if o == nil || IsNil(o.StartDate) {
		var ret time.Time
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSprintV3Request) GetStartDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *CreateSprintV3Request) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given time.Time and assigns it to the StartDate field.
func (o *CreateSprintV3Request) SetStartDate(v time.Time) {
	o.StartDate = &v
}

// GetDueDate returns the DueDate field value if set, zero value otherwise.
func (o *CreateSprintV3Request) GetDueDate() time.Time {
	if o == nil || IsNil(o.DueDate) {
		var ret time.Time
		return ret
	}
	return *o.DueDate
}

// GetDueDateOk returns a tuple with the DueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSprintV3Request) GetDueDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DueDate) {
		return nil, false
	}
	return o.DueDate, true
}

// HasDueDate returns a boolean if a field has been set.
func (o *CreateSprintV3Request) HasDueDate() bool {
	if o != nil && !IsNil(o.DueDate) {
		return true
	}

	return false
}

// SetDueDate gets a reference to the given time.Time and assigns it to the DueDate field.
func (o *CreateSprintV3Request) SetDueDate(v time.Time) {
	o.DueDate = &v
}

// GetExecutorId returns the ExecutorId field value if set, zero value otherwise.
func (o *CreateSprintV3Request) GetExecutorId() string {
	if o == nil || IsNil(o.ExecutorId) {
		var ret string
		return ret
	}
	return *o.ExecutorId
}

// GetExecutorIdOk returns a tuple with the ExecutorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSprintV3Request) GetExecutorIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExecutorId) {
		return nil, false
	}
	return o.ExecutorId, true
}

// HasExecutorId returns a boolean if a field has been set.
func (o *CreateSprintV3Request) HasExecutorId() bool {
	if o != nil && !IsNil(o.ExecutorId) {
		return true
	}

	return false
}

// SetExecutorId gets a reference to the given string and assigns it to the ExecutorId field.
func (o *CreateSprintV3Request) SetExecutorId(v string) {
	o.ExecutorId = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateSprintV3Request) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSprintV3Request) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateSprintV3Request) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateSprintV3Request) SetDescription(v string) {
	o.Description = &v
}

func (o CreateSprintV3Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateSprintV3Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.DueDate) {
		toSerialize["dueDate"] = o.DueDate
	}
	if !IsNil(o.ExecutorId) {
		toSerialize["executorId"] = o.ExecutorId
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return toSerialize, nil
}

type NullableCreateSprintV3Request struct {
	value *CreateSprintV3Request
	isSet bool
}

func (v NullableCreateSprintV3Request) Get() *CreateSprintV3Request {
	return v.value
}

func (v *NullableCreateSprintV3Request) Set(val *CreateSprintV3Request) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSprintV3Request) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSprintV3Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSprintV3Request(val *CreateSprintV3Request) *NullableCreateSprintV3Request {
	return &NullableCreateSprintV3Request{value: val, isSet: true}
}

func (v NullableCreateSprintV3Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSprintV3Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


