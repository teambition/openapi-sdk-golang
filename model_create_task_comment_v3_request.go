/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateTaskCommentV3Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTaskCommentV3Request{}

// CreateTaskCommentV3Request 
type CreateTaskCommentV3Request struct {
	// 评论内容
	Content *string `json:"content,omitempty"`
	// 评论内容 原文 还是以 `markdown` 等格式. 默认是原文输出
	RenderMode *string `json:"renderMode,omitempty"`
	// 评论 at 成员列表, 单次 at 上限30
	MentionUserIds []string `json:"mentionUserIds,omitempty"`
}

// NewCreateTaskCommentV3Request instantiates a new CreateTaskCommentV3Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTaskCommentV3Request() *CreateTaskCommentV3Request {
	this := CreateTaskCommentV3Request{}
	return &this
}

// NewCreateTaskCommentV3RequestWithDefaults instantiates a new CreateTaskCommentV3Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTaskCommentV3RequestWithDefaults() *CreateTaskCommentV3Request {
	this := CreateTaskCommentV3Request{}
	return &this
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *CreateTaskCommentV3Request) GetContent() string {
	if o == nil || IsNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskCommentV3Request) GetContentOk() (*string, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *CreateTaskCommentV3Request) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *CreateTaskCommentV3Request) SetContent(v string) {
	o.Content = &v
}

// GetRenderMode returns the RenderMode field value if set, zero value otherwise.
func (o *CreateTaskCommentV3Request) GetRenderMode() string {
	if o == nil || IsNil(o.RenderMode) {
		var ret string
		return ret
	}
	return *o.RenderMode
}

// GetRenderModeOk returns a tuple with the RenderMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskCommentV3Request) GetRenderModeOk() (*string, bool) {
	if o == nil || IsNil(o.RenderMode) {
		return nil, false
	}
	return o.RenderMode, true
}

// HasRenderMode returns a boolean if a field has been set.
func (o *CreateTaskCommentV3Request) HasRenderMode() bool {
	if o != nil && !IsNil(o.RenderMode) {
		return true
	}

	return false
}

// SetRenderMode gets a reference to the given string and assigns it to the RenderMode field.
func (o *CreateTaskCommentV3Request) SetRenderMode(v string) {
	o.RenderMode = &v
}

// GetMentionUserIds returns the MentionUserIds field value if set, zero value otherwise.
func (o *CreateTaskCommentV3Request) GetMentionUserIds() []string {
	if o == nil || IsNil(o.MentionUserIds) {
		var ret []string
		return ret
	}
	return o.MentionUserIds
}

// GetMentionUserIdsOk returns a tuple with the MentionUserIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskCommentV3Request) GetMentionUserIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.MentionUserIds) {
		return nil, false
	}
	return o.MentionUserIds, true
}

// HasMentionUserIds returns a boolean if a field has been set.
func (o *CreateTaskCommentV3Request) HasMentionUserIds() bool {
	if o != nil && !IsNil(o.MentionUserIds) {
		return true
	}

	return false
}

// SetMentionUserIds gets a reference to the given []string and assigns it to the MentionUserIds field.
func (o *CreateTaskCommentV3Request) SetMentionUserIds(v []string) {
	o.MentionUserIds = v
}

func (o CreateTaskCommentV3Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTaskCommentV3Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !IsNil(o.RenderMode) {
		toSerialize["renderMode"] = o.RenderMode
	}
	if !IsNil(o.MentionUserIds) {
		toSerialize["mentionUserIds"] = o.MentionUserIds
	}
	return toSerialize, nil
}

type NullableCreateTaskCommentV3Request struct {
	value *CreateTaskCommentV3Request
	isSet bool
}

func (v NullableCreateTaskCommentV3Request) Get() *CreateTaskCommentV3Request {
	return v.value
}

func (v *NullableCreateTaskCommentV3Request) Set(val *CreateTaskCommentV3Request) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTaskCommentV3Request) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTaskCommentV3Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTaskCommentV3Request(val *CreateTaskCommentV3Request) *NullableCreateTaskCommentV3Request {
	return &NullableCreateTaskCommentV3Request{value: val, isSet: true}
}

func (v NullableCreateTaskCommentV3Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTaskCommentV3Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


