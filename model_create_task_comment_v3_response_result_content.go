/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateTaskCommentV3ResponseResultContent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTaskCommentV3ResponseResultContent{}

// CreateTaskCommentV3ResponseResultContent 动态内容
type CreateTaskCommentV3ResponseResultContent struct {
	// 标题
	Title *string `json:"title,omitempty"`
	// 评论内容
	Comment *string `json:"comment,omitempty"`
}

// NewCreateTaskCommentV3ResponseResultContent instantiates a new CreateTaskCommentV3ResponseResultContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTaskCommentV3ResponseResultContent() *CreateTaskCommentV3ResponseResultContent {
	this := CreateTaskCommentV3ResponseResultContent{}
	return &this
}

// NewCreateTaskCommentV3ResponseResultContentWithDefaults instantiates a new CreateTaskCommentV3ResponseResultContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTaskCommentV3ResponseResultContentWithDefaults() *CreateTaskCommentV3ResponseResultContent {
	this := CreateTaskCommentV3ResponseResultContent{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *CreateTaskCommentV3ResponseResultContent) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskCommentV3ResponseResultContent) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *CreateTaskCommentV3ResponseResultContent) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *CreateTaskCommentV3ResponseResultContent) SetTitle(v string) {
	o.Title = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *CreateTaskCommentV3ResponseResultContent) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskCommentV3ResponseResultContent) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *CreateTaskCommentV3ResponseResultContent) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *CreateTaskCommentV3ResponseResultContent) SetComment(v string) {
	o.Comment = &v
}

func (o CreateTaskCommentV3ResponseResultContent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTaskCommentV3ResponseResultContent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	return toSerialize, nil
}

type NullableCreateTaskCommentV3ResponseResultContent struct {
	value *CreateTaskCommentV3ResponseResultContent
	isSet bool
}

func (v NullableCreateTaskCommentV3ResponseResultContent) Get() *CreateTaskCommentV3ResponseResultContent {
	return v.value
}

func (v *NullableCreateTaskCommentV3ResponseResultContent) Set(val *CreateTaskCommentV3ResponseResultContent) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTaskCommentV3ResponseResultContent) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTaskCommentV3ResponseResultContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTaskCommentV3ResponseResultContent(val *CreateTaskCommentV3ResponseResultContent) *NullableCreateTaskCommentV3ResponseResultContent {
	return &NullableCreateTaskCommentV3ResponseResultContent{value: val, isSet: true}
}

func (v NullableCreateTaskCommentV3ResponseResultContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTaskCommentV3ResponseResultContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


