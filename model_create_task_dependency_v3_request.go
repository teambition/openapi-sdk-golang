/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateTaskDependencyV3Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTaskDependencyV3Request{}

// CreateTaskDependencyV3Request struct for CreateTaskDependencyV3Request
type CreateTaskDependencyV3Request struct {
	// 前置任务ID
	FromId *string `json:"fromId,omitempty"`
	// 后置任务ID
	ToId *string `json:"toId,omitempty"`
	// 提前滞后时间（毫秒）
	LagTime *int32 `json:"lagTime,omitempty"`
	// 依赖关系 F->S = 结束时开始 F->F 结束时结束 S->F 开始时结束 S->S 开始时开始
	Kind *string `json:"kind,omitempty"`
}

// NewCreateTaskDependencyV3Request instantiates a new CreateTaskDependencyV3Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTaskDependencyV3Request() *CreateTaskDependencyV3Request {
	this := CreateTaskDependencyV3Request{}
	return &this
}

// NewCreateTaskDependencyV3RequestWithDefaults instantiates a new CreateTaskDependencyV3Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTaskDependencyV3RequestWithDefaults() *CreateTaskDependencyV3Request {
	this := CreateTaskDependencyV3Request{}
	return &this
}

// GetFromId returns the FromId field value if set, zero value otherwise.
func (o *CreateTaskDependencyV3Request) GetFromId() string {
	if o == nil || IsNil(o.FromId) {
		var ret string
		return ret
	}
	return *o.FromId
}

// GetFromIdOk returns a tuple with the FromId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskDependencyV3Request) GetFromIdOk() (*string, bool) {
	if o == nil || IsNil(o.FromId) {
		return nil, false
	}
	return o.FromId, true
}

// HasFromId returns a boolean if a field has been set.
func (o *CreateTaskDependencyV3Request) HasFromId() bool {
	if o != nil && !IsNil(o.FromId) {
		return true
	}

	return false
}

// SetFromId gets a reference to the given string and assigns it to the FromId field.
func (o *CreateTaskDependencyV3Request) SetFromId(v string) {
	o.FromId = &v
}

// GetToId returns the ToId field value if set, zero value otherwise.
func (o *CreateTaskDependencyV3Request) GetToId() string {
	if o == nil || IsNil(o.ToId) {
		var ret string
		return ret
	}
	return *o.ToId
}

// GetToIdOk returns a tuple with the ToId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskDependencyV3Request) GetToIdOk() (*string, bool) {
	if o == nil || IsNil(o.ToId) {
		return nil, false
	}
	return o.ToId, true
}

// HasToId returns a boolean if a field has been set.
func (o *CreateTaskDependencyV3Request) HasToId() bool {
	if o != nil && !IsNil(o.ToId) {
		return true
	}

	return false
}

// SetToId gets a reference to the given string and assigns it to the ToId field.
func (o *CreateTaskDependencyV3Request) SetToId(v string) {
	o.ToId = &v
}

// GetLagTime returns the LagTime field value if set, zero value otherwise.
func (o *CreateTaskDependencyV3Request) GetLagTime() int32 {
	if o == nil || IsNil(o.LagTime) {
		var ret int32
		return ret
	}
	return *o.LagTime
}

// GetLagTimeOk returns a tuple with the LagTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskDependencyV3Request) GetLagTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.LagTime) {
		return nil, false
	}
	return o.LagTime, true
}

// HasLagTime returns a boolean if a field has been set.
func (o *CreateTaskDependencyV3Request) HasLagTime() bool {
	if o != nil && !IsNil(o.LagTime) {
		return true
	}

	return false
}

// SetLagTime gets a reference to the given int32 and assigns it to the LagTime field.
func (o *CreateTaskDependencyV3Request) SetLagTime(v int32) {
	o.LagTime = &v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *CreateTaskDependencyV3Request) GetKind() string {
	if o == nil || IsNil(o.Kind) {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskDependencyV3Request) GetKindOk() (*string, bool) {
	if o == nil || IsNil(o.Kind) {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *CreateTaskDependencyV3Request) HasKind() bool {
	if o != nil && !IsNil(o.Kind) {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *CreateTaskDependencyV3Request) SetKind(v string) {
	o.Kind = &v
}

func (o CreateTaskDependencyV3Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTaskDependencyV3Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FromId) {
		toSerialize["fromId"] = o.FromId
	}
	if !IsNil(o.ToId) {
		toSerialize["toId"] = o.ToId
	}
	if !IsNil(o.LagTime) {
		toSerialize["lagTime"] = o.LagTime
	}
	if !IsNil(o.Kind) {
		toSerialize["kind"] = o.Kind
	}
	return toSerialize, nil
}

type NullableCreateTaskDependencyV3Request struct {
	value *CreateTaskDependencyV3Request
	isSet bool
}

func (v NullableCreateTaskDependencyV3Request) Get() *CreateTaskDependencyV3Request {
	return v.value
}

func (v *NullableCreateTaskDependencyV3Request) Set(val *CreateTaskDependencyV3Request) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTaskDependencyV3Request) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTaskDependencyV3Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTaskDependencyV3Request(val *CreateTaskDependencyV3Request) *NullableCreateTaskDependencyV3Request {
	return &NullableCreateTaskDependencyV3Request{value: val, isSet: true}
}

func (v NullableCreateTaskDependencyV3Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTaskDependencyV3Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


