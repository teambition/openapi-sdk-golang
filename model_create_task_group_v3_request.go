/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateTaskGroupV3Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTaskGroupV3Request{}

// CreateTaskGroupV3Request struct for CreateTaskGroupV3Request
type CreateTaskGroupV3Request struct {
	// 任务分组名称
	Title *string `json:"title,omitempty"`
	// 任务分组 icon
	Icon *string `json:"icon,omitempty"`
	// 任务分组描述信息
	Description *string `json:"description,omitempty"`
}

// NewCreateTaskGroupV3Request instantiates a new CreateTaskGroupV3Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTaskGroupV3Request() *CreateTaskGroupV3Request {
	this := CreateTaskGroupV3Request{}
	return &this
}

// NewCreateTaskGroupV3RequestWithDefaults instantiates a new CreateTaskGroupV3Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTaskGroupV3RequestWithDefaults() *CreateTaskGroupV3Request {
	this := CreateTaskGroupV3Request{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *CreateTaskGroupV3Request) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskGroupV3Request) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *CreateTaskGroupV3Request) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *CreateTaskGroupV3Request) SetTitle(v string) {
	o.Title = &v
}

// GetIcon returns the Icon field value if set, zero value otherwise.
func (o *CreateTaskGroupV3Request) GetIcon() string {
	if o == nil || IsNil(o.Icon) {
		var ret string
		return ret
	}
	return *o.Icon
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskGroupV3Request) GetIconOk() (*string, bool) {
	if o == nil || IsNil(o.Icon) {
		return nil, false
	}
	return o.Icon, true
}

// HasIcon returns a boolean if a field has been set.
func (o *CreateTaskGroupV3Request) HasIcon() bool {
	if o != nil && !IsNil(o.Icon) {
		return true
	}

	return false
}

// SetIcon gets a reference to the given string and assigns it to the Icon field.
func (o *CreateTaskGroupV3Request) SetIcon(v string) {
	o.Icon = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateTaskGroupV3Request) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskGroupV3Request) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateTaskGroupV3Request) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateTaskGroupV3Request) SetDescription(v string) {
	o.Description = &v
}

func (o CreateTaskGroupV3Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTaskGroupV3Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Icon) {
		toSerialize["icon"] = o.Icon
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return toSerialize, nil
}

type NullableCreateTaskGroupV3Request struct {
	value *CreateTaskGroupV3Request
	isSet bool
}

func (v NullableCreateTaskGroupV3Request) Get() *CreateTaskGroupV3Request {
	return v.value
}

func (v *NullableCreateTaskGroupV3Request) Set(val *CreateTaskGroupV3Request) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTaskGroupV3Request) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTaskGroupV3Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTaskGroupV3Request(val *CreateTaskGroupV3Request) *NullableCreateTaskGroupV3Request {
	return &NullableCreateTaskGroupV3Request{value: val, isSet: true}
}

func (v NullableCreateTaskGroupV3Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTaskGroupV3Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


