/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the CreateTaskGroupV3ResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTaskGroupV3ResponseResult{}

// CreateTaskGroupV3ResponseResult 任务分组
type CreateTaskGroupV3ResponseResult struct {
	// 任务分组ID
	Id *string `json:"id,omitempty"`
	// 任务分组名称
	Title *string `json:"title,omitempty"`
	// 任务分组图标
	Icon *string `json:"icon,omitempty"`
	// 任务分组描述
	Description *string `json:"description,omitempty"`
	// 项目ID
	ProjectId *string `json:"projectId,omitempty"`
	// 创建者用户ID
	CreatorId *string `json:"creatorId,omitempty"`
	// 创建时间
	Created *time.Time `json:"created,omitempty"`
	// 更新时间
	Updated *time.Time `json:"updated,omitempty"`
}

// NewCreateTaskGroupV3ResponseResult instantiates a new CreateTaskGroupV3ResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTaskGroupV3ResponseResult() *CreateTaskGroupV3ResponseResult {
	this := CreateTaskGroupV3ResponseResult{}
	return &this
}

// NewCreateTaskGroupV3ResponseResultWithDefaults instantiates a new CreateTaskGroupV3ResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTaskGroupV3ResponseResultWithDefaults() *CreateTaskGroupV3ResponseResult {
	this := CreateTaskGroupV3ResponseResult{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CreateTaskGroupV3ResponseResult) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskGroupV3ResponseResult) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CreateTaskGroupV3ResponseResult) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CreateTaskGroupV3ResponseResult) SetId(v string) {
	o.Id = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *CreateTaskGroupV3ResponseResult) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskGroupV3ResponseResult) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *CreateTaskGroupV3ResponseResult) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *CreateTaskGroupV3ResponseResult) SetTitle(v string) {
	o.Title = &v
}

// GetIcon returns the Icon field value if set, zero value otherwise.
func (o *CreateTaskGroupV3ResponseResult) GetIcon() string {
	if o == nil || IsNil(o.Icon) {
		var ret string
		return ret
	}
	return *o.Icon
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskGroupV3ResponseResult) GetIconOk() (*string, bool) {
	if o == nil || IsNil(o.Icon) {
		return nil, false
	}
	return o.Icon, true
}

// HasIcon returns a boolean if a field has been set.
func (o *CreateTaskGroupV3ResponseResult) HasIcon() bool {
	if o != nil && !IsNil(o.Icon) {
		return true
	}

	return false
}

// SetIcon gets a reference to the given string and assigns it to the Icon field.
func (o *CreateTaskGroupV3ResponseResult) SetIcon(v string) {
	o.Icon = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateTaskGroupV3ResponseResult) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskGroupV3ResponseResult) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateTaskGroupV3ResponseResult) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateTaskGroupV3ResponseResult) SetDescription(v string) {
	o.Description = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *CreateTaskGroupV3ResponseResult) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId) {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskGroupV3ResponseResult) GetProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *CreateTaskGroupV3ResponseResult) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *CreateTaskGroupV3ResponseResult) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise.
func (o *CreateTaskGroupV3ResponseResult) GetCreatorId() string {
	if o == nil || IsNil(o.CreatorId) {
		var ret string
		return ret
	}
	return *o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskGroupV3ResponseResult) GetCreatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorId) {
		return nil, false
	}
	return o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *CreateTaskGroupV3ResponseResult) HasCreatorId() bool {
	if o != nil && !IsNil(o.CreatorId) {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given string and assigns it to the CreatorId field.
func (o *CreateTaskGroupV3ResponseResult) SetCreatorId(v string) {
	o.CreatorId = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *CreateTaskGroupV3ResponseResult) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskGroupV3ResponseResult) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *CreateTaskGroupV3ResponseResult) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *CreateTaskGroupV3ResponseResult) SetCreated(v time.Time) {
	o.Created = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *CreateTaskGroupV3ResponseResult) GetUpdated() time.Time {
	if o == nil || IsNil(o.Updated) {
		var ret time.Time
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskGroupV3ResponseResult) GetUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Updated) {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *CreateTaskGroupV3ResponseResult) HasUpdated() bool {
	if o != nil && !IsNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given time.Time and assigns it to the Updated field.
func (o *CreateTaskGroupV3ResponseResult) SetUpdated(v time.Time) {
	o.Updated = &v
}

func (o CreateTaskGroupV3ResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTaskGroupV3ResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Icon) {
		toSerialize["icon"] = o.Icon
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.ProjectId) {
		toSerialize["projectId"] = o.ProjectId
	}
	if !IsNil(o.CreatorId) {
		toSerialize["creatorId"] = o.CreatorId
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.Updated) {
		toSerialize["updated"] = o.Updated
	}
	return toSerialize, nil
}

type NullableCreateTaskGroupV3ResponseResult struct {
	value *CreateTaskGroupV3ResponseResult
	isSet bool
}

func (v NullableCreateTaskGroupV3ResponseResult) Get() *CreateTaskGroupV3ResponseResult {
	return v.value
}

func (v *NullableCreateTaskGroupV3ResponseResult) Set(val *CreateTaskGroupV3ResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTaskGroupV3ResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTaskGroupV3ResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTaskGroupV3ResponseResult(val *CreateTaskGroupV3ResponseResult) *NullableCreateTaskGroupV3ResponseResult {
	return &NullableCreateTaskGroupV3ResponseResult{value: val, isSet: true}
}

func (v NullableCreateTaskGroupV3ResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTaskGroupV3ResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


