/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateTaskStageV3Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTaskStageV3Request{}

// CreateTaskStageV3Request struct for CreateTaskStageV3Request
type CreateTaskStageV3Request struct {
	// 任务列表名称
	Name *string `json:"name,omitempty"`
	// 任务分组ID
	TasklistId *string `json:"tasklistId,omitempty"`
	// 上一个任务列表ID, 用于列表排序
	PrevId *string `json:"prevId,omitempty"`
}

// NewCreateTaskStageV3Request instantiates a new CreateTaskStageV3Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTaskStageV3Request() *CreateTaskStageV3Request {
	this := CreateTaskStageV3Request{}
	return &this
}

// NewCreateTaskStageV3RequestWithDefaults instantiates a new CreateTaskStageV3Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTaskStageV3RequestWithDefaults() *CreateTaskStageV3Request {
	this := CreateTaskStageV3Request{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateTaskStageV3Request) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskStageV3Request) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateTaskStageV3Request) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateTaskStageV3Request) SetName(v string) {
	o.Name = &v
}

// GetTasklistId returns the TasklistId field value if set, zero value otherwise.
func (o *CreateTaskStageV3Request) GetTasklistId() string {
	if o == nil || IsNil(o.TasklistId) {
		var ret string
		return ret
	}
	return *o.TasklistId
}

// GetTasklistIdOk returns a tuple with the TasklistId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskStageV3Request) GetTasklistIdOk() (*string, bool) {
	if o == nil || IsNil(o.TasklistId) {
		return nil, false
	}
	return o.TasklistId, true
}

// HasTasklistId returns a boolean if a field has been set.
func (o *CreateTaskStageV3Request) HasTasklistId() bool {
	if o != nil && !IsNil(o.TasklistId) {
		return true
	}

	return false
}

// SetTasklistId gets a reference to the given string and assigns it to the TasklistId field.
func (o *CreateTaskStageV3Request) SetTasklistId(v string) {
	o.TasklistId = &v
}

// GetPrevId returns the PrevId field value if set, zero value otherwise.
func (o *CreateTaskStageV3Request) GetPrevId() string {
	if o == nil || IsNil(o.PrevId) {
		var ret string
		return ret
	}
	return *o.PrevId
}

// GetPrevIdOk returns a tuple with the PrevId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskStageV3Request) GetPrevIdOk() (*string, bool) {
	if o == nil || IsNil(o.PrevId) {
		return nil, false
	}
	return o.PrevId, true
}

// HasPrevId returns a boolean if a field has been set.
func (o *CreateTaskStageV3Request) HasPrevId() bool {
	if o != nil && !IsNil(o.PrevId) {
		return true
	}

	return false
}

// SetPrevId gets a reference to the given string and assigns it to the PrevId field.
func (o *CreateTaskStageV3Request) SetPrevId(v string) {
	o.PrevId = &v
}

func (o CreateTaskStageV3Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTaskStageV3Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.TasklistId) {
		toSerialize["tasklistId"] = o.TasklistId
	}
	if !IsNil(o.PrevId) {
		toSerialize["prevId"] = o.PrevId
	}
	return toSerialize, nil
}

type NullableCreateTaskStageV3Request struct {
	value *CreateTaskStageV3Request
	isSet bool
}

func (v NullableCreateTaskStageV3Request) Get() *CreateTaskStageV3Request {
	return v.value
}

func (v *NullableCreateTaskStageV3Request) Set(val *CreateTaskStageV3Request) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTaskStageV3Request) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTaskStageV3Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTaskStageV3Request(val *CreateTaskStageV3Request) *NullableCreateTaskStageV3Request {
	return &NullableCreateTaskStageV3Request{value: val, isSet: true}
}

func (v NullableCreateTaskStageV3Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTaskStageV3Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


