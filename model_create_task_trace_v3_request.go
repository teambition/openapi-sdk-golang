/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateTaskTraceV3Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTaskTraceV3Request{}

// CreateTaskTraceV3Request struct for CreateTaskTraceV3Request
type CreateTaskTraceV3Request struct {
	// 任务进展标题
	Title *string `json:"title,omitempty"`
	// 任务进展内容
	Content *string `json:"content,omitempty"`
	// 任务进展状态：1 = 正常; 2 = 存在风险; 3 = 逾期
	Status *int32 `json:"status,omitempty"`
	ReminderIds []string `json:"reminderIds,omitempty"`
}

// NewCreateTaskTraceV3Request instantiates a new CreateTaskTraceV3Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTaskTraceV3Request() *CreateTaskTraceV3Request {
	this := CreateTaskTraceV3Request{}
	var status int32 = 1
	this.Status = &status
	return &this
}

// NewCreateTaskTraceV3RequestWithDefaults instantiates a new CreateTaskTraceV3Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTaskTraceV3RequestWithDefaults() *CreateTaskTraceV3Request {
	this := CreateTaskTraceV3Request{}
	var status int32 = 1
	this.Status = &status
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *CreateTaskTraceV3Request) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskTraceV3Request) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *CreateTaskTraceV3Request) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *CreateTaskTraceV3Request) SetTitle(v string) {
	o.Title = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *CreateTaskTraceV3Request) GetContent() string {
	if o == nil || IsNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskTraceV3Request) GetContentOk() (*string, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *CreateTaskTraceV3Request) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *CreateTaskTraceV3Request) SetContent(v string) {
	o.Content = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CreateTaskTraceV3Request) GetStatus() int32 {
	if o == nil || IsNil(o.Status) {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskTraceV3Request) GetStatusOk() (*int32, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CreateTaskTraceV3Request) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *CreateTaskTraceV3Request) SetStatus(v int32) {
	o.Status = &v
}

// GetReminderIds returns the ReminderIds field value if set, zero value otherwise.
func (o *CreateTaskTraceV3Request) GetReminderIds() []string {
	if o == nil || IsNil(o.ReminderIds) {
		var ret []string
		return ret
	}
	return o.ReminderIds
}

// GetReminderIdsOk returns a tuple with the ReminderIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskTraceV3Request) GetReminderIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ReminderIds) {
		return nil, false
	}
	return o.ReminderIds, true
}

// HasReminderIds returns a boolean if a field has been set.
func (o *CreateTaskTraceV3Request) HasReminderIds() bool {
	if o != nil && !IsNil(o.ReminderIds) {
		return true
	}

	return false
}

// SetReminderIds gets a reference to the given []string and assigns it to the ReminderIds field.
func (o *CreateTaskTraceV3Request) SetReminderIds(v []string) {
	o.ReminderIds = v
}

func (o CreateTaskTraceV3Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTaskTraceV3Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.ReminderIds) {
		toSerialize["reminderIds"] = o.ReminderIds
	}
	return toSerialize, nil
}

type NullableCreateTaskTraceV3Request struct {
	value *CreateTaskTraceV3Request
	isSet bool
}

func (v NullableCreateTaskTraceV3Request) Get() *CreateTaskTraceV3Request {
	return v.value
}

func (v *NullableCreateTaskTraceV3Request) Set(val *CreateTaskTraceV3Request) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTaskTraceV3Request) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTaskTraceV3Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTaskTraceV3Request(val *CreateTaskTraceV3Request) *NullableCreateTaskTraceV3Request {
	return &NullableCreateTaskTraceV3Request{value: val, isSet: true}
}

func (v NullableCreateTaskTraceV3Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTaskTraceV3Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


