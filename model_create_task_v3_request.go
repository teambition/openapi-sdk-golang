/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the CreateTaskV3Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTaskV3Request{}

// CreateTaskV3Request 
type CreateTaskV3Request struct {
	// 项目id
	ProjectId *string `json:"projectId,omitempty"`
	// 项目名称（取通过项目名匹配到的第一个项目，projectId、projectName至少传一个，与projectId同时传入时优先用projectId）
	ProjectName *string `json:"projectName,omitempty"`
	// 任务标题
	Content *string `json:"content,omitempty"`
	// 执行者id
	ExecutorId *string `json:"executorId,omitempty"`
	// 参与者用户ID列表
	InvolveMembers []string `json:"involveMembers,omitempty"`
	// 任务列id
	StageId *string `json:"stageId,omitempty"`
	// 任务组id
	TasklistId *string `json:"tasklistId,omitempty"`
	// 任务状态id
	TaskflowstatusId *string `json:"taskflowstatusId,omitempty"`
	// 任务状态名称（取通过任务状态名匹配到的第一个任务状态，与taskflowstatusId同时传入时优先用taskflowstatusId）
	TfsName *string `json:"tfsName,omitempty"`
	// 开始日期
	StartDate *time.Time `json:"startDate,omitempty"`
	// 截止日期
	DueDate *time.Time `json:"dueDate,omitempty"`
	// 任务备注
	Note *string `json:"note,omitempty"`
	// 任务备注渲染模式, markdown, rtf, rtf就是富文本，富文本需要提交 rtfValueToken
	NoteRenderMode *string `json:"noteRenderMode,omitempty"`
	// 任务备注富文本内容，格式仅限从 rtf/render 接口中获取的 rtfValue
	NoteRtfValueToken *string `json:"noteRtfValueToken,omitempty"`
	// 执行优先级
	Priority *int32 `json:"priority,omitempty"`
	// 执行优先级名称（取通过优先级名称名匹配到的第一个优先级，与priority同时传入时优先用priority）
	PriorityName *string `json:"priorityName,omitempty"`
	// 父任务id
	ParentTaskId *string `json:"parentTaskId,omitempty"`
	// 进度
	Progress *int32 `json:"progress,omitempty"`
	// 任务的可见性规则 involves | members
	Visible *string `json:"visible,omitempty"`
	// 迭代id
	SprintId *string `json:"sprintId,omitempty"`
	// 标签id列表
	TagIds []string `json:"tagIds,omitempty"`
	// 标签名称列表（列表中标签取通过标签名匹配到的第一个标签，与tagIds同时传入时优先用tagIds）
	TagNames []string `json:"tagNames,omitempty"`
	// 任务故事点
	StoryPoint *string `json:"storyPoint,omitempty"`
	// 任务类型id
	ScenariofieldconfigId *string `json:"scenariofieldconfigId,omitempty"`
	// 任务类型别名(如果提供任务类型id 则忽略)
	ScenariofieldconfigAlias *string `json:"scenariofieldconfigAlias,omitempty"`
	Reminders []CreateTaskV3RequestRemindersInner `json:"reminders,omitempty"`
	// 自定义字段值列表
	Customfields []CreateTaskV3RequestCustomfieldsInner `json:"customfields,omitempty"`
}

// NewCreateTaskV3Request instantiates a new CreateTaskV3Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTaskV3Request() *CreateTaskV3Request {
	this := CreateTaskV3Request{}
	return &this
}

// NewCreateTaskV3RequestWithDefaults instantiates a new CreateTaskV3Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTaskV3RequestWithDefaults() *CreateTaskV3Request {
	this := CreateTaskV3Request{}
	return &this
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *CreateTaskV3Request) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId) {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskV3Request) GetProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *CreateTaskV3Request) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *CreateTaskV3Request) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetProjectName returns the ProjectName field value if set, zero value otherwise.
func (o *CreateTaskV3Request) GetProjectName() string {
	if o == nil || IsNil(o.ProjectName) {
		var ret string
		return ret
	}
	return *o.ProjectName
}

// GetProjectNameOk returns a tuple with the ProjectName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskV3Request) GetProjectNameOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectName) {
		return nil, false
	}
	return o.ProjectName, true
}

// HasProjectName returns a boolean if a field has been set.
func (o *CreateTaskV3Request) HasProjectName() bool {
	if o != nil && !IsNil(o.ProjectName) {
		return true
	}

	return false
}

// SetProjectName gets a reference to the given string and assigns it to the ProjectName field.
func (o *CreateTaskV3Request) SetProjectName(v string) {
	o.ProjectName = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *CreateTaskV3Request) GetContent() string {
	if o == nil || IsNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskV3Request) GetContentOk() (*string, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *CreateTaskV3Request) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *CreateTaskV3Request) SetContent(v string) {
	o.Content = &v
}

// GetExecutorId returns the ExecutorId field value if set, zero value otherwise.
func (o *CreateTaskV3Request) GetExecutorId() string {
	if o == nil || IsNil(o.ExecutorId) {
		var ret string
		return ret
	}
	return *o.ExecutorId
}

// GetExecutorIdOk returns a tuple with the ExecutorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskV3Request) GetExecutorIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExecutorId) {
		return nil, false
	}
	return o.ExecutorId, true
}

// HasExecutorId returns a boolean if a field has been set.
func (o *CreateTaskV3Request) HasExecutorId() bool {
	if o != nil && !IsNil(o.ExecutorId) {
		return true
	}

	return false
}

// SetExecutorId gets a reference to the given string and assigns it to the ExecutorId field.
func (o *CreateTaskV3Request) SetExecutorId(v string) {
	o.ExecutorId = &v
}

// GetInvolveMembers returns the InvolveMembers field value if set, zero value otherwise.
func (o *CreateTaskV3Request) GetInvolveMembers() []string {
	if o == nil || IsNil(o.InvolveMembers) {
		var ret []string
		return ret
	}
	return o.InvolveMembers
}

// GetInvolveMembersOk returns a tuple with the InvolveMembers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskV3Request) GetInvolveMembersOk() ([]string, bool) {
	if o == nil || IsNil(o.InvolveMembers) {
		return nil, false
	}
	return o.InvolveMembers, true
}

// HasInvolveMembers returns a boolean if a field has been set.
func (o *CreateTaskV3Request) HasInvolveMembers() bool {
	if o != nil && !IsNil(o.InvolveMembers) {
		return true
	}

	return false
}

// SetInvolveMembers gets a reference to the given []string and assigns it to the InvolveMembers field.
func (o *CreateTaskV3Request) SetInvolveMembers(v []string) {
	o.InvolveMembers = v
}

// GetStageId returns the StageId field value if set, zero value otherwise.
func (o *CreateTaskV3Request) GetStageId() string {
	if o == nil || IsNil(o.StageId) {
		var ret string
		return ret
	}
	return *o.StageId
}

// GetStageIdOk returns a tuple with the StageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskV3Request) GetStageIdOk() (*string, bool) {
	if o == nil || IsNil(o.StageId) {
		return nil, false
	}
	return o.StageId, true
}

// HasStageId returns a boolean if a field has been set.
func (o *CreateTaskV3Request) HasStageId() bool {
	if o != nil && !IsNil(o.StageId) {
		return true
	}

	return false
}

// SetStageId gets a reference to the given string and assigns it to the StageId field.
func (o *CreateTaskV3Request) SetStageId(v string) {
	o.StageId = &v
}

// GetTasklistId returns the TasklistId field value if set, zero value otherwise.
func (o *CreateTaskV3Request) GetTasklistId() string {
	if o == nil || IsNil(o.TasklistId) {
		var ret string
		return ret
	}
	return *o.TasklistId
}

// GetTasklistIdOk returns a tuple with the TasklistId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskV3Request) GetTasklistIdOk() (*string, bool) {
	if o == nil || IsNil(o.TasklistId) {
		return nil, false
	}
	return o.TasklistId, true
}

// HasTasklistId returns a boolean if a field has been set.
func (o *CreateTaskV3Request) HasTasklistId() bool {
	if o != nil && !IsNil(o.TasklistId) {
		return true
	}

	return false
}

// SetTasklistId gets a reference to the given string and assigns it to the TasklistId field.
func (o *CreateTaskV3Request) SetTasklistId(v string) {
	o.TasklistId = &v
}

// GetTaskflowstatusId returns the TaskflowstatusId field value if set, zero value otherwise.
func (o *CreateTaskV3Request) GetTaskflowstatusId() string {
	if o == nil || IsNil(o.TaskflowstatusId) {
		var ret string
		return ret
	}
	return *o.TaskflowstatusId
}

// GetTaskflowstatusIdOk returns a tuple with the TaskflowstatusId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskV3Request) GetTaskflowstatusIdOk() (*string, bool) {
	if o == nil || IsNil(o.TaskflowstatusId) {
		return nil, false
	}
	return o.TaskflowstatusId, true
}

// HasTaskflowstatusId returns a boolean if a field has been set.
func (o *CreateTaskV3Request) HasTaskflowstatusId() bool {
	if o != nil && !IsNil(o.TaskflowstatusId) {
		return true
	}

	return false
}

// SetTaskflowstatusId gets a reference to the given string and assigns it to the TaskflowstatusId field.
func (o *CreateTaskV3Request) SetTaskflowstatusId(v string) {
	o.TaskflowstatusId = &v
}

// GetTfsName returns the TfsName field value if set, zero value otherwise.
func (o *CreateTaskV3Request) GetTfsName() string {
	if o == nil || IsNil(o.TfsName) {
		var ret string
		return ret
	}
	return *o.TfsName
}

// GetTfsNameOk returns a tuple with the TfsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskV3Request) GetTfsNameOk() (*string, bool) {
	if o == nil || IsNil(o.TfsName) {
		return nil, false
	}
	return o.TfsName, true
}

// HasTfsName returns a boolean if a field has been set.
func (o *CreateTaskV3Request) HasTfsName() bool {
	if o != nil && !IsNil(o.TfsName) {
		return true
	}

	return false
}

// SetTfsName gets a reference to the given string and assigns it to the TfsName field.
func (o *CreateTaskV3Request) SetTfsName(v string) {
	o.TfsName = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *CreateTaskV3Request) GetStartDate() time.Time {
	if o == nil || IsNil(o.StartDate) {
		var ret time.Time
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskV3Request) GetStartDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *CreateTaskV3Request) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given time.Time and assigns it to the StartDate field.
func (o *CreateTaskV3Request) SetStartDate(v time.Time) {
	o.StartDate = &v
}

// GetDueDate returns the DueDate field value if set, zero value otherwise.
func (o *CreateTaskV3Request) GetDueDate() time.Time {
	if o == nil || IsNil(o.DueDate) {
		var ret time.Time
		return ret
	}
	return *o.DueDate
}

// GetDueDateOk returns a tuple with the DueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskV3Request) GetDueDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DueDate) {
		return nil, false
	}
	return o.DueDate, true
}

// HasDueDate returns a boolean if a field has been set.
func (o *CreateTaskV3Request) HasDueDate() bool {
	if o != nil && !IsNil(o.DueDate) {
		return true
	}

	return false
}

// SetDueDate gets a reference to the given time.Time and assigns it to the DueDate field.
func (o *CreateTaskV3Request) SetDueDate(v time.Time) {
	o.DueDate = &v
}

// GetNote returns the Note field value if set, zero value otherwise.
func (o *CreateTaskV3Request) GetNote() string {
	if o == nil || IsNil(o.Note) {
		var ret string
		return ret
	}
	return *o.Note
}

// GetNoteOk returns a tuple with the Note field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskV3Request) GetNoteOk() (*string, bool) {
	if o == nil || IsNil(o.Note) {
		return nil, false
	}
	return o.Note, true
}

// HasNote returns a boolean if a field has been set.
func (o *CreateTaskV3Request) HasNote() bool {
	if o != nil && !IsNil(o.Note) {
		return true
	}

	return false
}

// SetNote gets a reference to the given string and assigns it to the Note field.
func (o *CreateTaskV3Request) SetNote(v string) {
	o.Note = &v
}

// GetNoteRenderMode returns the NoteRenderMode field value if set, zero value otherwise.
func (o *CreateTaskV3Request) GetNoteRenderMode() string {
	if o == nil || IsNil(o.NoteRenderMode) {
		var ret string
		return ret
	}
	return *o.NoteRenderMode
}

// GetNoteRenderModeOk returns a tuple with the NoteRenderMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskV3Request) GetNoteRenderModeOk() (*string, bool) {
	if o == nil || IsNil(o.NoteRenderMode) {
		return nil, false
	}
	return o.NoteRenderMode, true
}

// HasNoteRenderMode returns a boolean if a field has been set.
func (o *CreateTaskV3Request) HasNoteRenderMode() bool {
	if o != nil && !IsNil(o.NoteRenderMode) {
		return true
	}

	return false
}

// SetNoteRenderMode gets a reference to the given string and assigns it to the NoteRenderMode field.
func (o *CreateTaskV3Request) SetNoteRenderMode(v string) {
	o.NoteRenderMode = &v
}

// GetNoteRtfValueToken returns the NoteRtfValueToken field value if set, zero value otherwise.
func (o *CreateTaskV3Request) GetNoteRtfValueToken() string {
	if o == nil || IsNil(o.NoteRtfValueToken) {
		var ret string
		return ret
	}
	return *o.NoteRtfValueToken
}

// GetNoteRtfValueTokenOk returns a tuple with the NoteRtfValueToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskV3Request) GetNoteRtfValueTokenOk() (*string, bool) {
	if o == nil || IsNil(o.NoteRtfValueToken) {
		return nil, false
	}
	return o.NoteRtfValueToken, true
}

// HasNoteRtfValueToken returns a boolean if a field has been set.
func (o *CreateTaskV3Request) HasNoteRtfValueToken() bool {
	if o != nil && !IsNil(o.NoteRtfValueToken) {
		return true
	}

	return false
}

// SetNoteRtfValueToken gets a reference to the given string and assigns it to the NoteRtfValueToken field.
func (o *CreateTaskV3Request) SetNoteRtfValueToken(v string) {
	o.NoteRtfValueToken = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *CreateTaskV3Request) GetPriority() int32 {
	if o == nil || IsNil(o.Priority) {
		var ret int32
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskV3Request) GetPriorityOk() (*int32, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *CreateTaskV3Request) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given int32 and assigns it to the Priority field.
func (o *CreateTaskV3Request) SetPriority(v int32) {
	o.Priority = &v
}

// GetPriorityName returns the PriorityName field value if set, zero value otherwise.
func (o *CreateTaskV3Request) GetPriorityName() string {
	if o == nil || IsNil(o.PriorityName) {
		var ret string
		return ret
	}
	return *o.PriorityName
}

// GetPriorityNameOk returns a tuple with the PriorityName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskV3Request) GetPriorityNameOk() (*string, bool) {
	if o == nil || IsNil(o.PriorityName) {
		return nil, false
	}
	return o.PriorityName, true
}

// HasPriorityName returns a boolean if a field has been set.
func (o *CreateTaskV3Request) HasPriorityName() bool {
	if o != nil && !IsNil(o.PriorityName) {
		return true
	}

	return false
}

// SetPriorityName gets a reference to the given string and assigns it to the PriorityName field.
func (o *CreateTaskV3Request) SetPriorityName(v string) {
	o.PriorityName = &v
}

// GetParentTaskId returns the ParentTaskId field value if set, zero value otherwise.
func (o *CreateTaskV3Request) GetParentTaskId() string {
	if o == nil || IsNil(o.ParentTaskId) {
		var ret string
		return ret
	}
	return *o.ParentTaskId
}

// GetParentTaskIdOk returns a tuple with the ParentTaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskV3Request) GetParentTaskIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentTaskId) {
		return nil, false
	}
	return o.ParentTaskId, true
}

// HasParentTaskId returns a boolean if a field has been set.
func (o *CreateTaskV3Request) HasParentTaskId() bool {
	if o != nil && !IsNil(o.ParentTaskId) {
		return true
	}

	return false
}

// SetParentTaskId gets a reference to the given string and assigns it to the ParentTaskId field.
func (o *CreateTaskV3Request) SetParentTaskId(v string) {
	o.ParentTaskId = &v
}

// GetProgress returns the Progress field value if set, zero value otherwise.
func (o *CreateTaskV3Request) GetProgress() int32 {
	if o == nil || IsNil(o.Progress) {
		var ret int32
		return ret
	}
	return *o.Progress
}

// GetProgressOk returns a tuple with the Progress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskV3Request) GetProgressOk() (*int32, bool) {
	if o == nil || IsNil(o.Progress) {
		return nil, false
	}
	return o.Progress, true
}

// HasProgress returns a boolean if a field has been set.
func (o *CreateTaskV3Request) HasProgress() bool {
	if o != nil && !IsNil(o.Progress) {
		return true
	}

	return false
}

// SetProgress gets a reference to the given int32 and assigns it to the Progress field.
func (o *CreateTaskV3Request) SetProgress(v int32) {
	o.Progress = &v
}

// GetVisible returns the Visible field value if set, zero value otherwise.
func (o *CreateTaskV3Request) GetVisible() string {
	if o == nil || IsNil(o.Visible) {
		var ret string
		return ret
	}
	return *o.Visible
}

// GetVisibleOk returns a tuple with the Visible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskV3Request) GetVisibleOk() (*string, bool) {
	if o == nil || IsNil(o.Visible) {
		return nil, false
	}
	return o.Visible, true
}

// HasVisible returns a boolean if a field has been set.
func (o *CreateTaskV3Request) HasVisible() bool {
	if o != nil && !IsNil(o.Visible) {
		return true
	}

	return false
}

// SetVisible gets a reference to the given string and assigns it to the Visible field.
func (o *CreateTaskV3Request) SetVisible(v string) {
	o.Visible = &v
}

// GetSprintId returns the SprintId field value if set, zero value otherwise.
func (o *CreateTaskV3Request) GetSprintId() string {
	if o == nil || IsNil(o.SprintId) {
		var ret string
		return ret
	}
	return *o.SprintId
}

// GetSprintIdOk returns a tuple with the SprintId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskV3Request) GetSprintIdOk() (*string, bool) {
	if o == nil || IsNil(o.SprintId) {
		return nil, false
	}
	return o.SprintId, true
}

// HasSprintId returns a boolean if a field has been set.
func (o *CreateTaskV3Request) HasSprintId() bool {
	if o != nil && !IsNil(o.SprintId) {
		return true
	}

	return false
}

// SetSprintId gets a reference to the given string and assigns it to the SprintId field.
func (o *CreateTaskV3Request) SetSprintId(v string) {
	o.SprintId = &v
}

// GetTagIds returns the TagIds field value if set, zero value otherwise.
func (o *CreateTaskV3Request) GetTagIds() []string {
	if o == nil || IsNil(o.TagIds) {
		var ret []string
		return ret
	}
	return o.TagIds
}

// GetTagIdsOk returns a tuple with the TagIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskV3Request) GetTagIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.TagIds) {
		return nil, false
	}
	return o.TagIds, true
}

// HasTagIds returns a boolean if a field has been set.
func (o *CreateTaskV3Request) HasTagIds() bool {
	if o != nil && !IsNil(o.TagIds) {
		return true
	}

	return false
}

// SetTagIds gets a reference to the given []string and assigns it to the TagIds field.
func (o *CreateTaskV3Request) SetTagIds(v []string) {
	o.TagIds = v
}

// GetTagNames returns the TagNames field value if set, zero value otherwise.
func (o *CreateTaskV3Request) GetTagNames() []string {
	if o == nil || IsNil(o.TagNames) {
		var ret []string
		return ret
	}
	return o.TagNames
}

// GetTagNamesOk returns a tuple with the TagNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskV3Request) GetTagNamesOk() ([]string, bool) {
	if o == nil || IsNil(o.TagNames) {
		return nil, false
	}
	return o.TagNames, true
}

// HasTagNames returns a boolean if a field has been set.
func (o *CreateTaskV3Request) HasTagNames() bool {
	if o != nil && !IsNil(o.TagNames) {
		return true
	}

	return false
}

// SetTagNames gets a reference to the given []string and assigns it to the TagNames field.
func (o *CreateTaskV3Request) SetTagNames(v []string) {
	o.TagNames = v
}

// GetStoryPoint returns the StoryPoint field value if set, zero value otherwise.
func (o *CreateTaskV3Request) GetStoryPoint() string {
	if o == nil || IsNil(o.StoryPoint) {
		var ret string
		return ret
	}
	return *o.StoryPoint
}

// GetStoryPointOk returns a tuple with the StoryPoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskV3Request) GetStoryPointOk() (*string, bool) {
	if o == nil || IsNil(o.StoryPoint) {
		return nil, false
	}
	return o.StoryPoint, true
}

// HasStoryPoint returns a boolean if a field has been set.
func (o *CreateTaskV3Request) HasStoryPoint() bool {
	if o != nil && !IsNil(o.StoryPoint) {
		return true
	}

	return false
}

// SetStoryPoint gets a reference to the given string and assigns it to the StoryPoint field.
func (o *CreateTaskV3Request) SetStoryPoint(v string) {
	o.StoryPoint = &v
}

// GetScenariofieldconfigId returns the ScenariofieldconfigId field value if set, zero value otherwise.
func (o *CreateTaskV3Request) GetScenariofieldconfigId() string {
	if o == nil || IsNil(o.ScenariofieldconfigId) {
		var ret string
		return ret
	}
	return *o.ScenariofieldconfigId
}

// GetScenariofieldconfigIdOk returns a tuple with the ScenariofieldconfigId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskV3Request) GetScenariofieldconfigIdOk() (*string, bool) {
	if o == nil || IsNil(o.ScenariofieldconfigId) {
		return nil, false
	}
	return o.ScenariofieldconfigId, true
}

// HasScenariofieldconfigId returns a boolean if a field has been set.
func (o *CreateTaskV3Request) HasScenariofieldconfigId() bool {
	if o != nil && !IsNil(o.ScenariofieldconfigId) {
		return true
	}

	return false
}

// SetScenariofieldconfigId gets a reference to the given string and assigns it to the ScenariofieldconfigId field.
func (o *CreateTaskV3Request) SetScenariofieldconfigId(v string) {
	o.ScenariofieldconfigId = &v
}

// GetScenariofieldconfigAlias returns the ScenariofieldconfigAlias field value if set, zero value otherwise.
func (o *CreateTaskV3Request) GetScenariofieldconfigAlias() string {
	if o == nil || IsNil(o.ScenariofieldconfigAlias) {
		var ret string
		return ret
	}
	return *o.ScenariofieldconfigAlias
}

// GetScenariofieldconfigAliasOk returns a tuple with the ScenariofieldconfigAlias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskV3Request) GetScenariofieldconfigAliasOk() (*string, bool) {
	if o == nil || IsNil(o.ScenariofieldconfigAlias) {
		return nil, false
	}
	return o.ScenariofieldconfigAlias, true
}

// HasScenariofieldconfigAlias returns a boolean if a field has been set.
func (o *CreateTaskV3Request) HasScenariofieldconfigAlias() bool {
	if o != nil && !IsNil(o.ScenariofieldconfigAlias) {
		return true
	}

	return false
}

// SetScenariofieldconfigAlias gets a reference to the given string and assigns it to the ScenariofieldconfigAlias field.
func (o *CreateTaskV3Request) SetScenariofieldconfigAlias(v string) {
	o.ScenariofieldconfigAlias = &v
}

// GetReminders returns the Reminders field value if set, zero value otherwise.
func (o *CreateTaskV3Request) GetReminders() []CreateTaskV3RequestRemindersInner {
	if o == nil || IsNil(o.Reminders) {
		var ret []CreateTaskV3RequestRemindersInner
		return ret
	}
	return o.Reminders
}

// GetRemindersOk returns a tuple with the Reminders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskV3Request) GetRemindersOk() ([]CreateTaskV3RequestRemindersInner, bool) {
	if o == nil || IsNil(o.Reminders) {
		return nil, false
	}
	return o.Reminders, true
}

// HasReminders returns a boolean if a field has been set.
func (o *CreateTaskV3Request) HasReminders() bool {
	if o != nil && !IsNil(o.Reminders) {
		return true
	}

	return false
}

// SetReminders gets a reference to the given []CreateTaskV3RequestRemindersInner and assigns it to the Reminders field.
func (o *CreateTaskV3Request) SetReminders(v []CreateTaskV3RequestRemindersInner) {
	o.Reminders = v
}

// GetCustomfields returns the Customfields field value if set, zero value otherwise.
func (o *CreateTaskV3Request) GetCustomfields() []CreateTaskV3RequestCustomfieldsInner {
	if o == nil || IsNil(o.Customfields) {
		var ret []CreateTaskV3RequestCustomfieldsInner
		return ret
	}
	return o.Customfields
}

// GetCustomfieldsOk returns a tuple with the Customfields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskV3Request) GetCustomfieldsOk() ([]CreateTaskV3RequestCustomfieldsInner, bool) {
	if o == nil || IsNil(o.Customfields) {
		return nil, false
	}
	return o.Customfields, true
}

// HasCustomfields returns a boolean if a field has been set.
func (o *CreateTaskV3Request) HasCustomfields() bool {
	if o != nil && !IsNil(o.Customfields) {
		return true
	}

	return false
}

// SetCustomfields gets a reference to the given []CreateTaskV3RequestCustomfieldsInner and assigns it to the Customfields field.
func (o *CreateTaskV3Request) SetCustomfields(v []CreateTaskV3RequestCustomfieldsInner) {
	o.Customfields = v
}

func (o CreateTaskV3Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTaskV3Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProjectId) {
		toSerialize["projectId"] = o.ProjectId
	}
	if !IsNil(o.ProjectName) {
		toSerialize["projectName"] = o.ProjectName
	}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !IsNil(o.ExecutorId) {
		toSerialize["executorId"] = o.ExecutorId
	}
	if !IsNil(o.InvolveMembers) {
		toSerialize["involveMembers"] = o.InvolveMembers
	}
	if !IsNil(o.StageId) {
		toSerialize["stageId"] = o.StageId
	}
	if !IsNil(o.TasklistId) {
		toSerialize["tasklistId"] = o.TasklistId
	}
	if !IsNil(o.TaskflowstatusId) {
		toSerialize["taskflowstatusId"] = o.TaskflowstatusId
	}
	if !IsNil(o.TfsName) {
		toSerialize["tfsName"] = o.TfsName
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.DueDate) {
		toSerialize["dueDate"] = o.DueDate
	}
	if !IsNil(o.Note) {
		toSerialize["note"] = o.Note
	}
	if !IsNil(o.NoteRenderMode) {
		toSerialize["noteRenderMode"] = o.NoteRenderMode
	}
	if !IsNil(o.NoteRtfValueToken) {
		toSerialize["noteRtfValueToken"] = o.NoteRtfValueToken
	}
	if !IsNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}
	if !IsNil(o.PriorityName) {
		toSerialize["priorityName"] = o.PriorityName
	}
	if !IsNil(o.ParentTaskId) {
		toSerialize["parentTaskId"] = o.ParentTaskId
	}
	if !IsNil(o.Progress) {
		toSerialize["progress"] = o.Progress
	}
	if !IsNil(o.Visible) {
		toSerialize["visible"] = o.Visible
	}
	if !IsNil(o.SprintId) {
		toSerialize["sprintId"] = o.SprintId
	}
	if !IsNil(o.TagIds) {
		toSerialize["tagIds"] = o.TagIds
	}
	if !IsNil(o.TagNames) {
		toSerialize["tagNames"] = o.TagNames
	}
	if !IsNil(o.StoryPoint) {
		toSerialize["storyPoint"] = o.StoryPoint
	}
	if !IsNil(o.ScenariofieldconfigId) {
		toSerialize["scenariofieldconfigId"] = o.ScenariofieldconfigId
	}
	if !IsNil(o.ScenariofieldconfigAlias) {
		toSerialize["scenariofieldconfigAlias"] = o.ScenariofieldconfigAlias
	}
	if !IsNil(o.Reminders) {
		toSerialize["reminders"] = o.Reminders
	}
	if !IsNil(o.Customfields) {
		toSerialize["customfields"] = o.Customfields
	}
	return toSerialize, nil
}

type NullableCreateTaskV3Request struct {
	value *CreateTaskV3Request
	isSet bool
}

func (v NullableCreateTaskV3Request) Get() *CreateTaskV3Request {
	return v.value
}

func (v *NullableCreateTaskV3Request) Set(val *CreateTaskV3Request) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTaskV3Request) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTaskV3Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTaskV3Request(val *CreateTaskV3Request) *NullableCreateTaskV3Request {
	return &NullableCreateTaskV3Request{value: val, isSet: true}
}

func (v NullableCreateTaskV3Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTaskV3Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


