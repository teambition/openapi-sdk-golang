/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateTaskV3RequestRemindersInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTaskV3RequestRemindersInner{}

// CreateTaskV3RequestRemindersInner struct for CreateTaskV3RequestRemindersInner
type CreateTaskV3RequestRemindersInner struct {
	Labels []string `json:"labels,omitempty"`
	Receivers []string `json:"receivers,omitempty"`
	// 提醒规则 [custom/具体时间, dueDate/P0D, startDate/-PT5M, circle/DTSTART:20220209T173500Z\\nRRULE:FREQ=DAILY;COUNT=30;INTERVAL=1;WKST=MO]，注意：循环提醒 rrule 规则 join('\\n')
	Rule *string `json:"rule,omitempty"`
}

// NewCreateTaskV3RequestRemindersInner instantiates a new CreateTaskV3RequestRemindersInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTaskV3RequestRemindersInner() *CreateTaskV3RequestRemindersInner {
	this := CreateTaskV3RequestRemindersInner{}
	return &this
}

// NewCreateTaskV3RequestRemindersInnerWithDefaults instantiates a new CreateTaskV3RequestRemindersInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTaskV3RequestRemindersInnerWithDefaults() *CreateTaskV3RequestRemindersInner {
	this := CreateTaskV3RequestRemindersInner{}
	return &this
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *CreateTaskV3RequestRemindersInner) GetLabels() []string {
	if o == nil || IsNil(o.Labels) {
		var ret []string
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskV3RequestRemindersInner) GetLabelsOk() ([]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *CreateTaskV3RequestRemindersInner) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *CreateTaskV3RequestRemindersInner) SetLabels(v []string) {
	o.Labels = v
}

// GetReceivers returns the Receivers field value if set, zero value otherwise.
func (o *CreateTaskV3RequestRemindersInner) GetReceivers() []string {
	if o == nil || IsNil(o.Receivers) {
		var ret []string
		return ret
	}
	return o.Receivers
}

// GetReceiversOk returns a tuple with the Receivers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskV3RequestRemindersInner) GetReceiversOk() ([]string, bool) {
	if o == nil || IsNil(o.Receivers) {
		return nil, false
	}
	return o.Receivers, true
}

// HasReceivers returns a boolean if a field has been set.
func (o *CreateTaskV3RequestRemindersInner) HasReceivers() bool {
	if o != nil && !IsNil(o.Receivers) {
		return true
	}

	return false
}

// SetReceivers gets a reference to the given []string and assigns it to the Receivers field.
func (o *CreateTaskV3RequestRemindersInner) SetReceivers(v []string) {
	o.Receivers = v
}

// GetRule returns the Rule field value if set, zero value otherwise.
func (o *CreateTaskV3RequestRemindersInner) GetRule() string {
	if o == nil || IsNil(o.Rule) {
		var ret string
		return ret
	}
	return *o.Rule
}

// GetRuleOk returns a tuple with the Rule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskV3RequestRemindersInner) GetRuleOk() (*string, bool) {
	if o == nil || IsNil(o.Rule) {
		return nil, false
	}
	return o.Rule, true
}

// HasRule returns a boolean if a field has been set.
func (o *CreateTaskV3RequestRemindersInner) HasRule() bool {
	if o != nil && !IsNil(o.Rule) {
		return true
	}

	return false
}

// SetRule gets a reference to the given string and assigns it to the Rule field.
func (o *CreateTaskV3RequestRemindersInner) SetRule(v string) {
	o.Rule = &v
}

func (o CreateTaskV3RequestRemindersInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTaskV3RequestRemindersInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.Receivers) {
		toSerialize["receivers"] = o.Receivers
	}
	if !IsNil(o.Rule) {
		toSerialize["rule"] = o.Rule
	}
	return toSerialize, nil
}

type NullableCreateTaskV3RequestRemindersInner struct {
	value *CreateTaskV3RequestRemindersInner
	isSet bool
}

func (v NullableCreateTaskV3RequestRemindersInner) Get() *CreateTaskV3RequestRemindersInner {
	return v.value
}

func (v *NullableCreateTaskV3RequestRemindersInner) Set(val *CreateTaskV3RequestRemindersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTaskV3RequestRemindersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTaskV3RequestRemindersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTaskV3RequestRemindersInner(val *CreateTaskV3RequestRemindersInner) *NullableCreateTaskV3RequestRemindersInner {
	return &NullableCreateTaskV3RequestRemindersInner{value: val, isSet: true}
}

func (v NullableCreateTaskV3RequestRemindersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTaskV3RequestRemindersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


