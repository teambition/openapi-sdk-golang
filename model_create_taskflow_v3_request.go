/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateTaskflowV3Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTaskflowV3Request{}

// CreateTaskflowV3Request struct for CreateTaskflowV3Request
type CreateTaskflowV3Request struct {
	// 工作流名字
	Name *string `json:"name,omitempty"`
	// 内容载荷
	Payload map[string]interface{} `json:"payload,omitempty"`
}

// NewCreateTaskflowV3Request instantiates a new CreateTaskflowV3Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTaskflowV3Request() *CreateTaskflowV3Request {
	this := CreateTaskflowV3Request{}
	return &this
}

// NewCreateTaskflowV3RequestWithDefaults instantiates a new CreateTaskflowV3Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTaskflowV3RequestWithDefaults() *CreateTaskflowV3Request {
	this := CreateTaskflowV3Request{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateTaskflowV3Request) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskflowV3Request) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateTaskflowV3Request) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateTaskflowV3Request) SetName(v string) {
	o.Name = &v
}

// GetPayload returns the Payload field value if set, zero value otherwise.
func (o *CreateTaskflowV3Request) GetPayload() map[string]interface{} {
	if o == nil || IsNil(o.Payload) {
		var ret map[string]interface{}
		return ret
	}
	return o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskflowV3Request) GetPayloadOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Payload) {
		return map[string]interface{}{}, false
	}
	return o.Payload, true
}

// HasPayload returns a boolean if a field has been set.
func (o *CreateTaskflowV3Request) HasPayload() bool {
	if o != nil && !IsNil(o.Payload) {
		return true
	}

	return false
}

// SetPayload gets a reference to the given map[string]interface{} and assigns it to the Payload field.
func (o *CreateTaskflowV3Request) SetPayload(v map[string]interface{}) {
	o.Payload = v
}

func (o CreateTaskflowV3Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTaskflowV3Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Payload) {
		toSerialize["payload"] = o.Payload
	}
	return toSerialize, nil
}

type NullableCreateTaskflowV3Request struct {
	value *CreateTaskflowV3Request
	isSet bool
}

func (v NullableCreateTaskflowV3Request) Get() *CreateTaskflowV3Request {
	return v.value
}

func (v *NullableCreateTaskflowV3Request) Set(val *CreateTaskflowV3Request) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTaskflowV3Request) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTaskflowV3Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTaskflowV3Request(val *CreateTaskflowV3Request) *NullableCreateTaskflowV3Request {
	return &NullableCreateTaskflowV3Request{value: val, isSet: true}
}

func (v NullableCreateTaskflowV3Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTaskflowV3Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


