/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateTestCaseV3Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTestCaseV3Request{}

// CreateTestCaseV3Request struct for CreateTestCaseV3Request
type CreateTestCaseV3Request struct {
	// 用例类型
	CaseType *string `json:"caseType,omitempty"`
	// 分组id
	CommongroupId *string `json:"commongroupId,omitempty"`
	// 执行者id
	ExecutorId *string `json:"executorId,omitempty"`
	// 任务状态id
	FlowstatusId *string `json:"flowstatusId,omitempty"`
	// 参与者用户ID列表
	InvolveMembers []string `json:"involveMembers,omitempty"`
	// 前置条件
	Precondition *string `json:"precondition,omitempty"`
	// 优先级
	Priority *string `json:"priority,omitempty"`
	// 任务类型id
	ScenariofieldconfigId *string `json:"scenariofieldconfigId,omitempty"`
	// 步骤列表
	Steps []CreateTestCaseV3RequestStepsInner `json:"steps,omitempty"`
	// 标签id列表
	TagIds []string `json:"tagIds,omitempty"`
	// 测试计划Id
	TestplanId *string `json:"testplanId,omitempty"`
	// 测试用例标题
	Title *string `json:"title,omitempty"`
}

// NewCreateTestCaseV3Request instantiates a new CreateTestCaseV3Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTestCaseV3Request() *CreateTestCaseV3Request {
	this := CreateTestCaseV3Request{}
	return &this
}

// NewCreateTestCaseV3RequestWithDefaults instantiates a new CreateTestCaseV3Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTestCaseV3RequestWithDefaults() *CreateTestCaseV3Request {
	this := CreateTestCaseV3Request{}
	return &this
}

// GetCaseType returns the CaseType field value if set, zero value otherwise.
func (o *CreateTestCaseV3Request) GetCaseType() string {
	if o == nil || IsNil(o.CaseType) {
		var ret string
		return ret
	}
	return *o.CaseType
}

// GetCaseTypeOk returns a tuple with the CaseType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestCaseV3Request) GetCaseTypeOk() (*string, bool) {
	if o == nil || IsNil(o.CaseType) {
		return nil, false
	}
	return o.CaseType, true
}

// HasCaseType returns a boolean if a field has been set.
func (o *CreateTestCaseV3Request) HasCaseType() bool {
	if o != nil && !IsNil(o.CaseType) {
		return true
	}

	return false
}

// SetCaseType gets a reference to the given string and assigns it to the CaseType field.
func (o *CreateTestCaseV3Request) SetCaseType(v string) {
	o.CaseType = &v
}

// GetCommongroupId returns the CommongroupId field value if set, zero value otherwise.
func (o *CreateTestCaseV3Request) GetCommongroupId() string {
	if o == nil || IsNil(o.CommongroupId) {
		var ret string
		return ret
	}
	return *o.CommongroupId
}

// GetCommongroupIdOk returns a tuple with the CommongroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestCaseV3Request) GetCommongroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.CommongroupId) {
		return nil, false
	}
	return o.CommongroupId, true
}

// HasCommongroupId returns a boolean if a field has been set.
func (o *CreateTestCaseV3Request) HasCommongroupId() bool {
	if o != nil && !IsNil(o.CommongroupId) {
		return true
	}

	return false
}

// SetCommongroupId gets a reference to the given string and assigns it to the CommongroupId field.
func (o *CreateTestCaseV3Request) SetCommongroupId(v string) {
	o.CommongroupId = &v
}

// GetExecutorId returns the ExecutorId field value if set, zero value otherwise.
func (o *CreateTestCaseV3Request) GetExecutorId() string {
	if o == nil || IsNil(o.ExecutorId) {
		var ret string
		return ret
	}
	return *o.ExecutorId
}

// GetExecutorIdOk returns a tuple with the ExecutorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestCaseV3Request) GetExecutorIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExecutorId) {
		return nil, false
	}
	return o.ExecutorId, true
}

// HasExecutorId returns a boolean if a field has been set.
func (o *CreateTestCaseV3Request) HasExecutorId() bool {
	if o != nil && !IsNil(o.ExecutorId) {
		return true
	}

	return false
}

// SetExecutorId gets a reference to the given string and assigns it to the ExecutorId field.
func (o *CreateTestCaseV3Request) SetExecutorId(v string) {
	o.ExecutorId = &v
}

// GetFlowstatusId returns the FlowstatusId field value if set, zero value otherwise.
func (o *CreateTestCaseV3Request) GetFlowstatusId() string {
	if o == nil || IsNil(o.FlowstatusId) {
		var ret string
		return ret
	}
	return *o.FlowstatusId
}

// GetFlowstatusIdOk returns a tuple with the FlowstatusId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestCaseV3Request) GetFlowstatusIdOk() (*string, bool) {
	if o == nil || IsNil(o.FlowstatusId) {
		return nil, false
	}
	return o.FlowstatusId, true
}

// HasFlowstatusId returns a boolean if a field has been set.
func (o *CreateTestCaseV3Request) HasFlowstatusId() bool {
	if o != nil && !IsNil(o.FlowstatusId) {
		return true
	}

	return false
}

// SetFlowstatusId gets a reference to the given string and assigns it to the FlowstatusId field.
func (o *CreateTestCaseV3Request) SetFlowstatusId(v string) {
	o.FlowstatusId = &v
}

// GetInvolveMembers returns the InvolveMembers field value if set, zero value otherwise.
func (o *CreateTestCaseV3Request) GetInvolveMembers() []string {
	if o == nil || IsNil(o.InvolveMembers) {
		var ret []string
		return ret
	}
	return o.InvolveMembers
}

// GetInvolveMembersOk returns a tuple with the InvolveMembers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestCaseV3Request) GetInvolveMembersOk() ([]string, bool) {
	if o == nil || IsNil(o.InvolveMembers) {
		return nil, false
	}
	return o.InvolveMembers, true
}

// HasInvolveMembers returns a boolean if a field has been set.
func (o *CreateTestCaseV3Request) HasInvolveMembers() bool {
	if o != nil && !IsNil(o.InvolveMembers) {
		return true
	}

	return false
}

// SetInvolveMembers gets a reference to the given []string and assigns it to the InvolveMembers field.
func (o *CreateTestCaseV3Request) SetInvolveMembers(v []string) {
	o.InvolveMembers = v
}

// GetPrecondition returns the Precondition field value if set, zero value otherwise.
func (o *CreateTestCaseV3Request) GetPrecondition() string {
	if o == nil || IsNil(o.Precondition) {
		var ret string
		return ret
	}
	return *o.Precondition
}

// GetPreconditionOk returns a tuple with the Precondition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestCaseV3Request) GetPreconditionOk() (*string, bool) {
	if o == nil || IsNil(o.Precondition) {
		return nil, false
	}
	return o.Precondition, true
}

// HasPrecondition returns a boolean if a field has been set.
func (o *CreateTestCaseV3Request) HasPrecondition() bool {
	if o != nil && !IsNil(o.Precondition) {
		return true
	}

	return false
}

// SetPrecondition gets a reference to the given string and assigns it to the Precondition field.
func (o *CreateTestCaseV3Request) SetPrecondition(v string) {
	o.Precondition = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *CreateTestCaseV3Request) GetPriority() string {
	if o == nil || IsNil(o.Priority) {
		var ret string
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestCaseV3Request) GetPriorityOk() (*string, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *CreateTestCaseV3Request) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given string and assigns it to the Priority field.
func (o *CreateTestCaseV3Request) SetPriority(v string) {
	o.Priority = &v
}

// GetScenariofieldconfigId returns the ScenariofieldconfigId field value if set, zero value otherwise.
func (o *CreateTestCaseV3Request) GetScenariofieldconfigId() string {
	if o == nil || IsNil(o.ScenariofieldconfigId) {
		var ret string
		return ret
	}
	return *o.ScenariofieldconfigId
}

// GetScenariofieldconfigIdOk returns a tuple with the ScenariofieldconfigId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestCaseV3Request) GetScenariofieldconfigIdOk() (*string, bool) {
	if o == nil || IsNil(o.ScenariofieldconfigId) {
		return nil, false
	}
	return o.ScenariofieldconfigId, true
}

// HasScenariofieldconfigId returns a boolean if a field has been set.
func (o *CreateTestCaseV3Request) HasScenariofieldconfigId() bool {
	if o != nil && !IsNil(o.ScenariofieldconfigId) {
		return true
	}

	return false
}

// SetScenariofieldconfigId gets a reference to the given string and assigns it to the ScenariofieldconfigId field.
func (o *CreateTestCaseV3Request) SetScenariofieldconfigId(v string) {
	o.ScenariofieldconfigId = &v
}

// GetSteps returns the Steps field value if set, zero value otherwise.
func (o *CreateTestCaseV3Request) GetSteps() []CreateTestCaseV3RequestStepsInner {
	if o == nil || IsNil(o.Steps) {
		var ret []CreateTestCaseV3RequestStepsInner
		return ret
	}
	return o.Steps
}

// GetStepsOk returns a tuple with the Steps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestCaseV3Request) GetStepsOk() ([]CreateTestCaseV3RequestStepsInner, bool) {
	if o == nil || IsNil(o.Steps) {
		return nil, false
	}
	return o.Steps, true
}

// HasSteps returns a boolean if a field has been set.
func (o *CreateTestCaseV3Request) HasSteps() bool {
	if o != nil && !IsNil(o.Steps) {
		return true
	}

	return false
}

// SetSteps gets a reference to the given []CreateTestCaseV3RequestStepsInner and assigns it to the Steps field.
func (o *CreateTestCaseV3Request) SetSteps(v []CreateTestCaseV3RequestStepsInner) {
	o.Steps = v
}

// GetTagIds returns the TagIds field value if set, zero value otherwise.
func (o *CreateTestCaseV3Request) GetTagIds() []string {
	if o == nil || IsNil(o.TagIds) {
		var ret []string
		return ret
	}
	return o.TagIds
}

// GetTagIdsOk returns a tuple with the TagIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestCaseV3Request) GetTagIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.TagIds) {
		return nil, false
	}
	return o.TagIds, true
}

// HasTagIds returns a boolean if a field has been set.
func (o *CreateTestCaseV3Request) HasTagIds() bool {
	if o != nil && !IsNil(o.TagIds) {
		return true
	}

	return false
}

// SetTagIds gets a reference to the given []string and assigns it to the TagIds field.
func (o *CreateTestCaseV3Request) SetTagIds(v []string) {
	o.TagIds = v
}

// GetTestplanId returns the TestplanId field value if set, zero value otherwise.
func (o *CreateTestCaseV3Request) GetTestplanId() string {
	if o == nil || IsNil(o.TestplanId) {
		var ret string
		return ret
	}
	return *o.TestplanId
}

// GetTestplanIdOk returns a tuple with the TestplanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestCaseV3Request) GetTestplanIdOk() (*string, bool) {
	if o == nil || IsNil(o.TestplanId) {
		return nil, false
	}
	return o.TestplanId, true
}

// HasTestplanId returns a boolean if a field has been set.
func (o *CreateTestCaseV3Request) HasTestplanId() bool {
	if o != nil && !IsNil(o.TestplanId) {
		return true
	}

	return false
}

// SetTestplanId gets a reference to the given string and assigns it to the TestplanId field.
func (o *CreateTestCaseV3Request) SetTestplanId(v string) {
	o.TestplanId = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *CreateTestCaseV3Request) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestCaseV3Request) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *CreateTestCaseV3Request) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *CreateTestCaseV3Request) SetTitle(v string) {
	o.Title = &v
}

func (o CreateTestCaseV3Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTestCaseV3Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CaseType) {
		toSerialize["caseType"] = o.CaseType
	}
	if !IsNil(o.CommongroupId) {
		toSerialize["commongroupId"] = o.CommongroupId
	}
	if !IsNil(o.ExecutorId) {
		toSerialize["executorId"] = o.ExecutorId
	}
	if !IsNil(o.FlowstatusId) {
		toSerialize["flowstatusId"] = o.FlowstatusId
	}
	if !IsNil(o.InvolveMembers) {
		toSerialize["involveMembers"] = o.InvolveMembers
	}
	if !IsNil(o.Precondition) {
		toSerialize["precondition"] = o.Precondition
	}
	if !IsNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}
	if !IsNil(o.ScenariofieldconfigId) {
		toSerialize["scenariofieldconfigId"] = o.ScenariofieldconfigId
	}
	if !IsNil(o.Steps) {
		toSerialize["steps"] = o.Steps
	}
	if !IsNil(o.TagIds) {
		toSerialize["tagIds"] = o.TagIds
	}
	if !IsNil(o.TestplanId) {
		toSerialize["testplanId"] = o.TestplanId
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	return toSerialize, nil
}

type NullableCreateTestCaseV3Request struct {
	value *CreateTestCaseV3Request
	isSet bool
}

func (v NullableCreateTestCaseV3Request) Get() *CreateTestCaseV3Request {
	return v.value
}

func (v *NullableCreateTestCaseV3Request) Set(val *CreateTestCaseV3Request) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTestCaseV3Request) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTestCaseV3Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTestCaseV3Request(val *CreateTestCaseV3Request) *NullableCreateTestCaseV3Request {
	return &NullableCreateTestCaseV3Request{value: val, isSet: true}
}

func (v NullableCreateTestCaseV3Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTestCaseV3Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


