/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateTestCaseV3RequestStepsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTestCaseV3RequestStepsInner{}

// CreateTestCaseV3RequestStepsInner 步骤
type CreateTestCaseV3RequestStepsInner struct {
	// 步骤内容
	Desc *string `json:"desc,omitempty"`
	// 预期结果
	Expected *string `json:"expected,omitempty"`
}

// NewCreateTestCaseV3RequestStepsInner instantiates a new CreateTestCaseV3RequestStepsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTestCaseV3RequestStepsInner() *CreateTestCaseV3RequestStepsInner {
	this := CreateTestCaseV3RequestStepsInner{}
	return &this
}

// NewCreateTestCaseV3RequestStepsInnerWithDefaults instantiates a new CreateTestCaseV3RequestStepsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTestCaseV3RequestStepsInnerWithDefaults() *CreateTestCaseV3RequestStepsInner {
	this := CreateTestCaseV3RequestStepsInner{}
	return &this
}

// GetDesc returns the Desc field value if set, zero value otherwise.
func (o *CreateTestCaseV3RequestStepsInner) GetDesc() string {
	if o == nil || IsNil(o.Desc) {
		var ret string
		return ret
	}
	return *o.Desc
}

// GetDescOk returns a tuple with the Desc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestCaseV3RequestStepsInner) GetDescOk() (*string, bool) {
	if o == nil || IsNil(o.Desc) {
		return nil, false
	}
	return o.Desc, true
}

// HasDesc returns a boolean if a field has been set.
func (o *CreateTestCaseV3RequestStepsInner) HasDesc() bool {
	if o != nil && !IsNil(o.Desc) {
		return true
	}

	return false
}

// SetDesc gets a reference to the given string and assigns it to the Desc field.
func (o *CreateTestCaseV3RequestStepsInner) SetDesc(v string) {
	o.Desc = &v
}

// GetExpected returns the Expected field value if set, zero value otherwise.
func (o *CreateTestCaseV3RequestStepsInner) GetExpected() string {
	if o == nil || IsNil(o.Expected) {
		var ret string
		return ret
	}
	return *o.Expected
}

// GetExpectedOk returns a tuple with the Expected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestCaseV3RequestStepsInner) GetExpectedOk() (*string, bool) {
	if o == nil || IsNil(o.Expected) {
		return nil, false
	}
	return o.Expected, true
}

// HasExpected returns a boolean if a field has been set.
func (o *CreateTestCaseV3RequestStepsInner) HasExpected() bool {
	if o != nil && !IsNil(o.Expected) {
		return true
	}

	return false
}

// SetExpected gets a reference to the given string and assigns it to the Expected field.
func (o *CreateTestCaseV3RequestStepsInner) SetExpected(v string) {
	o.Expected = &v
}

func (o CreateTestCaseV3RequestStepsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTestCaseV3RequestStepsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Desc) {
		toSerialize["desc"] = o.Desc
	}
	if !IsNil(o.Expected) {
		toSerialize["expected"] = o.Expected
	}
	return toSerialize, nil
}

type NullableCreateTestCaseV3RequestStepsInner struct {
	value *CreateTestCaseV3RequestStepsInner
	isSet bool
}

func (v NullableCreateTestCaseV3RequestStepsInner) Get() *CreateTestCaseV3RequestStepsInner {
	return v.value
}

func (v *NullableCreateTestCaseV3RequestStepsInner) Set(val *CreateTestCaseV3RequestStepsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTestCaseV3RequestStepsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTestCaseV3RequestStepsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTestCaseV3RequestStepsInner(val *CreateTestCaseV3RequestStepsInner) *NullableCreateTestCaseV3RequestStepsInner {
	return &NullableCreateTestCaseV3RequestStepsInner{value: val, isSet: true}
}

func (v NullableCreateTestCaseV3RequestStepsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTestCaseV3RequestStepsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


