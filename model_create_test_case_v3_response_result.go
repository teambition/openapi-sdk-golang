/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateTestCaseV3ResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTestCaseV3ResponseResult{}

// CreateTestCaseV3ResponseResult struct for CreateTestCaseV3ResponseResult
type CreateTestCaseV3ResponseResult struct {
	// 完成时间
	Accomplished *string `json:"accomplished,omitempty"`
	// 测试用例创建时间(UTC)
	Created *string `json:"created,omitempty"`
	// 创建者 ID
	CreatorId *string `json:"creatorId,omitempty"`
	// 自定义字段值集合
	Customfields []CreateTestCaseV3ResponseResultCustomfieldsInner `json:"customfields,omitempty"`
	// 执行者ID
	ExecutorId *string `json:"executorId,omitempty"`
	// 工作流状态 ID
	FlowstatusId *string `json:"flowstatusId,omitempty"`
	// 关联的基础用例ID
	FromHubTestcaseId *string `json:"fromHubTestcaseId,omitempty"`
	// 测试用例 ID
	Id *string `json:"id,omitempty"`
	// 是否归档
	IsArchived *string `json:"isArchived,omitempty"`
	// 是否完成
	IsDone *bool `json:"isDone,omitempty"`
	// 用例位置
	Pos *int32 `json:"pos,omitempty"`
	// 前置条件
	Precondition *string `json:"precondition,omitempty"`
	// 项目 ID
	ProjectId *string `json:"projectId,omitempty"`
	// 任务类型 ID
	ScenariofieldconfigId *string `json:"scenariofieldconfigId,omitempty"`
	// 标签
	TagIds []string `json:"tagIds,omitempty"`
	// 测试计划 ID
	TestplanId *string `json:"testplanId,omitempty"`
	// 用例名称
	Title *string `json:"title,omitempty"`
	// 短ID
	UniqueId *int32 `json:"uniqueId,omitempty"`
	// 测试用例更新时间(UTC)
	Updated *string `json:"updated,omitempty"`
}

// NewCreateTestCaseV3ResponseResult instantiates a new CreateTestCaseV3ResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTestCaseV3ResponseResult() *CreateTestCaseV3ResponseResult {
	this := CreateTestCaseV3ResponseResult{}
	return &this
}

// NewCreateTestCaseV3ResponseResultWithDefaults instantiates a new CreateTestCaseV3ResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTestCaseV3ResponseResultWithDefaults() *CreateTestCaseV3ResponseResult {
	this := CreateTestCaseV3ResponseResult{}
	return &this
}

// GetAccomplished returns the Accomplished field value if set, zero value otherwise.
func (o *CreateTestCaseV3ResponseResult) GetAccomplished() string {
	if o == nil || IsNil(o.Accomplished) {
		var ret string
		return ret
	}
	return *o.Accomplished
}

// GetAccomplishedOk returns a tuple with the Accomplished field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestCaseV3ResponseResult) GetAccomplishedOk() (*string, bool) {
	if o == nil || IsNil(o.Accomplished) {
		return nil, false
	}
	return o.Accomplished, true
}

// HasAccomplished returns a boolean if a field has been set.
func (o *CreateTestCaseV3ResponseResult) HasAccomplished() bool {
	if o != nil && !IsNil(o.Accomplished) {
		return true
	}

	return false
}

// SetAccomplished gets a reference to the given string and assigns it to the Accomplished field.
func (o *CreateTestCaseV3ResponseResult) SetAccomplished(v string) {
	o.Accomplished = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *CreateTestCaseV3ResponseResult) GetCreated() string {
	if o == nil || IsNil(o.Created) {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestCaseV3ResponseResult) GetCreatedOk() (*string, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *CreateTestCaseV3ResponseResult) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *CreateTestCaseV3ResponseResult) SetCreated(v string) {
	o.Created = &v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise.
func (o *CreateTestCaseV3ResponseResult) GetCreatorId() string {
	if o == nil || IsNil(o.CreatorId) {
		var ret string
		return ret
	}
	return *o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestCaseV3ResponseResult) GetCreatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorId) {
		return nil, false
	}
	return o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *CreateTestCaseV3ResponseResult) HasCreatorId() bool {
	if o != nil && !IsNil(o.CreatorId) {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given string and assigns it to the CreatorId field.
func (o *CreateTestCaseV3ResponseResult) SetCreatorId(v string) {
	o.CreatorId = &v
}

// GetCustomfields returns the Customfields field value if set, zero value otherwise.
func (o *CreateTestCaseV3ResponseResult) GetCustomfields() []CreateTestCaseV3ResponseResultCustomfieldsInner {
	if o == nil || IsNil(o.Customfields) {
		var ret []CreateTestCaseV3ResponseResultCustomfieldsInner
		return ret
	}
	return o.Customfields
}

// GetCustomfieldsOk returns a tuple with the Customfields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestCaseV3ResponseResult) GetCustomfieldsOk() ([]CreateTestCaseV3ResponseResultCustomfieldsInner, bool) {
	if o == nil || IsNil(o.Customfields) {
		return nil, false
	}
	return o.Customfields, true
}

// HasCustomfields returns a boolean if a field has been set.
func (o *CreateTestCaseV3ResponseResult) HasCustomfields() bool {
	if o != nil && !IsNil(o.Customfields) {
		return true
	}

	return false
}

// SetCustomfields gets a reference to the given []CreateTestCaseV3ResponseResultCustomfieldsInner and assigns it to the Customfields field.
func (o *CreateTestCaseV3ResponseResult) SetCustomfields(v []CreateTestCaseV3ResponseResultCustomfieldsInner) {
	o.Customfields = v
}

// GetExecutorId returns the ExecutorId field value if set, zero value otherwise.
func (o *CreateTestCaseV3ResponseResult) GetExecutorId() string {
	if o == nil || IsNil(o.ExecutorId) {
		var ret string
		return ret
	}
	return *o.ExecutorId
}

// GetExecutorIdOk returns a tuple with the ExecutorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestCaseV3ResponseResult) GetExecutorIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExecutorId) {
		return nil, false
	}
	return o.ExecutorId, true
}

// HasExecutorId returns a boolean if a field has been set.
func (o *CreateTestCaseV3ResponseResult) HasExecutorId() bool {
	if o != nil && !IsNil(o.ExecutorId) {
		return true
	}

	return false
}

// SetExecutorId gets a reference to the given string and assigns it to the ExecutorId field.
func (o *CreateTestCaseV3ResponseResult) SetExecutorId(v string) {
	o.ExecutorId = &v
}

// GetFlowstatusId returns the FlowstatusId field value if set, zero value otherwise.
func (o *CreateTestCaseV3ResponseResult) GetFlowstatusId() string {
	if o == nil || IsNil(o.FlowstatusId) {
		var ret string
		return ret
	}
	return *o.FlowstatusId
}

// GetFlowstatusIdOk returns a tuple with the FlowstatusId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestCaseV3ResponseResult) GetFlowstatusIdOk() (*string, bool) {
	if o == nil || IsNil(o.FlowstatusId) {
		return nil, false
	}
	return o.FlowstatusId, true
}

// HasFlowstatusId returns a boolean if a field has been set.
func (o *CreateTestCaseV3ResponseResult) HasFlowstatusId() bool {
	if o != nil && !IsNil(o.FlowstatusId) {
		return true
	}

	return false
}

// SetFlowstatusId gets a reference to the given string and assigns it to the FlowstatusId field.
func (o *CreateTestCaseV3ResponseResult) SetFlowstatusId(v string) {
	o.FlowstatusId = &v
}

// GetFromHubTestcaseId returns the FromHubTestcaseId field value if set, zero value otherwise.
func (o *CreateTestCaseV3ResponseResult) GetFromHubTestcaseId() string {
	if o == nil || IsNil(o.FromHubTestcaseId) {
		var ret string
		return ret
	}
	return *o.FromHubTestcaseId
}

// GetFromHubTestcaseIdOk returns a tuple with the FromHubTestcaseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestCaseV3ResponseResult) GetFromHubTestcaseIdOk() (*string, bool) {
	if o == nil || IsNil(o.FromHubTestcaseId) {
		return nil, false
	}
	return o.FromHubTestcaseId, true
}

// HasFromHubTestcaseId returns a boolean if a field has been set.
func (o *CreateTestCaseV3ResponseResult) HasFromHubTestcaseId() bool {
	if o != nil && !IsNil(o.FromHubTestcaseId) {
		return true
	}

	return false
}

// SetFromHubTestcaseId gets a reference to the given string and assigns it to the FromHubTestcaseId field.
func (o *CreateTestCaseV3ResponseResult) SetFromHubTestcaseId(v string) {
	o.FromHubTestcaseId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CreateTestCaseV3ResponseResult) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestCaseV3ResponseResult) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CreateTestCaseV3ResponseResult) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CreateTestCaseV3ResponseResult) SetId(v string) {
	o.Id = &v
}

// GetIsArchived returns the IsArchived field value if set, zero value otherwise.
func (o *CreateTestCaseV3ResponseResult) GetIsArchived() string {
	if o == nil || IsNil(o.IsArchived) {
		var ret string
		return ret
	}
	return *o.IsArchived
}

// GetIsArchivedOk returns a tuple with the IsArchived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestCaseV3ResponseResult) GetIsArchivedOk() (*string, bool) {
	if o == nil || IsNil(o.IsArchived) {
		return nil, false
	}
	return o.IsArchived, true
}

// HasIsArchived returns a boolean if a field has been set.
func (o *CreateTestCaseV3ResponseResult) HasIsArchived() bool {
	if o != nil && !IsNil(o.IsArchived) {
		return true
	}

	return false
}

// SetIsArchived gets a reference to the given string and assigns it to the IsArchived field.
func (o *CreateTestCaseV3ResponseResult) SetIsArchived(v string) {
	o.IsArchived = &v
}

// GetIsDone returns the IsDone field value if set, zero value otherwise.
func (o *CreateTestCaseV3ResponseResult) GetIsDone() bool {
	if o == nil || IsNil(o.IsDone) {
		var ret bool
		return ret
	}
	return *o.IsDone
}

// GetIsDoneOk returns a tuple with the IsDone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestCaseV3ResponseResult) GetIsDoneOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDone) {
		return nil, false
	}
	return o.IsDone, true
}

// HasIsDone returns a boolean if a field has been set.
func (o *CreateTestCaseV3ResponseResult) HasIsDone() bool {
	if o != nil && !IsNil(o.IsDone) {
		return true
	}

	return false
}

// SetIsDone gets a reference to the given bool and assigns it to the IsDone field.
func (o *CreateTestCaseV3ResponseResult) SetIsDone(v bool) {
	o.IsDone = &v
}

// GetPos returns the Pos field value if set, zero value otherwise.
func (o *CreateTestCaseV3ResponseResult) GetPos() int32 {
	if o == nil || IsNil(o.Pos) {
		var ret int32
		return ret
	}
	return *o.Pos
}

// GetPosOk returns a tuple with the Pos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestCaseV3ResponseResult) GetPosOk() (*int32, bool) {
	if o == nil || IsNil(o.Pos) {
		return nil, false
	}
	return o.Pos, true
}

// HasPos returns a boolean if a field has been set.
func (o *CreateTestCaseV3ResponseResult) HasPos() bool {
	if o != nil && !IsNil(o.Pos) {
		return true
	}

	return false
}

// SetPos gets a reference to the given int32 and assigns it to the Pos field.
func (o *CreateTestCaseV3ResponseResult) SetPos(v int32) {
	o.Pos = &v
}

// GetPrecondition returns the Precondition field value if set, zero value otherwise.
func (o *CreateTestCaseV3ResponseResult) GetPrecondition() string {
	if o == nil || IsNil(o.Precondition) {
		var ret string
		return ret
	}
	return *o.Precondition
}

// GetPreconditionOk returns a tuple with the Precondition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestCaseV3ResponseResult) GetPreconditionOk() (*string, bool) {
	if o == nil || IsNil(o.Precondition) {
		return nil, false
	}
	return o.Precondition, true
}

// HasPrecondition returns a boolean if a field has been set.
func (o *CreateTestCaseV3ResponseResult) HasPrecondition() bool {
	if o != nil && !IsNil(o.Precondition) {
		return true
	}

	return false
}

// SetPrecondition gets a reference to the given string and assigns it to the Precondition field.
func (o *CreateTestCaseV3ResponseResult) SetPrecondition(v string) {
	o.Precondition = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *CreateTestCaseV3ResponseResult) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId) {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestCaseV3ResponseResult) GetProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *CreateTestCaseV3ResponseResult) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *CreateTestCaseV3ResponseResult) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetScenariofieldconfigId returns the ScenariofieldconfigId field value if set, zero value otherwise.
func (o *CreateTestCaseV3ResponseResult) GetScenariofieldconfigId() string {
	if o == nil || IsNil(o.ScenariofieldconfigId) {
		var ret string
		return ret
	}
	return *o.ScenariofieldconfigId
}

// GetScenariofieldconfigIdOk returns a tuple with the ScenariofieldconfigId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestCaseV3ResponseResult) GetScenariofieldconfigIdOk() (*string, bool) {
	if o == nil || IsNil(o.ScenariofieldconfigId) {
		return nil, false
	}
	return o.ScenariofieldconfigId, true
}

// HasScenariofieldconfigId returns a boolean if a field has been set.
func (o *CreateTestCaseV3ResponseResult) HasScenariofieldconfigId() bool {
	if o != nil && !IsNil(o.ScenariofieldconfigId) {
		return true
	}

	return false
}

// SetScenariofieldconfigId gets a reference to the given string and assigns it to the ScenariofieldconfigId field.
func (o *CreateTestCaseV3ResponseResult) SetScenariofieldconfigId(v string) {
	o.ScenariofieldconfigId = &v
}

// GetTagIds returns the TagIds field value if set, zero value otherwise.
func (o *CreateTestCaseV3ResponseResult) GetTagIds() []string {
	if o == nil || IsNil(o.TagIds) {
		var ret []string
		return ret
	}
	return o.TagIds
}

// GetTagIdsOk returns a tuple with the TagIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestCaseV3ResponseResult) GetTagIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.TagIds) {
		return nil, false
	}
	return o.TagIds, true
}

// HasTagIds returns a boolean if a field has been set.
func (o *CreateTestCaseV3ResponseResult) HasTagIds() bool {
	if o != nil && !IsNil(o.TagIds) {
		return true
	}

	return false
}

// SetTagIds gets a reference to the given []string and assigns it to the TagIds field.
func (o *CreateTestCaseV3ResponseResult) SetTagIds(v []string) {
	o.TagIds = v
}

// GetTestplanId returns the TestplanId field value if set, zero value otherwise.
func (o *CreateTestCaseV3ResponseResult) GetTestplanId() string {
	if o == nil || IsNil(o.TestplanId) {
		var ret string
		return ret
	}
	return *o.TestplanId
}

// GetTestplanIdOk returns a tuple with the TestplanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestCaseV3ResponseResult) GetTestplanIdOk() (*string, bool) {
	if o == nil || IsNil(o.TestplanId) {
		return nil, false
	}
	return o.TestplanId, true
}

// HasTestplanId returns a boolean if a field has been set.
func (o *CreateTestCaseV3ResponseResult) HasTestplanId() bool {
	if o != nil && !IsNil(o.TestplanId) {
		return true
	}

	return false
}

// SetTestplanId gets a reference to the given string and assigns it to the TestplanId field.
func (o *CreateTestCaseV3ResponseResult) SetTestplanId(v string) {
	o.TestplanId = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *CreateTestCaseV3ResponseResult) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestCaseV3ResponseResult) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *CreateTestCaseV3ResponseResult) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *CreateTestCaseV3ResponseResult) SetTitle(v string) {
	o.Title = &v
}

// GetUniqueId returns the UniqueId field value if set, zero value otherwise.
func (o *CreateTestCaseV3ResponseResult) GetUniqueId() int32 {
	if o == nil || IsNil(o.UniqueId) {
		var ret int32
		return ret
	}
	return *o.UniqueId
}

// GetUniqueIdOk returns a tuple with the UniqueId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestCaseV3ResponseResult) GetUniqueIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UniqueId) {
		return nil, false
	}
	return o.UniqueId, true
}

// HasUniqueId returns a boolean if a field has been set.
func (o *CreateTestCaseV3ResponseResult) HasUniqueId() bool {
	if o != nil && !IsNil(o.UniqueId) {
		return true
	}

	return false
}

// SetUniqueId gets a reference to the given int32 and assigns it to the UniqueId field.
func (o *CreateTestCaseV3ResponseResult) SetUniqueId(v int32) {
	o.UniqueId = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *CreateTestCaseV3ResponseResult) GetUpdated() string {
	if o == nil || IsNil(o.Updated) {
		var ret string
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestCaseV3ResponseResult) GetUpdatedOk() (*string, bool) {
	if o == nil || IsNil(o.Updated) {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *CreateTestCaseV3ResponseResult) HasUpdated() bool {
	if o != nil && !IsNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given string and assigns it to the Updated field.
func (o *CreateTestCaseV3ResponseResult) SetUpdated(v string) {
	o.Updated = &v
}

func (o CreateTestCaseV3ResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTestCaseV3ResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Accomplished) {
		toSerialize["accomplished"] = o.Accomplished
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.CreatorId) {
		toSerialize["creatorId"] = o.CreatorId
	}
	if !IsNil(o.Customfields) {
		toSerialize["customfields"] = o.Customfields
	}
	if !IsNil(o.ExecutorId) {
		toSerialize["executorId"] = o.ExecutorId
	}
	if !IsNil(o.FlowstatusId) {
		toSerialize["flowstatusId"] = o.FlowstatusId
	}
	if !IsNil(o.FromHubTestcaseId) {
		toSerialize["fromHubTestcaseId"] = o.FromHubTestcaseId
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.IsArchived) {
		toSerialize["isArchived"] = o.IsArchived
	}
	if !IsNil(o.IsDone) {
		toSerialize["isDone"] = o.IsDone
	}
	if !IsNil(o.Pos) {
		toSerialize["pos"] = o.Pos
	}
	if !IsNil(o.Precondition) {
		toSerialize["precondition"] = o.Precondition
	}
	if !IsNil(o.ProjectId) {
		toSerialize["projectId"] = o.ProjectId
	}
	if !IsNil(o.ScenariofieldconfigId) {
		toSerialize["scenariofieldconfigId"] = o.ScenariofieldconfigId
	}
	if !IsNil(o.TagIds) {
		toSerialize["tagIds"] = o.TagIds
	}
	if !IsNil(o.TestplanId) {
		toSerialize["testplanId"] = o.TestplanId
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.UniqueId) {
		toSerialize["uniqueId"] = o.UniqueId
	}
	if !IsNil(o.Updated) {
		toSerialize["updated"] = o.Updated
	}
	return toSerialize, nil
}

type NullableCreateTestCaseV3ResponseResult struct {
	value *CreateTestCaseV3ResponseResult
	isSet bool
}

func (v NullableCreateTestCaseV3ResponseResult) Get() *CreateTestCaseV3ResponseResult {
	return v.value
}

func (v *NullableCreateTestCaseV3ResponseResult) Set(val *CreateTestCaseV3ResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTestCaseV3ResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTestCaseV3ResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTestCaseV3ResponseResult(val *CreateTestCaseV3ResponseResult) *NullableCreateTestCaseV3ResponseResult {
	return &NullableCreateTestCaseV3ResponseResult{value: val, isSet: true}
}

func (v NullableCreateTestCaseV3ResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTestCaseV3ResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


