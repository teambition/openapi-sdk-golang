/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the CreateTestPlanGroupResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTestPlanGroupResponseResult{}

// CreateTestPlanGroupResponseResult struct for CreateTestPlanGroupResponseResult
type CreateTestPlanGroupResponseResult struct {
	// 分组 ID
	Id *string `json:"id,omitempty"`
	// 分组名称
	Name *string `json:"name,omitempty"`
	// 分组创建者 ID
	CreatorId *string `json:"creatorId,omitempty"`
	// 父分组 IDs
	AncestorIds []string `json:"ancestorIds,omitempty"`
	// 是否是根目录
	IsRoot *string `json:"isRoot,omitempty"`
	// 分组创建时间(UTC)
	Created *time.Time `json:"created,omitempty"`
	// 分组更新时间(UTC)
	Updated *time.Time `json:"updated,omitempty"`
}

// NewCreateTestPlanGroupResponseResult instantiates a new CreateTestPlanGroupResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTestPlanGroupResponseResult() *CreateTestPlanGroupResponseResult {
	this := CreateTestPlanGroupResponseResult{}
	return &this
}

// NewCreateTestPlanGroupResponseResultWithDefaults instantiates a new CreateTestPlanGroupResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTestPlanGroupResponseResultWithDefaults() *CreateTestPlanGroupResponseResult {
	this := CreateTestPlanGroupResponseResult{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CreateTestPlanGroupResponseResult) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestPlanGroupResponseResult) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CreateTestPlanGroupResponseResult) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CreateTestPlanGroupResponseResult) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateTestPlanGroupResponseResult) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestPlanGroupResponseResult) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateTestPlanGroupResponseResult) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateTestPlanGroupResponseResult) SetName(v string) {
	o.Name = &v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise.
func (o *CreateTestPlanGroupResponseResult) GetCreatorId() string {
	if o == nil || IsNil(o.CreatorId) {
		var ret string
		return ret
	}
	return *o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestPlanGroupResponseResult) GetCreatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorId) {
		return nil, false
	}
	return o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *CreateTestPlanGroupResponseResult) HasCreatorId() bool {
	if o != nil && !IsNil(o.CreatorId) {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given string and assigns it to the CreatorId field.
func (o *CreateTestPlanGroupResponseResult) SetCreatorId(v string) {
	o.CreatorId = &v
}

// GetAncestorIds returns the AncestorIds field value if set, zero value otherwise.
func (o *CreateTestPlanGroupResponseResult) GetAncestorIds() []string {
	if o == nil || IsNil(o.AncestorIds) {
		var ret []string
		return ret
	}
	return o.AncestorIds
}

// GetAncestorIdsOk returns a tuple with the AncestorIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestPlanGroupResponseResult) GetAncestorIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.AncestorIds) {
		return nil, false
	}
	return o.AncestorIds, true
}

// HasAncestorIds returns a boolean if a field has been set.
func (o *CreateTestPlanGroupResponseResult) HasAncestorIds() bool {
	if o != nil && !IsNil(o.AncestorIds) {
		return true
	}

	return false
}

// SetAncestorIds gets a reference to the given []string and assigns it to the AncestorIds field.
func (o *CreateTestPlanGroupResponseResult) SetAncestorIds(v []string) {
	o.AncestorIds = v
}

// GetIsRoot returns the IsRoot field value if set, zero value otherwise.
func (o *CreateTestPlanGroupResponseResult) GetIsRoot() string {
	if o == nil || IsNil(o.IsRoot) {
		var ret string
		return ret
	}
	return *o.IsRoot
}

// GetIsRootOk returns a tuple with the IsRoot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestPlanGroupResponseResult) GetIsRootOk() (*string, bool) {
	if o == nil || IsNil(o.IsRoot) {
		return nil, false
	}
	return o.IsRoot, true
}

// HasIsRoot returns a boolean if a field has been set.
func (o *CreateTestPlanGroupResponseResult) HasIsRoot() bool {
	if o != nil && !IsNil(o.IsRoot) {
		return true
	}

	return false
}

// SetIsRoot gets a reference to the given string and assigns it to the IsRoot field.
func (o *CreateTestPlanGroupResponseResult) SetIsRoot(v string) {
	o.IsRoot = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *CreateTestPlanGroupResponseResult) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestPlanGroupResponseResult) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *CreateTestPlanGroupResponseResult) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *CreateTestPlanGroupResponseResult) SetCreated(v time.Time) {
	o.Created = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *CreateTestPlanGroupResponseResult) GetUpdated() time.Time {
	if o == nil || IsNil(o.Updated) {
		var ret time.Time
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestPlanGroupResponseResult) GetUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Updated) {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *CreateTestPlanGroupResponseResult) HasUpdated() bool {
	if o != nil && !IsNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given time.Time and assigns it to the Updated field.
func (o *CreateTestPlanGroupResponseResult) SetUpdated(v time.Time) {
	o.Updated = &v
}

func (o CreateTestPlanGroupResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTestPlanGroupResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.CreatorId) {
		toSerialize["creatorId"] = o.CreatorId
	}
	if !IsNil(o.AncestorIds) {
		toSerialize["ancestorIds"] = o.AncestorIds
	}
	if !IsNil(o.IsRoot) {
		toSerialize["isRoot"] = o.IsRoot
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.Updated) {
		toSerialize["updated"] = o.Updated
	}
	return toSerialize, nil
}

type NullableCreateTestPlanGroupResponseResult struct {
	value *CreateTestPlanGroupResponseResult
	isSet bool
}

func (v NullableCreateTestPlanGroupResponseResult) Get() *CreateTestPlanGroupResponseResult {
	return v.value
}

func (v *NullableCreateTestPlanGroupResponseResult) Set(val *CreateTestPlanGroupResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTestPlanGroupResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTestPlanGroupResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTestPlanGroupResponseResult(val *CreateTestPlanGroupResponseResult) *NullableCreateTestPlanGroupResponseResult {
	return &NullableCreateTestPlanGroupResponseResult{value: val, isSet: true}
}

func (v NullableCreateTestPlanGroupResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTestPlanGroupResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


