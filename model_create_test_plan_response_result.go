/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateTestPlanResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTestPlanResponseResult{}

// CreateTestPlanResponseResult struct for CreateTestPlanResponseResult
type CreateTestPlanResponseResult struct {
	// 测试计划 ID
	Id *string `json:"id,omitempty"`
	// 测试计划名称
	Name *string `json:"name,omitempty"`
	// 创建者 ID
	CreatorId *string `json:"creatorId,omitempty"`
	// 项目 ID
	ProjectId *string `json:"projectId,omitempty"`
	// 测试计划开始时间(UTC)
	StartDate *string `json:"startDate,omitempty"`
	// 测试计划结束时间(UTC)
	DueDate *string `json:"dueDate,omitempty"`
	// 是否删除
	IsDeleted *bool `json:"isDeleted,omitempty"`
	// 是否归档
	IsSuspended *bool `json:"isSuspended,omitempty"`
	// 归档者 ID
	SuspendedByUserId *string `json:"suspendedByUserId,omitempty"`
	// 测试计划归档时间(UTC)
	SuspendedDate *string `json:"suspendedDate,omitempty"`
	// 默认分组 ID
	DefaultGroupId *string `json:"defaultGroupId,omitempty"`
	// 测试用例创建时间(UTC)
	Created *string `json:"created,omitempty"`
	// 测试用例更新时间(UTC)
	Updated *string `json:"updated,omitempty"`
}

// NewCreateTestPlanResponseResult instantiates a new CreateTestPlanResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTestPlanResponseResult() *CreateTestPlanResponseResult {
	this := CreateTestPlanResponseResult{}
	return &this
}

// NewCreateTestPlanResponseResultWithDefaults instantiates a new CreateTestPlanResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTestPlanResponseResultWithDefaults() *CreateTestPlanResponseResult {
	this := CreateTestPlanResponseResult{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CreateTestPlanResponseResult) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestPlanResponseResult) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CreateTestPlanResponseResult) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CreateTestPlanResponseResult) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateTestPlanResponseResult) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestPlanResponseResult) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateTestPlanResponseResult) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateTestPlanResponseResult) SetName(v string) {
	o.Name = &v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise.
func (o *CreateTestPlanResponseResult) GetCreatorId() string {
	if o == nil || IsNil(o.CreatorId) {
		var ret string
		return ret
	}
	return *o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestPlanResponseResult) GetCreatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorId) {
		return nil, false
	}
	return o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *CreateTestPlanResponseResult) HasCreatorId() bool {
	if o != nil && !IsNil(o.CreatorId) {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given string and assigns it to the CreatorId field.
func (o *CreateTestPlanResponseResult) SetCreatorId(v string) {
	o.CreatorId = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *CreateTestPlanResponseResult) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId) {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestPlanResponseResult) GetProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *CreateTestPlanResponseResult) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *CreateTestPlanResponseResult) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *CreateTestPlanResponseResult) GetStartDate() string {
	if o == nil || IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestPlanResponseResult) GetStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *CreateTestPlanResponseResult) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *CreateTestPlanResponseResult) SetStartDate(v string) {
	o.StartDate = &v
}

// GetDueDate returns the DueDate field value if set, zero value otherwise.
func (o *CreateTestPlanResponseResult) GetDueDate() string {
	if o == nil || IsNil(o.DueDate) {
		var ret string
		return ret
	}
	return *o.DueDate
}

// GetDueDateOk returns a tuple with the DueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestPlanResponseResult) GetDueDateOk() (*string, bool) {
	if o == nil || IsNil(o.DueDate) {
		return nil, false
	}
	return o.DueDate, true
}

// HasDueDate returns a boolean if a field has been set.
func (o *CreateTestPlanResponseResult) HasDueDate() bool {
	if o != nil && !IsNil(o.DueDate) {
		return true
	}

	return false
}

// SetDueDate gets a reference to the given string and assigns it to the DueDate field.
func (o *CreateTestPlanResponseResult) SetDueDate(v string) {
	o.DueDate = &v
}

// GetIsDeleted returns the IsDeleted field value if set, zero value otherwise.
func (o *CreateTestPlanResponseResult) GetIsDeleted() bool {
	if o == nil || IsNil(o.IsDeleted) {
		var ret bool
		return ret
	}
	return *o.IsDeleted
}

// GetIsDeletedOk returns a tuple with the IsDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestPlanResponseResult) GetIsDeletedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDeleted) {
		return nil, false
	}
	return o.IsDeleted, true
}

// HasIsDeleted returns a boolean if a field has been set.
func (o *CreateTestPlanResponseResult) HasIsDeleted() bool {
	if o != nil && !IsNil(o.IsDeleted) {
		return true
	}

	return false
}

// SetIsDeleted gets a reference to the given bool and assigns it to the IsDeleted field.
func (o *CreateTestPlanResponseResult) SetIsDeleted(v bool) {
	o.IsDeleted = &v
}

// GetIsSuspended returns the IsSuspended field value if set, zero value otherwise.
func (o *CreateTestPlanResponseResult) GetIsSuspended() bool {
	if o == nil || IsNil(o.IsSuspended) {
		var ret bool
		return ret
	}
	return *o.IsSuspended
}

// GetIsSuspendedOk returns a tuple with the IsSuspended field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestPlanResponseResult) GetIsSuspendedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSuspended) {
		return nil, false
	}
	return o.IsSuspended, true
}

// HasIsSuspended returns a boolean if a field has been set.
func (o *CreateTestPlanResponseResult) HasIsSuspended() bool {
	if o != nil && !IsNil(o.IsSuspended) {
		return true
	}

	return false
}

// SetIsSuspended gets a reference to the given bool and assigns it to the IsSuspended field.
func (o *CreateTestPlanResponseResult) SetIsSuspended(v bool) {
	o.IsSuspended = &v
}

// GetSuspendedByUserId returns the SuspendedByUserId field value if set, zero value otherwise.
func (o *CreateTestPlanResponseResult) GetSuspendedByUserId() string {
	if o == nil || IsNil(o.SuspendedByUserId) {
		var ret string
		return ret
	}
	return *o.SuspendedByUserId
}

// GetSuspendedByUserIdOk returns a tuple with the SuspendedByUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestPlanResponseResult) GetSuspendedByUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.SuspendedByUserId) {
		return nil, false
	}
	return o.SuspendedByUserId, true
}

// HasSuspendedByUserId returns a boolean if a field has been set.
func (o *CreateTestPlanResponseResult) HasSuspendedByUserId() bool {
	if o != nil && !IsNil(o.SuspendedByUserId) {
		return true
	}

	return false
}

// SetSuspendedByUserId gets a reference to the given string and assigns it to the SuspendedByUserId field.
func (o *CreateTestPlanResponseResult) SetSuspendedByUserId(v string) {
	o.SuspendedByUserId = &v
}

// GetSuspendedDate returns the SuspendedDate field value if set, zero value otherwise.
func (o *CreateTestPlanResponseResult) GetSuspendedDate() string {
	if o == nil || IsNil(o.SuspendedDate) {
		var ret string
		return ret
	}
	return *o.SuspendedDate
}

// GetSuspendedDateOk returns a tuple with the SuspendedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestPlanResponseResult) GetSuspendedDateOk() (*string, bool) {
	if o == nil || IsNil(o.SuspendedDate) {
		return nil, false
	}
	return o.SuspendedDate, true
}

// HasSuspendedDate returns a boolean if a field has been set.
func (o *CreateTestPlanResponseResult) HasSuspendedDate() bool {
	if o != nil && !IsNil(o.SuspendedDate) {
		return true
	}

	return false
}

// SetSuspendedDate gets a reference to the given string and assigns it to the SuspendedDate field.
func (o *CreateTestPlanResponseResult) SetSuspendedDate(v string) {
	o.SuspendedDate = &v
}

// GetDefaultGroupId returns the DefaultGroupId field value if set, zero value otherwise.
func (o *CreateTestPlanResponseResult) GetDefaultGroupId() string {
	if o == nil || IsNil(o.DefaultGroupId) {
		var ret string
		return ret
	}
	return *o.DefaultGroupId
}

// GetDefaultGroupIdOk returns a tuple with the DefaultGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestPlanResponseResult) GetDefaultGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultGroupId) {
		return nil, false
	}
	return o.DefaultGroupId, true
}

// HasDefaultGroupId returns a boolean if a field has been set.
func (o *CreateTestPlanResponseResult) HasDefaultGroupId() bool {
	if o != nil && !IsNil(o.DefaultGroupId) {
		return true
	}

	return false
}

// SetDefaultGroupId gets a reference to the given string and assigns it to the DefaultGroupId field.
func (o *CreateTestPlanResponseResult) SetDefaultGroupId(v string) {
	o.DefaultGroupId = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *CreateTestPlanResponseResult) GetCreated() string {
	if o == nil || IsNil(o.Created) {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestPlanResponseResult) GetCreatedOk() (*string, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *CreateTestPlanResponseResult) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *CreateTestPlanResponseResult) SetCreated(v string) {
	o.Created = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *CreateTestPlanResponseResult) GetUpdated() string {
	if o == nil || IsNil(o.Updated) {
		var ret string
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTestPlanResponseResult) GetUpdatedOk() (*string, bool) {
	if o == nil || IsNil(o.Updated) {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *CreateTestPlanResponseResult) HasUpdated() bool {
	if o != nil && !IsNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given string and assigns it to the Updated field.
func (o *CreateTestPlanResponseResult) SetUpdated(v string) {
	o.Updated = &v
}

func (o CreateTestPlanResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTestPlanResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.CreatorId) {
		toSerialize["creatorId"] = o.CreatorId
	}
	if !IsNil(o.ProjectId) {
		toSerialize["projectId"] = o.ProjectId
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.DueDate) {
		toSerialize["dueDate"] = o.DueDate
	}
	if !IsNil(o.IsDeleted) {
		toSerialize["isDeleted"] = o.IsDeleted
	}
	if !IsNil(o.IsSuspended) {
		toSerialize["isSuspended"] = o.IsSuspended
	}
	if !IsNil(o.SuspendedByUserId) {
		toSerialize["suspendedByUserId"] = o.SuspendedByUserId
	}
	if !IsNil(o.SuspendedDate) {
		toSerialize["suspendedDate"] = o.SuspendedDate
	}
	if !IsNil(o.DefaultGroupId) {
		toSerialize["defaultGroupId"] = o.DefaultGroupId
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.Updated) {
		toSerialize["updated"] = o.Updated
	}
	return toSerialize, nil
}

type NullableCreateTestPlanResponseResult struct {
	value *CreateTestPlanResponseResult
	isSet bool
}

func (v NullableCreateTestPlanResponseResult) Get() *CreateTestPlanResponseResult {
	return v.value
}

func (v *NullableCreateTestPlanResponseResult) Set(val *CreateTestPlanResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTestPlanResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTestPlanResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTestPlanResponseResult(val *CreateTestPlanResponseResult) *NullableCreateTestPlanResponseResult {
	return &NullableCreateTestPlanResponseResult{value: val, isSet: true}
}

func (v NullableCreateTestPlanResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTestPlanResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


