/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateUploadTokenV3Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateUploadTokenV3Request{}

// CreateUploadTokenV3Request struct for CreateUploadTokenV3Request
type CreateUploadTokenV3Request struct {
	// 文件的业务使用范围 `${object}:${id}`，如：`task:628cd5bff0396403950f3fdb`
	Scope *string `json:"scope,omitempty"`
	// 文件大小，单位 byte
	FileSize *int32 `json:"fileSize,omitempty"`
	// 文件的 mimeType，如：`image/jpeg`
	FileType *string `json:"fileType,omitempty"`
	// 文件名，包含扩展名，如：`example.jpg`
	FileName *string `json:"fileName,omitempty"`
	// 可选 `rich-text`, `rich-text-attachment`, `attachment`, `work`
	Category *string `json:"category,omitempty"`
}

// NewCreateUploadTokenV3Request instantiates a new CreateUploadTokenV3Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateUploadTokenV3Request() *CreateUploadTokenV3Request {
	this := CreateUploadTokenV3Request{}
	return &this
}

// NewCreateUploadTokenV3RequestWithDefaults instantiates a new CreateUploadTokenV3Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateUploadTokenV3RequestWithDefaults() *CreateUploadTokenV3Request {
	this := CreateUploadTokenV3Request{}
	return &this
}

// GetScope returns the Scope field value if set, zero value otherwise.
func (o *CreateUploadTokenV3Request) GetScope() string {
	if o == nil || IsNil(o.Scope) {
		var ret string
		return ret
	}
	return *o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUploadTokenV3Request) GetScopeOk() (*string, bool) {
	if o == nil || IsNil(o.Scope) {
		return nil, false
	}
	return o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *CreateUploadTokenV3Request) HasScope() bool {
	if o != nil && !IsNil(o.Scope) {
		return true
	}

	return false
}

// SetScope gets a reference to the given string and assigns it to the Scope field.
func (o *CreateUploadTokenV3Request) SetScope(v string) {
	o.Scope = &v
}

// GetFileSize returns the FileSize field value if set, zero value otherwise.
func (o *CreateUploadTokenV3Request) GetFileSize() int32 {
	if o == nil || IsNil(o.FileSize) {
		var ret int32
		return ret
	}
	return *o.FileSize
}

// GetFileSizeOk returns a tuple with the FileSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUploadTokenV3Request) GetFileSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.FileSize) {
		return nil, false
	}
	return o.FileSize, true
}

// HasFileSize returns a boolean if a field has been set.
func (o *CreateUploadTokenV3Request) HasFileSize() bool {
	if o != nil && !IsNil(o.FileSize) {
		return true
	}

	return false
}

// SetFileSize gets a reference to the given int32 and assigns it to the FileSize field.
func (o *CreateUploadTokenV3Request) SetFileSize(v int32) {
	o.FileSize = &v
}

// GetFileType returns the FileType field value if set, zero value otherwise.
func (o *CreateUploadTokenV3Request) GetFileType() string {
	if o == nil || IsNil(o.FileType) {
		var ret string
		return ret
	}
	return *o.FileType
}

// GetFileTypeOk returns a tuple with the FileType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUploadTokenV3Request) GetFileTypeOk() (*string, bool) {
	if o == nil || IsNil(o.FileType) {
		return nil, false
	}
	return o.FileType, true
}

// HasFileType returns a boolean if a field has been set.
func (o *CreateUploadTokenV3Request) HasFileType() bool {
	if o != nil && !IsNil(o.FileType) {
		return true
	}

	return false
}

// SetFileType gets a reference to the given string and assigns it to the FileType field.
func (o *CreateUploadTokenV3Request) SetFileType(v string) {
	o.FileType = &v
}

// GetFileName returns the FileName field value if set, zero value otherwise.
func (o *CreateUploadTokenV3Request) GetFileName() string {
	if o == nil || IsNil(o.FileName) {
		var ret string
		return ret
	}
	return *o.FileName
}

// GetFileNameOk returns a tuple with the FileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUploadTokenV3Request) GetFileNameOk() (*string, bool) {
	if o == nil || IsNil(o.FileName) {
		return nil, false
	}
	return o.FileName, true
}

// HasFileName returns a boolean if a field has been set.
func (o *CreateUploadTokenV3Request) HasFileName() bool {
	if o != nil && !IsNil(o.FileName) {
		return true
	}

	return false
}

// SetFileName gets a reference to the given string and assigns it to the FileName field.
func (o *CreateUploadTokenV3Request) SetFileName(v string) {
	o.FileName = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *CreateUploadTokenV3Request) GetCategory() string {
	if o == nil || IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUploadTokenV3Request) GetCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *CreateUploadTokenV3Request) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *CreateUploadTokenV3Request) SetCategory(v string) {
	o.Category = &v
}

func (o CreateUploadTokenV3Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateUploadTokenV3Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Scope) {
		toSerialize["scope"] = o.Scope
	}
	if !IsNil(o.FileSize) {
		toSerialize["fileSize"] = o.FileSize
	}
	if !IsNil(o.FileType) {
		toSerialize["fileType"] = o.FileType
	}
	if !IsNil(o.FileName) {
		toSerialize["fileName"] = o.FileName
	}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	return toSerialize, nil
}

type NullableCreateUploadTokenV3Request struct {
	value *CreateUploadTokenV3Request
	isSet bool
}

func (v NullableCreateUploadTokenV3Request) Get() *CreateUploadTokenV3Request {
	return v.value
}

func (v *NullableCreateUploadTokenV3Request) Set(val *CreateUploadTokenV3Request) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateUploadTokenV3Request) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateUploadTokenV3Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateUploadTokenV3Request(val *CreateUploadTokenV3Request) *NullableCreateUploadTokenV3Request {
	return &NullableCreateUploadTokenV3Request{value: val, isSet: true}
}

func (v NullableCreateUploadTokenV3Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateUploadTokenV3Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


