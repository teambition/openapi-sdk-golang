/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateUploadTokenV3ResponseResultSdkCredentials type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateUploadTokenV3ResponseResultSdkCredentials{}

// CreateUploadTokenV3ResponseResultSdkCredentials 临时授权凭证
type CreateUploadTokenV3ResponseResultSdkCredentials struct {
	AccessKeyId *string `json:"accessKeyId,omitempty"`
	SecretAccessKey *string `json:"secretAccessKey,omitempty"`
	SessionToken *string `json:"sessionToken,omitempty"`
}

// NewCreateUploadTokenV3ResponseResultSdkCredentials instantiates a new CreateUploadTokenV3ResponseResultSdkCredentials object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateUploadTokenV3ResponseResultSdkCredentials() *CreateUploadTokenV3ResponseResultSdkCredentials {
	this := CreateUploadTokenV3ResponseResultSdkCredentials{}
	return &this
}

// NewCreateUploadTokenV3ResponseResultSdkCredentialsWithDefaults instantiates a new CreateUploadTokenV3ResponseResultSdkCredentials object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateUploadTokenV3ResponseResultSdkCredentialsWithDefaults() *CreateUploadTokenV3ResponseResultSdkCredentials {
	this := CreateUploadTokenV3ResponseResultSdkCredentials{}
	return &this
}

// GetAccessKeyId returns the AccessKeyId field value if set, zero value otherwise.
func (o *CreateUploadTokenV3ResponseResultSdkCredentials) GetAccessKeyId() string {
	if o == nil || IsNil(o.AccessKeyId) {
		var ret string
		return ret
	}
	return *o.AccessKeyId
}

// GetAccessKeyIdOk returns a tuple with the AccessKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUploadTokenV3ResponseResultSdkCredentials) GetAccessKeyIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccessKeyId) {
		return nil, false
	}
	return o.AccessKeyId, true
}

// HasAccessKeyId returns a boolean if a field has been set.
func (o *CreateUploadTokenV3ResponseResultSdkCredentials) HasAccessKeyId() bool {
	if o != nil && !IsNil(o.AccessKeyId) {
		return true
	}

	return false
}

// SetAccessKeyId gets a reference to the given string and assigns it to the AccessKeyId field.
func (o *CreateUploadTokenV3ResponseResultSdkCredentials) SetAccessKeyId(v string) {
	o.AccessKeyId = &v
}

// GetSecretAccessKey returns the SecretAccessKey field value if set, zero value otherwise.
func (o *CreateUploadTokenV3ResponseResultSdkCredentials) GetSecretAccessKey() string {
	if o == nil || IsNil(o.SecretAccessKey) {
		var ret string
		return ret
	}
	return *o.SecretAccessKey
}

// GetSecretAccessKeyOk returns a tuple with the SecretAccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUploadTokenV3ResponseResultSdkCredentials) GetSecretAccessKeyOk() (*string, bool) {
	if o == nil || IsNil(o.SecretAccessKey) {
		return nil, false
	}
	return o.SecretAccessKey, true
}

// HasSecretAccessKey returns a boolean if a field has been set.
func (o *CreateUploadTokenV3ResponseResultSdkCredentials) HasSecretAccessKey() bool {
	if o != nil && !IsNil(o.SecretAccessKey) {
		return true
	}

	return false
}

// SetSecretAccessKey gets a reference to the given string and assigns it to the SecretAccessKey field.
func (o *CreateUploadTokenV3ResponseResultSdkCredentials) SetSecretAccessKey(v string) {
	o.SecretAccessKey = &v
}

// GetSessionToken returns the SessionToken field value if set, zero value otherwise.
func (o *CreateUploadTokenV3ResponseResultSdkCredentials) GetSessionToken() string {
	if o == nil || IsNil(o.SessionToken) {
		var ret string
		return ret
	}
	return *o.SessionToken
}

// GetSessionTokenOk returns a tuple with the SessionToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUploadTokenV3ResponseResultSdkCredentials) GetSessionTokenOk() (*string, bool) {
	if o == nil || IsNil(o.SessionToken) {
		return nil, false
	}
	return o.SessionToken, true
}

// HasSessionToken returns a boolean if a field has been set.
func (o *CreateUploadTokenV3ResponseResultSdkCredentials) HasSessionToken() bool {
	if o != nil && !IsNil(o.SessionToken) {
		return true
	}

	return false
}

// SetSessionToken gets a reference to the given string and assigns it to the SessionToken field.
func (o *CreateUploadTokenV3ResponseResultSdkCredentials) SetSessionToken(v string) {
	o.SessionToken = &v
}

func (o CreateUploadTokenV3ResponseResultSdkCredentials) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateUploadTokenV3ResponseResultSdkCredentials) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccessKeyId) {
		toSerialize["accessKeyId"] = o.AccessKeyId
	}
	if !IsNil(o.SecretAccessKey) {
		toSerialize["secretAccessKey"] = o.SecretAccessKey
	}
	if !IsNil(o.SessionToken) {
		toSerialize["sessionToken"] = o.SessionToken
	}
	return toSerialize, nil
}

type NullableCreateUploadTokenV3ResponseResultSdkCredentials struct {
	value *CreateUploadTokenV3ResponseResultSdkCredentials
	isSet bool
}

func (v NullableCreateUploadTokenV3ResponseResultSdkCredentials) Get() *CreateUploadTokenV3ResponseResultSdkCredentials {
	return v.value
}

func (v *NullableCreateUploadTokenV3ResponseResultSdkCredentials) Set(val *CreateUploadTokenV3ResponseResultSdkCredentials) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateUploadTokenV3ResponseResultSdkCredentials) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateUploadTokenV3ResponseResultSdkCredentials) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateUploadTokenV3ResponseResultSdkCredentials(val *CreateUploadTokenV3ResponseResultSdkCredentials) *NullableCreateUploadTokenV3ResponseResultSdkCredentials {
	return &NullableCreateUploadTokenV3ResponseResultSdkCredentials{value: val, isSet: true}
}

func (v NullableCreateUploadTokenV3ResponseResultSdkCredentials) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateUploadTokenV3ResponseResultSdkCredentials) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


