/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateUploadTokenV3ResponseResultUpload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateUploadTokenV3ResponseResultUpload{}

// CreateUploadTokenV3ResponseResultUpload 上传所需要的配置
type CreateUploadTokenV3ResponseResultUpload struct {
	Bucket *string `json:"Bucket,omitempty"`
	// 指定授权的文件 ObjectKey，文件必须使用此 ObjectKey 作为上传路径
	Key *string `json:"Key,omitempty"`
	// 指定文件的 ContentDisposition
	ContentDisposition *string `json:"ContentDisposition,omitempty"`
	// 指定文件的 ContentType
	ContentType *string `json:"ContentType,omitempty"`
}

// NewCreateUploadTokenV3ResponseResultUpload instantiates a new CreateUploadTokenV3ResponseResultUpload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateUploadTokenV3ResponseResultUpload() *CreateUploadTokenV3ResponseResultUpload {
	this := CreateUploadTokenV3ResponseResultUpload{}
	return &this
}

// NewCreateUploadTokenV3ResponseResultUploadWithDefaults instantiates a new CreateUploadTokenV3ResponseResultUpload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateUploadTokenV3ResponseResultUploadWithDefaults() *CreateUploadTokenV3ResponseResultUpload {
	this := CreateUploadTokenV3ResponseResultUpload{}
	return &this
}

// GetBucket returns the Bucket field value if set, zero value otherwise.
func (o *CreateUploadTokenV3ResponseResultUpload) GetBucket() string {
	if o == nil || IsNil(o.Bucket) {
		var ret string
		return ret
	}
	return *o.Bucket
}

// GetBucketOk returns a tuple with the Bucket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUploadTokenV3ResponseResultUpload) GetBucketOk() (*string, bool) {
	if o == nil || IsNil(o.Bucket) {
		return nil, false
	}
	return o.Bucket, true
}

// HasBucket returns a boolean if a field has been set.
func (o *CreateUploadTokenV3ResponseResultUpload) HasBucket() bool {
	if o != nil && !IsNil(o.Bucket) {
		return true
	}

	return false
}

// SetBucket gets a reference to the given string and assigns it to the Bucket field.
func (o *CreateUploadTokenV3ResponseResultUpload) SetBucket(v string) {
	o.Bucket = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *CreateUploadTokenV3ResponseResultUpload) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUploadTokenV3ResponseResultUpload) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *CreateUploadTokenV3ResponseResultUpload) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *CreateUploadTokenV3ResponseResultUpload) SetKey(v string) {
	o.Key = &v
}

// GetContentDisposition returns the ContentDisposition field value if set, zero value otherwise.
func (o *CreateUploadTokenV3ResponseResultUpload) GetContentDisposition() string {
	if o == nil || IsNil(o.ContentDisposition) {
		var ret string
		return ret
	}
	return *o.ContentDisposition
}

// GetContentDispositionOk returns a tuple with the ContentDisposition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUploadTokenV3ResponseResultUpload) GetContentDispositionOk() (*string, bool) {
	if o == nil || IsNil(o.ContentDisposition) {
		return nil, false
	}
	return o.ContentDisposition, true
}

// HasContentDisposition returns a boolean if a field has been set.
func (o *CreateUploadTokenV3ResponseResultUpload) HasContentDisposition() bool {
	if o != nil && !IsNil(o.ContentDisposition) {
		return true
	}

	return false
}

// SetContentDisposition gets a reference to the given string and assigns it to the ContentDisposition field.
func (o *CreateUploadTokenV3ResponseResultUpload) SetContentDisposition(v string) {
	o.ContentDisposition = &v
}

// GetContentType returns the ContentType field value if set, zero value otherwise.
func (o *CreateUploadTokenV3ResponseResultUpload) GetContentType() string {
	if o == nil || IsNil(o.ContentType) {
		var ret string
		return ret
	}
	return *o.ContentType
}

// GetContentTypeOk returns a tuple with the ContentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUploadTokenV3ResponseResultUpload) GetContentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ContentType) {
		return nil, false
	}
	return o.ContentType, true
}

// HasContentType returns a boolean if a field has been set.
func (o *CreateUploadTokenV3ResponseResultUpload) HasContentType() bool {
	if o != nil && !IsNil(o.ContentType) {
		return true
	}

	return false
}

// SetContentType gets a reference to the given string and assigns it to the ContentType field.
func (o *CreateUploadTokenV3ResponseResultUpload) SetContentType(v string) {
	o.ContentType = &v
}

func (o CreateUploadTokenV3ResponseResultUpload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateUploadTokenV3ResponseResultUpload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Bucket) {
		toSerialize["Bucket"] = o.Bucket
	}
	if !IsNil(o.Key) {
		toSerialize["Key"] = o.Key
	}
	if !IsNil(o.ContentDisposition) {
		toSerialize["ContentDisposition"] = o.ContentDisposition
	}
	if !IsNil(o.ContentType) {
		toSerialize["ContentType"] = o.ContentType
	}
	return toSerialize, nil
}

type NullableCreateUploadTokenV3ResponseResultUpload struct {
	value *CreateUploadTokenV3ResponseResultUpload
	isSet bool
}

func (v NullableCreateUploadTokenV3ResponseResultUpload) Get() *CreateUploadTokenV3ResponseResultUpload {
	return v.value
}

func (v *NullableCreateUploadTokenV3ResponseResultUpload) Set(val *CreateUploadTokenV3ResponseResultUpload) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateUploadTokenV3ResponseResultUpload) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateUploadTokenV3ResponseResultUpload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateUploadTokenV3ResponseResultUpload(val *CreateUploadTokenV3ResponseResultUpload) *NullableCreateUploadTokenV3ResponseResultUpload {
	return &NullableCreateUploadTokenV3ResponseResultUpload{value: val, isSet: true}
}

func (v NullableCreateUploadTokenV3ResponseResultUpload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateUploadTokenV3ResponseResultUpload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


