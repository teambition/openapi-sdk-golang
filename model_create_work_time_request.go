/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateWorkTimeRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateWorkTimeRequest{}

// CreateWorkTimeRequest struct for CreateWorkTimeRequest
type CreateWorkTimeRequest struct {
	// 工时执行人ID
	UserId *string `json:"userId,omitempty"`
	// 工时提交人ID
	SubmitterId *string `json:"submitterId,omitempty"`
	// 任务 ID
	ObjectId *string `json:"objectId,omitempty"`
	// 入参: task
	ObjectType *string `json:"objectType,omitempty"`
	// 是否包含节假日, 传 1 表示周六日也填工时，否则填0系统会跳过周六日顺延周一开始填工时
	IncludesHolidays *int32 `json:"includesHolidays,omitempty"`
	// 如果开始截止时间跨天了，填1，否则填0
	IsDuration *int32 `json:"isDuration,omitempty"`
	// 实际工时数(单位:毫秒, 1h = 3600000ms)
	Worktime *int32 `json:"worktime,omitempty"`
	// 开始时间
	StartDate *string `json:"startDate,omitempty"`
	// 结束时间
	EndDate *string `json:"endDate,omitempty"`
	// 工作进展
	Description *string `json:"description,omitempty"`
	// 是否关闭任务动态
	IgnoreActivity *bool `json:"ignoreActivity,omitempty"`
	// 标签ID集合
	TagIds []string `json:"tagIds,omitempty"`
}

// NewCreateWorkTimeRequest instantiates a new CreateWorkTimeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateWorkTimeRequest() *CreateWorkTimeRequest {
	this := CreateWorkTimeRequest{}
	return &this
}

// NewCreateWorkTimeRequestWithDefaults instantiates a new CreateWorkTimeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateWorkTimeRequestWithDefaults() *CreateWorkTimeRequest {
	this := CreateWorkTimeRequest{}
	return &this
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *CreateWorkTimeRequest) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateWorkTimeRequest) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *CreateWorkTimeRequest) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *CreateWorkTimeRequest) SetUserId(v string) {
	o.UserId = &v
}

// GetSubmitterId returns the SubmitterId field value if set, zero value otherwise.
func (o *CreateWorkTimeRequest) GetSubmitterId() string {
	if o == nil || IsNil(o.SubmitterId) {
		var ret string
		return ret
	}
	return *o.SubmitterId
}

// GetSubmitterIdOk returns a tuple with the SubmitterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateWorkTimeRequest) GetSubmitterIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubmitterId) {
		return nil, false
	}
	return o.SubmitterId, true
}

// HasSubmitterId returns a boolean if a field has been set.
func (o *CreateWorkTimeRequest) HasSubmitterId() bool {
	if o != nil && !IsNil(o.SubmitterId) {
		return true
	}

	return false
}

// SetSubmitterId gets a reference to the given string and assigns it to the SubmitterId field.
func (o *CreateWorkTimeRequest) SetSubmitterId(v string) {
	o.SubmitterId = &v
}

// GetObjectId returns the ObjectId field value if set, zero value otherwise.
func (o *CreateWorkTimeRequest) GetObjectId() string {
	if o == nil || IsNil(o.ObjectId) {
		var ret string
		return ret
	}
	return *o.ObjectId
}

// GetObjectIdOk returns a tuple with the ObjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateWorkTimeRequest) GetObjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ObjectId) {
		return nil, false
	}
	return o.ObjectId, true
}

// HasObjectId returns a boolean if a field has been set.
func (o *CreateWorkTimeRequest) HasObjectId() bool {
	if o != nil && !IsNil(o.ObjectId) {
		return true
	}

	return false
}

// SetObjectId gets a reference to the given string and assigns it to the ObjectId field.
func (o *CreateWorkTimeRequest) SetObjectId(v string) {
	o.ObjectId = &v
}

// GetObjectType returns the ObjectType field value if set, zero value otherwise.
func (o *CreateWorkTimeRequest) GetObjectType() string {
	if o == nil || IsNil(o.ObjectType) {
		var ret string
		return ret
	}
	return *o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateWorkTimeRequest) GetObjectTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ObjectType) {
		return nil, false
	}
	return o.ObjectType, true
}

// HasObjectType returns a boolean if a field has been set.
func (o *CreateWorkTimeRequest) HasObjectType() bool {
	if o != nil && !IsNil(o.ObjectType) {
		return true
	}

	return false
}

// SetObjectType gets a reference to the given string and assigns it to the ObjectType field.
func (o *CreateWorkTimeRequest) SetObjectType(v string) {
	o.ObjectType = &v
}

// GetIncludesHolidays returns the IncludesHolidays field value if set, zero value otherwise.
func (o *CreateWorkTimeRequest) GetIncludesHolidays() int32 {
	if o == nil || IsNil(o.IncludesHolidays) {
		var ret int32
		return ret
	}
	return *o.IncludesHolidays
}

// GetIncludesHolidaysOk returns a tuple with the IncludesHolidays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateWorkTimeRequest) GetIncludesHolidaysOk() (*int32, bool) {
	if o == nil || IsNil(o.IncludesHolidays) {
		return nil, false
	}
	return o.IncludesHolidays, true
}

// HasIncludesHolidays returns a boolean if a field has been set.
func (o *CreateWorkTimeRequest) HasIncludesHolidays() bool {
	if o != nil && !IsNil(o.IncludesHolidays) {
		return true
	}

	return false
}

// SetIncludesHolidays gets a reference to the given int32 and assigns it to the IncludesHolidays field.
func (o *CreateWorkTimeRequest) SetIncludesHolidays(v int32) {
	o.IncludesHolidays = &v
}

// GetIsDuration returns the IsDuration field value if set, zero value otherwise.
func (o *CreateWorkTimeRequest) GetIsDuration() int32 {
	if o == nil || IsNil(o.IsDuration) {
		var ret int32
		return ret
	}
	return *o.IsDuration
}

// GetIsDurationOk returns a tuple with the IsDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateWorkTimeRequest) GetIsDurationOk() (*int32, bool) {
	if o == nil || IsNil(o.IsDuration) {
		return nil, false
	}
	return o.IsDuration, true
}

// HasIsDuration returns a boolean if a field has been set.
func (o *CreateWorkTimeRequest) HasIsDuration() bool {
	if o != nil && !IsNil(o.IsDuration) {
		return true
	}

	return false
}

// SetIsDuration gets a reference to the given int32 and assigns it to the IsDuration field.
func (o *CreateWorkTimeRequest) SetIsDuration(v int32) {
	o.IsDuration = &v
}

// GetWorktime returns the Worktime field value if set, zero value otherwise.
func (o *CreateWorkTimeRequest) GetWorktime() int32 {
	if o == nil || IsNil(o.Worktime) {
		var ret int32
		return ret
	}
	return *o.Worktime
}

// GetWorktimeOk returns a tuple with the Worktime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateWorkTimeRequest) GetWorktimeOk() (*int32, bool) {
	if o == nil || IsNil(o.Worktime) {
		return nil, false
	}
	return o.Worktime, true
}

// HasWorktime returns a boolean if a field has been set.
func (o *CreateWorkTimeRequest) HasWorktime() bool {
	if o != nil && !IsNil(o.Worktime) {
		return true
	}

	return false
}

// SetWorktime gets a reference to the given int32 and assigns it to the Worktime field.
func (o *CreateWorkTimeRequest) SetWorktime(v int32) {
	o.Worktime = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *CreateWorkTimeRequest) GetStartDate() string {
	if o == nil || IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateWorkTimeRequest) GetStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *CreateWorkTimeRequest) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *CreateWorkTimeRequest) SetStartDate(v string) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *CreateWorkTimeRequest) GetEndDate() string {
	if o == nil || IsNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateWorkTimeRequest) GetEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *CreateWorkTimeRequest) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *CreateWorkTimeRequest) SetEndDate(v string) {
	o.EndDate = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateWorkTimeRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateWorkTimeRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateWorkTimeRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateWorkTimeRequest) SetDescription(v string) {
	o.Description = &v
}

// GetIgnoreActivity returns the IgnoreActivity field value if set, zero value otherwise.
func (o *CreateWorkTimeRequest) GetIgnoreActivity() bool {
	if o == nil || IsNil(o.IgnoreActivity) {
		var ret bool
		return ret
	}
	return *o.IgnoreActivity
}

// GetIgnoreActivityOk returns a tuple with the IgnoreActivity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateWorkTimeRequest) GetIgnoreActivityOk() (*bool, bool) {
	if o == nil || IsNil(o.IgnoreActivity) {
		return nil, false
	}
	return o.IgnoreActivity, true
}

// HasIgnoreActivity returns a boolean if a field has been set.
func (o *CreateWorkTimeRequest) HasIgnoreActivity() bool {
	if o != nil && !IsNil(o.IgnoreActivity) {
		return true
	}

	return false
}

// SetIgnoreActivity gets a reference to the given bool and assigns it to the IgnoreActivity field.
func (o *CreateWorkTimeRequest) SetIgnoreActivity(v bool) {
	o.IgnoreActivity = &v
}

// GetTagIds returns the TagIds field value if set, zero value otherwise.
func (o *CreateWorkTimeRequest) GetTagIds() []string {
	if o == nil || IsNil(o.TagIds) {
		var ret []string
		return ret
	}
	return o.TagIds
}

// GetTagIdsOk returns a tuple with the TagIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateWorkTimeRequest) GetTagIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.TagIds) {
		return nil, false
	}
	return o.TagIds, true
}

// HasTagIds returns a boolean if a field has been set.
func (o *CreateWorkTimeRequest) HasTagIds() bool {
	if o != nil && !IsNil(o.TagIds) {
		return true
	}

	return false
}

// SetTagIds gets a reference to the given []string and assigns it to the TagIds field.
func (o *CreateWorkTimeRequest) SetTagIds(v []string) {
	o.TagIds = v
}

func (o CreateWorkTimeRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateWorkTimeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	if !IsNil(o.SubmitterId) {
		toSerialize["submitterId"] = o.SubmitterId
	}
	if !IsNil(o.ObjectId) {
		toSerialize["objectId"] = o.ObjectId
	}
	if !IsNil(o.ObjectType) {
		toSerialize["objectType"] = o.ObjectType
	}
	if !IsNil(o.IncludesHolidays) {
		toSerialize["includesHolidays"] = o.IncludesHolidays
	}
	if !IsNil(o.IsDuration) {
		toSerialize["isDuration"] = o.IsDuration
	}
	if !IsNil(o.Worktime) {
		toSerialize["worktime"] = o.Worktime
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.IgnoreActivity) {
		toSerialize["ignoreActivity"] = o.IgnoreActivity
	}
	if !IsNil(o.TagIds) {
		toSerialize["tagIds"] = o.TagIds
	}
	return toSerialize, nil
}

type NullableCreateWorkTimeRequest struct {
	value *CreateWorkTimeRequest
	isSet bool
}

func (v NullableCreateWorkTimeRequest) Get() *CreateWorkTimeRequest {
	return v.value
}

func (v *NullableCreateWorkTimeRequest) Set(val *CreateWorkTimeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateWorkTimeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateWorkTimeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateWorkTimeRequest(val *CreateWorkTimeRequest) *NullableCreateWorkTimeRequest {
	return &NullableCreateWorkTimeRequest{value: val, isSet: true}
}

func (v NullableCreateWorkTimeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateWorkTimeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


