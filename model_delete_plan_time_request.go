/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DeletePlanTimeRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeletePlanTimeRequest{}

// DeletePlanTimeRequest struct for DeletePlanTimeRequest
type DeletePlanTimeRequest struct {
	// 是否关闭任务动态
	IgnoreActivity *bool `json:"ignoreActivity,omitempty"`
}

// NewDeletePlanTimeRequest instantiates a new DeletePlanTimeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeletePlanTimeRequest() *DeletePlanTimeRequest {
	this := DeletePlanTimeRequest{}
	return &this
}

// NewDeletePlanTimeRequestWithDefaults instantiates a new DeletePlanTimeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeletePlanTimeRequestWithDefaults() *DeletePlanTimeRequest {
	this := DeletePlanTimeRequest{}
	return &this
}

// GetIgnoreActivity returns the IgnoreActivity field value if set, zero value otherwise.
func (o *DeletePlanTimeRequest) GetIgnoreActivity() bool {
	if o == nil || IsNil(o.IgnoreActivity) {
		var ret bool
		return ret
	}
	return *o.IgnoreActivity
}

// GetIgnoreActivityOk returns a tuple with the IgnoreActivity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeletePlanTimeRequest) GetIgnoreActivityOk() (*bool, bool) {
	if o == nil || IsNil(o.IgnoreActivity) {
		return nil, false
	}
	return o.IgnoreActivity, true
}

// HasIgnoreActivity returns a boolean if a field has been set.
func (o *DeletePlanTimeRequest) HasIgnoreActivity() bool {
	if o != nil && !IsNil(o.IgnoreActivity) {
		return true
	}

	return false
}

// SetIgnoreActivity gets a reference to the given bool and assigns it to the IgnoreActivity field.
func (o *DeletePlanTimeRequest) SetIgnoreActivity(v bool) {
	o.IgnoreActivity = &v
}

func (o DeletePlanTimeRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeletePlanTimeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IgnoreActivity) {
		toSerialize["ignoreActivity"] = o.IgnoreActivity
	}
	return toSerialize, nil
}

type NullableDeletePlanTimeRequest struct {
	value *DeletePlanTimeRequest
	isSet bool
}

func (v NullableDeletePlanTimeRequest) Get() *DeletePlanTimeRequest {
	return v.value
}

func (v *NullableDeletePlanTimeRequest) Set(val *DeletePlanTimeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeletePlanTimeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeletePlanTimeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeletePlanTimeRequest(val *DeletePlanTimeRequest) *NullableDeletePlanTimeRequest {
	return &NullableDeletePlanTimeRequest{value: val, isSet: true}
}

func (v NullableDeletePlanTimeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeletePlanTimeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


