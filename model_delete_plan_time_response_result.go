/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DeletePlanTimeResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeletePlanTimeResponseResult{}

// DeletePlanTimeResponseResult struct for DeletePlanTimeResponseResult
type DeletePlanTimeResponseResult struct {
	// 工时 ID
	PlantimeId *string `json:"plantimeId,omitempty"`
	// 工时关联的数据 ID
	ObjectId *string `json:"objectId,omitempty"`
	// 工时关联的数据类型
	ObjectType *string `json:"objectType,omitempty"`
}

// NewDeletePlanTimeResponseResult instantiates a new DeletePlanTimeResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeletePlanTimeResponseResult() *DeletePlanTimeResponseResult {
	this := DeletePlanTimeResponseResult{}
	return &this
}

// NewDeletePlanTimeResponseResultWithDefaults instantiates a new DeletePlanTimeResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeletePlanTimeResponseResultWithDefaults() *DeletePlanTimeResponseResult {
	this := DeletePlanTimeResponseResult{}
	return &this
}

// GetPlantimeId returns the PlantimeId field value if set, zero value otherwise.
func (o *DeletePlanTimeResponseResult) GetPlantimeId() string {
	if o == nil || IsNil(o.PlantimeId) {
		var ret string
		return ret
	}
	return *o.PlantimeId
}

// GetPlantimeIdOk returns a tuple with the PlantimeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeletePlanTimeResponseResult) GetPlantimeIdOk() (*string, bool) {
	if o == nil || IsNil(o.PlantimeId) {
		return nil, false
	}
	return o.PlantimeId, true
}

// HasPlantimeId returns a boolean if a field has been set.
func (o *DeletePlanTimeResponseResult) HasPlantimeId() bool {
	if o != nil && !IsNil(o.PlantimeId) {
		return true
	}

	return false
}

// SetPlantimeId gets a reference to the given string and assigns it to the PlantimeId field.
func (o *DeletePlanTimeResponseResult) SetPlantimeId(v string) {
	o.PlantimeId = &v
}

// GetObjectId returns the ObjectId field value if set, zero value otherwise.
func (o *DeletePlanTimeResponseResult) GetObjectId() string {
	if o == nil || IsNil(o.ObjectId) {
		var ret string
		return ret
	}
	return *o.ObjectId
}

// GetObjectIdOk returns a tuple with the ObjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeletePlanTimeResponseResult) GetObjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ObjectId) {
		return nil, false
	}
	return o.ObjectId, true
}

// HasObjectId returns a boolean if a field has been set.
func (o *DeletePlanTimeResponseResult) HasObjectId() bool {
	if o != nil && !IsNil(o.ObjectId) {
		return true
	}

	return false
}

// SetObjectId gets a reference to the given string and assigns it to the ObjectId field.
func (o *DeletePlanTimeResponseResult) SetObjectId(v string) {
	o.ObjectId = &v
}

// GetObjectType returns the ObjectType field value if set, zero value otherwise.
func (o *DeletePlanTimeResponseResult) GetObjectType() string {
	if o == nil || IsNil(o.ObjectType) {
		var ret string
		return ret
	}
	return *o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeletePlanTimeResponseResult) GetObjectTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ObjectType) {
		return nil, false
	}
	return o.ObjectType, true
}

// HasObjectType returns a boolean if a field has been set.
func (o *DeletePlanTimeResponseResult) HasObjectType() bool {
	if o != nil && !IsNil(o.ObjectType) {
		return true
	}

	return false
}

// SetObjectType gets a reference to the given string and assigns it to the ObjectType field.
func (o *DeletePlanTimeResponseResult) SetObjectType(v string) {
	o.ObjectType = &v
}

func (o DeletePlanTimeResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeletePlanTimeResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PlantimeId) {
		toSerialize["plantimeId"] = o.PlantimeId
	}
	if !IsNil(o.ObjectId) {
		toSerialize["objectId"] = o.ObjectId
	}
	if !IsNil(o.ObjectType) {
		toSerialize["objectType"] = o.ObjectType
	}
	return toSerialize, nil
}

type NullableDeletePlanTimeResponseResult struct {
	value *DeletePlanTimeResponseResult
	isSet bool
}

func (v NullableDeletePlanTimeResponseResult) Get() *DeletePlanTimeResponseResult {
	return v.value
}

func (v *NullableDeletePlanTimeResponseResult) Set(val *DeletePlanTimeResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableDeletePlanTimeResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableDeletePlanTimeResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeletePlanTimeResponseResult(val *DeletePlanTimeResponseResult) *NullableDeletePlanTimeResponseResult {
	return &NullableDeletePlanTimeResponseResult{value: val, isSet: true}
}

func (v NullableDeletePlanTimeResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeletePlanTimeResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


