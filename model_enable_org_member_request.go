/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the EnableOrgMemberRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnableOrgMemberRequest{}

// EnableOrgMemberRequest struct for EnableOrgMemberRequest
type EnableOrgMemberRequest struct {
	// 操作人 ID
	OperatorId *string `json:"operatorId,omitempty"`
	// 用户 ID
	UserId *string `json:"userId,omitempty"`
}

// NewEnableOrgMemberRequest instantiates a new EnableOrgMemberRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnableOrgMemberRequest() *EnableOrgMemberRequest {
	this := EnableOrgMemberRequest{}
	return &this
}

// NewEnableOrgMemberRequestWithDefaults instantiates a new EnableOrgMemberRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnableOrgMemberRequestWithDefaults() *EnableOrgMemberRequest {
	this := EnableOrgMemberRequest{}
	return &this
}

// GetOperatorId returns the OperatorId field value if set, zero value otherwise.
func (o *EnableOrgMemberRequest) GetOperatorId() string {
	if o == nil || IsNil(o.OperatorId) {
		var ret string
		return ret
	}
	return *o.OperatorId
}

// GetOperatorIdOk returns a tuple with the OperatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnableOrgMemberRequest) GetOperatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.OperatorId) {
		return nil, false
	}
	return o.OperatorId, true
}

// HasOperatorId returns a boolean if a field has been set.
func (o *EnableOrgMemberRequest) HasOperatorId() bool {
	if o != nil && !IsNil(o.OperatorId) {
		return true
	}

	return false
}

// SetOperatorId gets a reference to the given string and assigns it to the OperatorId field.
func (o *EnableOrgMemberRequest) SetOperatorId(v string) {
	o.OperatorId = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *EnableOrgMemberRequest) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnableOrgMemberRequest) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *EnableOrgMemberRequest) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *EnableOrgMemberRequest) SetUserId(v string) {
	o.UserId = &v
}

func (o EnableOrgMemberRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnableOrgMemberRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OperatorId) {
		toSerialize["operatorId"] = o.OperatorId
	}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	return toSerialize, nil
}

type NullableEnableOrgMemberRequest struct {
	value *EnableOrgMemberRequest
	isSet bool
}

func (v NullableEnableOrgMemberRequest) Get() *EnableOrgMemberRequest {
	return v.value
}

func (v *NullableEnableOrgMemberRequest) Set(val *EnableOrgMemberRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEnableOrgMemberRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEnableOrgMemberRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnableOrgMemberRequest(val *EnableOrgMemberRequest) *NullableEnableOrgMemberRequest {
	return &NullableEnableOrgMemberRequest{value: val, isSet: true}
}

func (v NullableEnableOrgMemberRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnableOrgMemberRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


