/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ExecutePlanEventV3ResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExecutePlanEventV3ResponseResult{}

// ExecutePlanEventV3ResponseResult struct for ExecutePlanEventV3ResponseResult
type ExecutePlanEventV3ResponseResult struct {
	Result *bool `json:"result,omitempty"`
}

// NewExecutePlanEventV3ResponseResult instantiates a new ExecutePlanEventV3ResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExecutePlanEventV3ResponseResult() *ExecutePlanEventV3ResponseResult {
	this := ExecutePlanEventV3ResponseResult{}
	return &this
}

// NewExecutePlanEventV3ResponseResultWithDefaults instantiates a new ExecutePlanEventV3ResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExecutePlanEventV3ResponseResultWithDefaults() *ExecutePlanEventV3ResponseResult {
	this := ExecutePlanEventV3ResponseResult{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *ExecutePlanEventV3ResponseResult) GetResult() bool {
	if o == nil || IsNil(o.Result) {
		var ret bool
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutePlanEventV3ResponseResult) GetResultOk() (*bool, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *ExecutePlanEventV3ResponseResult) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given bool and assigns it to the Result field.
func (o *ExecutePlanEventV3ResponseResult) SetResult(v bool) {
	o.Result = &v
}

func (o ExecutePlanEventV3ResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExecutePlanEventV3ResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	return toSerialize, nil
}

type NullableExecutePlanEventV3ResponseResult struct {
	value *ExecutePlanEventV3ResponseResult
	isSet bool
}

func (v NullableExecutePlanEventV3ResponseResult) Get() *ExecutePlanEventV3ResponseResult {
	return v.value
}

func (v *NullableExecutePlanEventV3ResponseResult) Set(val *ExecutePlanEventV3ResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableExecutePlanEventV3ResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableExecutePlanEventV3ResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExecutePlanEventV3ResponseResult(val *ExecutePlanEventV3ResponseResult) *NullableExecutePlanEventV3ResponseResult {
	return &NullableExecutePlanEventV3ResponseResult{value: val, isSet: true}
}

func (v NullableExecutePlanEventV3ResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExecutePlanEventV3ResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


