/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetAppAccessTokenRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAppAccessTokenRequest{}

// GetAppAccessTokenRequest struct for GetAppAccessTokenRequest
type GetAppAccessTokenRequest struct {
	// 应用id
	AppId *string `json:"appId,omitempty"`
	// 应用secret
	AppSecret *string `json:"appSecret,omitempty"`
}

// NewGetAppAccessTokenRequest instantiates a new GetAppAccessTokenRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAppAccessTokenRequest() *GetAppAccessTokenRequest {
	this := GetAppAccessTokenRequest{}
	return &this
}

// NewGetAppAccessTokenRequestWithDefaults instantiates a new GetAppAccessTokenRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAppAccessTokenRequestWithDefaults() *GetAppAccessTokenRequest {
	this := GetAppAccessTokenRequest{}
	return &this
}

// GetAppId returns the AppId field value if set, zero value otherwise.
func (o *GetAppAccessTokenRequest) GetAppId() string {
	if o == nil || IsNil(o.AppId) {
		var ret string
		return ret
	}
	return *o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAppAccessTokenRequest) GetAppIdOk() (*string, bool) {
	if o == nil || IsNil(o.AppId) {
		return nil, false
	}
	return o.AppId, true
}

// HasAppId returns a boolean if a field has been set.
func (o *GetAppAccessTokenRequest) HasAppId() bool {
	if o != nil && !IsNil(o.AppId) {
		return true
	}

	return false
}

// SetAppId gets a reference to the given string and assigns it to the AppId field.
func (o *GetAppAccessTokenRequest) SetAppId(v string) {
	o.AppId = &v
}

// GetAppSecret returns the AppSecret field value if set, zero value otherwise.
func (o *GetAppAccessTokenRequest) GetAppSecret() string {
	if o == nil || IsNil(o.AppSecret) {
		var ret string
		return ret
	}
	return *o.AppSecret
}

// GetAppSecretOk returns a tuple with the AppSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAppAccessTokenRequest) GetAppSecretOk() (*string, bool) {
	if o == nil || IsNil(o.AppSecret) {
		return nil, false
	}
	return o.AppSecret, true
}

// HasAppSecret returns a boolean if a field has been set.
func (o *GetAppAccessTokenRequest) HasAppSecret() bool {
	if o != nil && !IsNil(o.AppSecret) {
		return true
	}

	return false
}

// SetAppSecret gets a reference to the given string and assigns it to the AppSecret field.
func (o *GetAppAccessTokenRequest) SetAppSecret(v string) {
	o.AppSecret = &v
}

func (o GetAppAccessTokenRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAppAccessTokenRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AppId) {
		toSerialize["appId"] = o.AppId
	}
	if !IsNil(o.AppSecret) {
		toSerialize["appSecret"] = o.AppSecret
	}
	return toSerialize, nil
}

type NullableGetAppAccessTokenRequest struct {
	value *GetAppAccessTokenRequest
	isSet bool
}

func (v NullableGetAppAccessTokenRequest) Get() *GetAppAccessTokenRequest {
	return v.value
}

func (v *NullableGetAppAccessTokenRequest) Set(val *GetAppAccessTokenRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAppAccessTokenRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAppAccessTokenRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAppAccessTokenRequest(val *GetAppAccessTokenRequest) *NullableGetAppAccessTokenRequest {
	return &NullableGetAppAccessTokenRequest{value: val, isSet: true}
}

func (v NullableGetAppAccessTokenRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAppAccessTokenRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


