/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetAuditLogsResponseResultInnerUser type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAuditLogsResponseResultInnerUser{}

// GetAuditLogsResponseResultInnerUser struct for GetAuditLogsResponseResultInnerUser
type GetAuditLogsResponseResultInnerUser struct {
	// 用户ID
	UserId *string `json:"userId,omitempty"`
	// 用户名称
	Name *string `json:"name,omitempty"`
}

// NewGetAuditLogsResponseResultInnerUser instantiates a new GetAuditLogsResponseResultInnerUser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAuditLogsResponseResultInnerUser() *GetAuditLogsResponseResultInnerUser {
	this := GetAuditLogsResponseResultInnerUser{}
	return &this
}

// NewGetAuditLogsResponseResultInnerUserWithDefaults instantiates a new GetAuditLogsResponseResultInnerUser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAuditLogsResponseResultInnerUserWithDefaults() *GetAuditLogsResponseResultInnerUser {
	this := GetAuditLogsResponseResultInnerUser{}
	return &this
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *GetAuditLogsResponseResultInnerUser) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuditLogsResponseResultInnerUser) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *GetAuditLogsResponseResultInnerUser) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *GetAuditLogsResponseResultInnerUser) SetUserId(v string) {
	o.UserId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetAuditLogsResponseResultInnerUser) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuditLogsResponseResultInnerUser) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetAuditLogsResponseResultInnerUser) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetAuditLogsResponseResultInnerUser) SetName(v string) {
	o.Name = &v
}

func (o GetAuditLogsResponseResultInnerUser) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAuditLogsResponseResultInnerUser) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableGetAuditLogsResponseResultInnerUser struct {
	value *GetAuditLogsResponseResultInnerUser
	isSet bool
}

func (v NullableGetAuditLogsResponseResultInnerUser) Get() *GetAuditLogsResponseResultInnerUser {
	return v.value
}

func (v *NullableGetAuditLogsResponseResultInnerUser) Set(val *GetAuditLogsResponseResultInnerUser) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAuditLogsResponseResultInnerUser) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAuditLogsResponseResultInnerUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAuditLogsResponseResultInnerUser(val *GetAuditLogsResponseResultInnerUser) *NullableGetAuditLogsResponseResultInnerUser {
	return &NullableGetAuditLogsResponseResultInnerUser{value: val, isSet: true}
}

func (v NullableGetAuditLogsResponseResultInnerUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAuditLogsResponseResultInnerUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


