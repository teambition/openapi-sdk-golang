/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetBindingCidByTaskIdResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetBindingCidByTaskIdResponseResult{}

// GetBindingCidByTaskIdResponseResult 任务群聊id
type GetBindingCidByTaskIdResponseResult struct {
	// 任务 ID
	TaskId *string `json:"taskId,omitempty"`
	// 钉钉群聊开放字段ID openConversationId，若任务未绑定群聊，则该字段为空， 钉钉群聊参考文档：https://open.dingtalk.com/document/orgapp/session-management-overview
	Cid *string `json:"cid,omitempty"`
}

// NewGetBindingCidByTaskIdResponseResult instantiates a new GetBindingCidByTaskIdResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetBindingCidByTaskIdResponseResult() *GetBindingCidByTaskIdResponseResult {
	this := GetBindingCidByTaskIdResponseResult{}
	return &this
}

// NewGetBindingCidByTaskIdResponseResultWithDefaults instantiates a new GetBindingCidByTaskIdResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetBindingCidByTaskIdResponseResultWithDefaults() *GetBindingCidByTaskIdResponseResult {
	this := GetBindingCidByTaskIdResponseResult{}
	return &this
}

// GetTaskId returns the TaskId field value if set, zero value otherwise.
func (o *GetBindingCidByTaskIdResponseResult) GetTaskId() string {
	if o == nil || IsNil(o.TaskId) {
		var ret string
		return ret
	}
	return *o.TaskId
}

// GetTaskIdOk returns a tuple with the TaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBindingCidByTaskIdResponseResult) GetTaskIdOk() (*string, bool) {
	if o == nil || IsNil(o.TaskId) {
		return nil, false
	}
	return o.TaskId, true
}

// HasTaskId returns a boolean if a field has been set.
func (o *GetBindingCidByTaskIdResponseResult) HasTaskId() bool {
	if o != nil && !IsNil(o.TaskId) {
		return true
	}

	return false
}

// SetTaskId gets a reference to the given string and assigns it to the TaskId field.
func (o *GetBindingCidByTaskIdResponseResult) SetTaskId(v string) {
	o.TaskId = &v
}

// GetCid returns the Cid field value if set, zero value otherwise.
func (o *GetBindingCidByTaskIdResponseResult) GetCid() string {
	if o == nil || IsNil(o.Cid) {
		var ret string
		return ret
	}
	return *o.Cid
}

// GetCidOk returns a tuple with the Cid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBindingCidByTaskIdResponseResult) GetCidOk() (*string, bool) {
	if o == nil || IsNil(o.Cid) {
		return nil, false
	}
	return o.Cid, true
}

// HasCid returns a boolean if a field has been set.
func (o *GetBindingCidByTaskIdResponseResult) HasCid() bool {
	if o != nil && !IsNil(o.Cid) {
		return true
	}

	return false
}

// SetCid gets a reference to the given string and assigns it to the Cid field.
func (o *GetBindingCidByTaskIdResponseResult) SetCid(v string) {
	o.Cid = &v
}

func (o GetBindingCidByTaskIdResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetBindingCidByTaskIdResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TaskId) {
		toSerialize["taskId"] = o.TaskId
	}
	if !IsNil(o.Cid) {
		toSerialize["cid"] = o.Cid
	}
	return toSerialize, nil
}

type NullableGetBindingCidByTaskIdResponseResult struct {
	value *GetBindingCidByTaskIdResponseResult
	isSet bool
}

func (v NullableGetBindingCidByTaskIdResponseResult) Get() *GetBindingCidByTaskIdResponseResult {
	return v.value
}

func (v *NullableGetBindingCidByTaskIdResponseResult) Set(val *GetBindingCidByTaskIdResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableGetBindingCidByTaskIdResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableGetBindingCidByTaskIdResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetBindingCidByTaskIdResponseResult(val *GetBindingCidByTaskIdResponseResult) *NullableGetBindingCidByTaskIdResponseResult {
	return &NullableGetBindingCidByTaskIdResponseResult{value: val, isSet: true}
}

func (v NullableGetBindingCidByTaskIdResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetBindingCidByTaskIdResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


