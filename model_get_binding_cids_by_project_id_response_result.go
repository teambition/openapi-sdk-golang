/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetBindingCidsByProjectIdResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetBindingCidsByProjectIdResponseResult{}

// GetBindingCidsByProjectIdResponseResult struct for GetBindingCidsByProjectIdResponseResult
type GetBindingCidsByProjectIdResponseResult struct {
	// 钉钉群聊开放字段ID openConversationId, 钉钉群聊参考文档：https://open.dingtalk.com/document/orgapp/session-management-overview
	Cids []string `json:"cids,omitempty"`
}

// NewGetBindingCidsByProjectIdResponseResult instantiates a new GetBindingCidsByProjectIdResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetBindingCidsByProjectIdResponseResult() *GetBindingCidsByProjectIdResponseResult {
	this := GetBindingCidsByProjectIdResponseResult{}
	return &this
}

// NewGetBindingCidsByProjectIdResponseResultWithDefaults instantiates a new GetBindingCidsByProjectIdResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetBindingCidsByProjectIdResponseResultWithDefaults() *GetBindingCidsByProjectIdResponseResult {
	this := GetBindingCidsByProjectIdResponseResult{}
	return &this
}

// GetCids returns the Cids field value if set, zero value otherwise.
func (o *GetBindingCidsByProjectIdResponseResult) GetCids() []string {
	if o == nil || IsNil(o.Cids) {
		var ret []string
		return ret
	}
	return o.Cids
}

// GetCidsOk returns a tuple with the Cids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBindingCidsByProjectIdResponseResult) GetCidsOk() ([]string, bool) {
	if o == nil || IsNil(o.Cids) {
		return nil, false
	}
	return o.Cids, true
}

// HasCids returns a boolean if a field has been set.
func (o *GetBindingCidsByProjectIdResponseResult) HasCids() bool {
	if o != nil && !IsNil(o.Cids) {
		return true
	}

	return false
}

// SetCids gets a reference to the given []string and assigns it to the Cids field.
func (o *GetBindingCidsByProjectIdResponseResult) SetCids(v []string) {
	o.Cids = v
}

func (o GetBindingCidsByProjectIdResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetBindingCidsByProjectIdResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cids) {
		toSerialize["cids"] = o.Cids
	}
	return toSerialize, nil
}

type NullableGetBindingCidsByProjectIdResponseResult struct {
	value *GetBindingCidsByProjectIdResponseResult
	isSet bool
}

func (v NullableGetBindingCidsByProjectIdResponseResult) Get() *GetBindingCidsByProjectIdResponseResult {
	return v.value
}

func (v *NullableGetBindingCidsByProjectIdResponseResult) Set(val *GetBindingCidsByProjectIdResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableGetBindingCidsByProjectIdResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableGetBindingCidsByProjectIdResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetBindingCidsByProjectIdResponseResult(val *GetBindingCidsByProjectIdResponseResult) *NullableGetBindingCidsByProjectIdResponseResult {
	return &NullableGetBindingCidsByProjectIdResponseResult{value: val, isSet: true}
}

func (v NullableGetBindingCidsByProjectIdResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetBindingCidsByProjectIdResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


