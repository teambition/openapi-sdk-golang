/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetBindingProjectIdsByCidResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetBindingProjectIdsByCidResponseResult{}

// GetBindingProjectIdsByCidResponseResult struct for GetBindingProjectIdsByCidResponseResult
type GetBindingProjectIdsByCidResponseResult struct {
	ProjectIds []string `json:"projectIds,omitempty"`
}

// NewGetBindingProjectIdsByCidResponseResult instantiates a new GetBindingProjectIdsByCidResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetBindingProjectIdsByCidResponseResult() *GetBindingProjectIdsByCidResponseResult {
	this := GetBindingProjectIdsByCidResponseResult{}
	return &this
}

// NewGetBindingProjectIdsByCidResponseResultWithDefaults instantiates a new GetBindingProjectIdsByCidResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetBindingProjectIdsByCidResponseResultWithDefaults() *GetBindingProjectIdsByCidResponseResult {
	this := GetBindingProjectIdsByCidResponseResult{}
	return &this
}

// GetProjectIds returns the ProjectIds field value if set, zero value otherwise.
func (o *GetBindingProjectIdsByCidResponseResult) GetProjectIds() []string {
	if o == nil || IsNil(o.ProjectIds) {
		var ret []string
		return ret
	}
	return o.ProjectIds
}

// GetProjectIdsOk returns a tuple with the ProjectIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBindingProjectIdsByCidResponseResult) GetProjectIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ProjectIds) {
		return nil, false
	}
	return o.ProjectIds, true
}

// HasProjectIds returns a boolean if a field has been set.
func (o *GetBindingProjectIdsByCidResponseResult) HasProjectIds() bool {
	if o != nil && !IsNil(o.ProjectIds) {
		return true
	}

	return false
}

// SetProjectIds gets a reference to the given []string and assigns it to the ProjectIds field.
func (o *GetBindingProjectIdsByCidResponseResult) SetProjectIds(v []string) {
	o.ProjectIds = v
}

func (o GetBindingProjectIdsByCidResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetBindingProjectIdsByCidResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProjectIds) {
		toSerialize["projectIds"] = o.ProjectIds
	}
	return toSerialize, nil
}

type NullableGetBindingProjectIdsByCidResponseResult struct {
	value *GetBindingProjectIdsByCidResponseResult
	isSet bool
}

func (v NullableGetBindingProjectIdsByCidResponseResult) Get() *GetBindingProjectIdsByCidResponseResult {
	return v.value
}

func (v *NullableGetBindingProjectIdsByCidResponseResult) Set(val *GetBindingProjectIdsByCidResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableGetBindingProjectIdsByCidResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableGetBindingProjectIdsByCidResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetBindingProjectIdsByCidResponseResult(val *GetBindingProjectIdsByCidResponseResult) *NullableGetBindingProjectIdsByCidResponseResult {
	return &NullableGetBindingProjectIdsByCidResponseResult{value: val, isSet: true}
}

func (v NullableGetBindingProjectIdsByCidResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetBindingProjectIdsByCidResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


