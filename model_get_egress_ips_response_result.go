/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetEgressIpsResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetEgressIpsResponseResult{}

// GetEgressIpsResponseResult struct for GetEgressIpsResponseResult
type GetEgressIpsResponseResult struct {
	// IP列表
	IpList []string `json:"ip_list,omitempty"`
}

// NewGetEgressIpsResponseResult instantiates a new GetEgressIpsResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetEgressIpsResponseResult() *GetEgressIpsResponseResult {
	this := GetEgressIpsResponseResult{}
	return &this
}

// NewGetEgressIpsResponseResultWithDefaults instantiates a new GetEgressIpsResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetEgressIpsResponseResultWithDefaults() *GetEgressIpsResponseResult {
	this := GetEgressIpsResponseResult{}
	return &this
}

// GetIpList returns the IpList field value if set, zero value otherwise.
func (o *GetEgressIpsResponseResult) GetIpList() []string {
	if o == nil || IsNil(o.IpList) {
		var ret []string
		return ret
	}
	return o.IpList
}

// GetIpListOk returns a tuple with the IpList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEgressIpsResponseResult) GetIpListOk() ([]string, bool) {
	if o == nil || IsNil(o.IpList) {
		return nil, false
	}
	return o.IpList, true
}

// HasIpList returns a boolean if a field has been set.
func (o *GetEgressIpsResponseResult) HasIpList() bool {
	if o != nil && !IsNil(o.IpList) {
		return true
	}

	return false
}

// SetIpList gets a reference to the given []string and assigns it to the IpList field.
func (o *GetEgressIpsResponseResult) SetIpList(v []string) {
	o.IpList = v
}

func (o GetEgressIpsResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetEgressIpsResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IpList) {
		toSerialize["ip_list"] = o.IpList
	}
	return toSerialize, nil
}

type NullableGetEgressIpsResponseResult struct {
	value *GetEgressIpsResponseResult
	isSet bool
}

func (v NullableGetEgressIpsResponseResult) Get() *GetEgressIpsResponseResult {
	return v.value
}

func (v *NullableGetEgressIpsResponseResult) Set(val *GetEgressIpsResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableGetEgressIpsResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableGetEgressIpsResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetEgressIpsResponseResult(val *GetEgressIpsResponseResult) *NullableGetEgressIpsResponseResult {
	return &NullableGetEgressIpsResponseResult{value: val, isSet: true}
}

func (v NullableGetEgressIpsResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetEgressIpsResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


