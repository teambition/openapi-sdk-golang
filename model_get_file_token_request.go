/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetFileTokenRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetFileTokenRequest{}

// GetFileTokenRequest struct for GetFileTokenRequest
type GetFileTokenRequest struct {
	// 文件资源标识 - 任务评论附件: `task:{taskId}/activity:{activityId}/file:{fileId}` - 任务评论附件的某个版本: `task:{taskId}/activity:{activityId}/file:{fileId}/version:{versionId}` - 任务文件字段: `task:{taskId}/cf:{cfId}/file:{fileId}` - 任务文件字段的某个版本: `task:{taskId}/cf:{cfId}/file:{fileId}/version:{versionId}` - 项目文件: `work:{workId}` - 项目文件的某个版本: `work:{workId}/version:{versionId}` 
	Resources []string `json:"resources,omitempty"`
	// 文件使用范围，如 `project:{projectId}`
	Scope *string `json:"scope,omitempty"`
}

// NewGetFileTokenRequest instantiates a new GetFileTokenRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetFileTokenRequest() *GetFileTokenRequest {
	this := GetFileTokenRequest{}
	return &this
}

// NewGetFileTokenRequestWithDefaults instantiates a new GetFileTokenRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetFileTokenRequestWithDefaults() *GetFileTokenRequest {
	this := GetFileTokenRequest{}
	return &this
}

// GetResources returns the Resources field value if set, zero value otherwise.
func (o *GetFileTokenRequest) GetResources() []string {
	if o == nil || IsNil(o.Resources) {
		var ret []string
		return ret
	}
	return o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFileTokenRequest) GetResourcesOk() ([]string, bool) {
	if o == nil || IsNil(o.Resources) {
		return nil, false
	}
	return o.Resources, true
}

// HasResources returns a boolean if a field has been set.
func (o *GetFileTokenRequest) HasResources() bool {
	if o != nil && !IsNil(o.Resources) {
		return true
	}

	return false
}

// SetResources gets a reference to the given []string and assigns it to the Resources field.
func (o *GetFileTokenRequest) SetResources(v []string) {
	o.Resources = v
}

// GetScope returns the Scope field value if set, zero value otherwise.
func (o *GetFileTokenRequest) GetScope() string {
	if o == nil || IsNil(o.Scope) {
		var ret string
		return ret
	}
	return *o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFileTokenRequest) GetScopeOk() (*string, bool) {
	if o == nil || IsNil(o.Scope) {
		return nil, false
	}
	return o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *GetFileTokenRequest) HasScope() bool {
	if o != nil && !IsNil(o.Scope) {
		return true
	}

	return false
}

// SetScope gets a reference to the given string and assigns it to the Scope field.
func (o *GetFileTokenRequest) SetScope(v string) {
	o.Scope = &v
}

func (o GetFileTokenRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetFileTokenRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Resources) {
		toSerialize["resources"] = o.Resources
	}
	if !IsNil(o.Scope) {
		toSerialize["scope"] = o.Scope
	}
	return toSerialize, nil
}

type NullableGetFileTokenRequest struct {
	value *GetFileTokenRequest
	isSet bool
}

func (v NullableGetFileTokenRequest) Get() *GetFileTokenRequest {
	return v.value
}

func (v *NullableGetFileTokenRequest) Set(val *GetFileTokenRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetFileTokenRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetFileTokenRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetFileTokenRequest(val *GetFileTokenRequest) *NullableGetFileTokenRequest {
	return &NullableGetFileTokenRequest{value: val, isSet: true}
}

func (v NullableGetFileTokenRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetFileTokenRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


