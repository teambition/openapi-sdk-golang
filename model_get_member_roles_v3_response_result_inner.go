/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetMemberRolesV3ResponseResultInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetMemberRolesV3ResponseResultInner{}

// GetMemberRolesV3ResponseResultInner struct for GetMemberRolesV3ResponseResultInner
type GetMemberRolesV3ResponseResultInner struct {
	// 项目成员ID
	ProjectId *string `json:"projectId,omitempty"`
	// 用户ID
	UserId *string `json:"userId,omitempty"`
	// 项目角色， 0=成员；1=管理员；2=拥有者; -1=项目外成员; -2=对项目不可见
	Role *int32 `json:"role,omitempty"`
}

// NewGetMemberRolesV3ResponseResultInner instantiates a new GetMemberRolesV3ResponseResultInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetMemberRolesV3ResponseResultInner() *GetMemberRolesV3ResponseResultInner {
	this := GetMemberRolesV3ResponseResultInner{}
	return &this
}

// NewGetMemberRolesV3ResponseResultInnerWithDefaults instantiates a new GetMemberRolesV3ResponseResultInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetMemberRolesV3ResponseResultInnerWithDefaults() *GetMemberRolesV3ResponseResultInner {
	this := GetMemberRolesV3ResponseResultInner{}
	return &this
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *GetMemberRolesV3ResponseResultInner) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId) {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMemberRolesV3ResponseResultInner) GetProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *GetMemberRolesV3ResponseResultInner) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *GetMemberRolesV3ResponseResultInner) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *GetMemberRolesV3ResponseResultInner) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMemberRolesV3ResponseResultInner) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *GetMemberRolesV3ResponseResultInner) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *GetMemberRolesV3ResponseResultInner) SetUserId(v string) {
	o.UserId = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *GetMemberRolesV3ResponseResultInner) GetRole() int32 {
	if o == nil || IsNil(o.Role) {
		var ret int32
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMemberRolesV3ResponseResultInner) GetRoleOk() (*int32, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *GetMemberRolesV3ResponseResultInner) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given int32 and assigns it to the Role field.
func (o *GetMemberRolesV3ResponseResultInner) SetRole(v int32) {
	o.Role = &v
}

func (o GetMemberRolesV3ResponseResultInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetMemberRolesV3ResponseResultInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProjectId) {
		toSerialize["projectId"] = o.ProjectId
	}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	return toSerialize, nil
}

type NullableGetMemberRolesV3ResponseResultInner struct {
	value *GetMemberRolesV3ResponseResultInner
	isSet bool
}

func (v NullableGetMemberRolesV3ResponseResultInner) Get() *GetMemberRolesV3ResponseResultInner {
	return v.value
}

func (v *NullableGetMemberRolesV3ResponseResultInner) Set(val *GetMemberRolesV3ResponseResultInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetMemberRolesV3ResponseResultInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetMemberRolesV3ResponseResultInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetMemberRolesV3ResponseResultInner(val *GetMemberRolesV3ResponseResultInner) *NullableGetMemberRolesV3ResponseResultInner {
	return &NullableGetMemberRolesV3ResponseResultInner{value: val, isSet: true}
}

func (v NullableGetMemberRolesV3ResponseResultInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetMemberRolesV3ResponseResultInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


