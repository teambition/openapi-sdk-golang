/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetOrgInfoResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetOrgInfoResponseResult{}

// GetOrgInfoResponseResult struct for GetOrgInfoResponseResult
type GetOrgInfoResponseResult struct {
	// 企业 ID
	OrgId *string `json:"orgId,omitempty"`
	// 企业创建时间
	Created *string `json:"created,omitempty"`
	// 企业简介
	Description *string `json:"description,omitempty"`
	// 企业 Logo 的 URL
	Logo *string `json:"logo,omitempty"`
	// 企业名称
	Name *string `json:"name,omitempty"`
	// 企业 label 信息. 如果 label 中包含 'system:hidden' 则获取用户加入企业列表时不返回该企业
	Labels []string `json:"labels,omitempty"`
	// 创建者用户 ID
	CreatorId *string `json:"creatorId,omitempty"`
	// 父企业 ID,如果企业本身为主企业,则返回空
	ParentId *string `json:"parentId,omitempty"`
}

// NewGetOrgInfoResponseResult instantiates a new GetOrgInfoResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetOrgInfoResponseResult() *GetOrgInfoResponseResult {
	this := GetOrgInfoResponseResult{}
	return &this
}

// NewGetOrgInfoResponseResultWithDefaults instantiates a new GetOrgInfoResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetOrgInfoResponseResultWithDefaults() *GetOrgInfoResponseResult {
	this := GetOrgInfoResponseResult{}
	return &this
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *GetOrgInfoResponseResult) GetOrgId() string {
	if o == nil || IsNil(o.OrgId) {
		var ret string
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrgInfoResponseResult) GetOrgIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *GetOrgInfoResponseResult) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given string and assigns it to the OrgId field.
func (o *GetOrgInfoResponseResult) SetOrgId(v string) {
	o.OrgId = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *GetOrgInfoResponseResult) GetCreated() string {
	if o == nil || IsNil(o.Created) {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrgInfoResponseResult) GetCreatedOk() (*string, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *GetOrgInfoResponseResult) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *GetOrgInfoResponseResult) SetCreated(v string) {
	o.Created = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *GetOrgInfoResponseResult) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrgInfoResponseResult) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *GetOrgInfoResponseResult) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *GetOrgInfoResponseResult) SetDescription(v string) {
	o.Description = &v
}

// GetLogo returns the Logo field value if set, zero value otherwise.
func (o *GetOrgInfoResponseResult) GetLogo() string {
	if o == nil || IsNil(o.Logo) {
		var ret string
		return ret
	}
	return *o.Logo
}

// GetLogoOk returns a tuple with the Logo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrgInfoResponseResult) GetLogoOk() (*string, bool) {
	if o == nil || IsNil(o.Logo) {
		return nil, false
	}
	return o.Logo, true
}

// HasLogo returns a boolean if a field has been set.
func (o *GetOrgInfoResponseResult) HasLogo() bool {
	if o != nil && !IsNil(o.Logo) {
		return true
	}

	return false
}

// SetLogo gets a reference to the given string and assigns it to the Logo field.
func (o *GetOrgInfoResponseResult) SetLogo(v string) {
	o.Logo = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetOrgInfoResponseResult) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrgInfoResponseResult) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetOrgInfoResponseResult) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetOrgInfoResponseResult) SetName(v string) {
	o.Name = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *GetOrgInfoResponseResult) GetLabels() []string {
	if o == nil || IsNil(o.Labels) {
		var ret []string
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrgInfoResponseResult) GetLabelsOk() ([]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *GetOrgInfoResponseResult) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *GetOrgInfoResponseResult) SetLabels(v []string) {
	o.Labels = v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise.
func (o *GetOrgInfoResponseResult) GetCreatorId() string {
	if o == nil || IsNil(o.CreatorId) {
		var ret string
		return ret
	}
	return *o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrgInfoResponseResult) GetCreatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorId) {
		return nil, false
	}
	return o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *GetOrgInfoResponseResult) HasCreatorId() bool {
	if o != nil && !IsNil(o.CreatorId) {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given string and assigns it to the CreatorId field.
func (o *GetOrgInfoResponseResult) SetCreatorId(v string) {
	o.CreatorId = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *GetOrgInfoResponseResult) GetParentId() string {
	if o == nil || IsNil(o.ParentId) {
		var ret string
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrgInfoResponseResult) GetParentIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentId) {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *GetOrgInfoResponseResult) HasParentId() bool {
	if o != nil && !IsNil(o.ParentId) {
		return true
	}

	return false
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *GetOrgInfoResponseResult) SetParentId(v string) {
	o.ParentId = &v
}

func (o GetOrgInfoResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetOrgInfoResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OrgId) {
		toSerialize["orgId"] = o.OrgId
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Logo) {
		toSerialize["logo"] = o.Logo
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.CreatorId) {
		toSerialize["creatorId"] = o.CreatorId
	}
	if !IsNil(o.ParentId) {
		toSerialize["parentId"] = o.ParentId
	}
	return toSerialize, nil
}

type NullableGetOrgInfoResponseResult struct {
	value *GetOrgInfoResponseResult
	isSet bool
}

func (v NullableGetOrgInfoResponseResult) Get() *GetOrgInfoResponseResult {
	return v.value
}

func (v *NullableGetOrgInfoResponseResult) Set(val *GetOrgInfoResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableGetOrgInfoResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableGetOrgInfoResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetOrgInfoResponseResult(val *GetOrgInfoResponseResult) *NullableGetOrgInfoResponseResult {
	return &NullableGetOrgInfoResponseResult{value: val, isSet: true}
}

func (v NullableGetOrgInfoResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetOrgInfoResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


