/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetPlanV3ResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetPlanV3ResponseResult{}

// GetPlanV3ResponseResult struct for GetPlanV3ResponseResult
type GetPlanV3ResponseResult struct {
	// 计划ID
	Id *string `json:"id,omitempty"`
	// 组织ID
	OrganizationId *string `json:"organizationId,omitempty"`
	// 项目ID
	ProjectId *string `json:"projectId,omitempty"`
	// 计划标题
	Subject *string `json:"subject,omitempty"`
	// 计划开始时间(UTC)
	StartDate *string `json:"startDate,omitempty"`
	// 计划截止时间(UTC)
	DueDate *string `json:"dueDate,omitempty"`
	// 计划状态
	Status *string `json:"status,omitempty"`
	// 创建者ID
	CreatorId *string `json:"creatorId,omitempty"`
	// 创建时间(UTC)
	Created *string `json:"created,omitempty"`
	// 修改者ID
	ModifierId *string `json:"modifierId,omitempty"`
	// 更新时间(UTC)
	Updated *string `json:"updated,omitempty"`
	// 计划可见性
	Visible *string `json:"visible,omitempty"`
	// 发布时间(UTC)
	PublishTime *string `json:"publishTime,omitempty"`
	// 发布者ID
	PublishUserId *string `json:"publishUserId,omitempty"`
	ApprovalInfo *GetPlanV3ResponseResultApprovalInfo `json:"approvalInfo,omitempty"`
	LatestOnlineVersion *GetPlanV3ResponseResultLatestOnlineVersion `json:"latestOnlineVersion,omitempty"`
	LatestVersion *GetPlanV3ResponseResultLatestVersion `json:"latestVersion,omitempty"`
}

// NewGetPlanV3ResponseResult instantiates a new GetPlanV3ResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetPlanV3ResponseResult() *GetPlanV3ResponseResult {
	this := GetPlanV3ResponseResult{}
	return &this
}

// NewGetPlanV3ResponseResultWithDefaults instantiates a new GetPlanV3ResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetPlanV3ResponseResultWithDefaults() *GetPlanV3ResponseResult {
	this := GetPlanV3ResponseResult{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetPlanV3ResponseResult) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPlanV3ResponseResult) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetPlanV3ResponseResult) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetPlanV3ResponseResult) SetId(v string) {
	o.Id = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *GetPlanV3ResponseResult) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPlanV3ResponseResult) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *GetPlanV3ResponseResult) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *GetPlanV3ResponseResult) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *GetPlanV3ResponseResult) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId) {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPlanV3ResponseResult) GetProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *GetPlanV3ResponseResult) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *GetPlanV3ResponseResult) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetSubject returns the Subject field value if set, zero value otherwise.
func (o *GetPlanV3ResponseResult) GetSubject() string {
	if o == nil || IsNil(o.Subject) {
		var ret string
		return ret
	}
	return *o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPlanV3ResponseResult) GetSubjectOk() (*string, bool) {
	if o == nil || IsNil(o.Subject) {
		return nil, false
	}
	return o.Subject, true
}

// HasSubject returns a boolean if a field has been set.
func (o *GetPlanV3ResponseResult) HasSubject() bool {
	if o != nil && !IsNil(o.Subject) {
		return true
	}

	return false
}

// SetSubject gets a reference to the given string and assigns it to the Subject field.
func (o *GetPlanV3ResponseResult) SetSubject(v string) {
	o.Subject = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *GetPlanV3ResponseResult) GetStartDate() string {
	if o == nil || IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPlanV3ResponseResult) GetStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *GetPlanV3ResponseResult) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *GetPlanV3ResponseResult) SetStartDate(v string) {
	o.StartDate = &v
}

// GetDueDate returns the DueDate field value if set, zero value otherwise.
func (o *GetPlanV3ResponseResult) GetDueDate() string {
	if o == nil || IsNil(o.DueDate) {
		var ret string
		return ret
	}
	return *o.DueDate
}

// GetDueDateOk returns a tuple with the DueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPlanV3ResponseResult) GetDueDateOk() (*string, bool) {
	if o == nil || IsNil(o.DueDate) {
		return nil, false
	}
	return o.DueDate, true
}

// HasDueDate returns a boolean if a field has been set.
func (o *GetPlanV3ResponseResult) HasDueDate() bool {
	if o != nil && !IsNil(o.DueDate) {
		return true
	}

	return false
}

// SetDueDate gets a reference to the given string and assigns it to the DueDate field.
func (o *GetPlanV3ResponseResult) SetDueDate(v string) {
	o.DueDate = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GetPlanV3ResponseResult) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPlanV3ResponseResult) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GetPlanV3ResponseResult) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *GetPlanV3ResponseResult) SetStatus(v string) {
	o.Status = &v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise.
func (o *GetPlanV3ResponseResult) GetCreatorId() string {
	if o == nil || IsNil(o.CreatorId) {
		var ret string
		return ret
	}
	return *o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPlanV3ResponseResult) GetCreatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorId) {
		return nil, false
	}
	return o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *GetPlanV3ResponseResult) HasCreatorId() bool {
	if o != nil && !IsNil(o.CreatorId) {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given string and assigns it to the CreatorId field.
func (o *GetPlanV3ResponseResult) SetCreatorId(v string) {
	o.CreatorId = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *GetPlanV3ResponseResult) GetCreated() string {
	if o == nil || IsNil(o.Created) {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPlanV3ResponseResult) GetCreatedOk() (*string, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *GetPlanV3ResponseResult) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *GetPlanV3ResponseResult) SetCreated(v string) {
	o.Created = &v
}

// GetModifierId returns the ModifierId field value if set, zero value otherwise.
func (o *GetPlanV3ResponseResult) GetModifierId() string {
	if o == nil || IsNil(o.ModifierId) {
		var ret string
		return ret
	}
	return *o.ModifierId
}

// GetModifierIdOk returns a tuple with the ModifierId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPlanV3ResponseResult) GetModifierIdOk() (*string, bool) {
	if o == nil || IsNil(o.ModifierId) {
		return nil, false
	}
	return o.ModifierId, true
}

// HasModifierId returns a boolean if a field has been set.
func (o *GetPlanV3ResponseResult) HasModifierId() bool {
	if o != nil && !IsNil(o.ModifierId) {
		return true
	}

	return false
}

// SetModifierId gets a reference to the given string and assigns it to the ModifierId field.
func (o *GetPlanV3ResponseResult) SetModifierId(v string) {
	o.ModifierId = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *GetPlanV3ResponseResult) GetUpdated() string {
	if o == nil || IsNil(o.Updated) {
		var ret string
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPlanV3ResponseResult) GetUpdatedOk() (*string, bool) {
	if o == nil || IsNil(o.Updated) {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *GetPlanV3ResponseResult) HasUpdated() bool {
	if o != nil && !IsNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given string and assigns it to the Updated field.
func (o *GetPlanV3ResponseResult) SetUpdated(v string) {
	o.Updated = &v
}

// GetVisible returns the Visible field value if set, zero value otherwise.
func (o *GetPlanV3ResponseResult) GetVisible() string {
	if o == nil || IsNil(o.Visible) {
		var ret string
		return ret
	}
	return *o.Visible
}

// GetVisibleOk returns a tuple with the Visible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPlanV3ResponseResult) GetVisibleOk() (*string, bool) {
	if o == nil || IsNil(o.Visible) {
		return nil, false
	}
	return o.Visible, true
}

// HasVisible returns a boolean if a field has been set.
func (o *GetPlanV3ResponseResult) HasVisible() bool {
	if o != nil && !IsNil(o.Visible) {
		return true
	}

	return false
}

// SetVisible gets a reference to the given string and assigns it to the Visible field.
func (o *GetPlanV3ResponseResult) SetVisible(v string) {
	o.Visible = &v
}

// GetPublishTime returns the PublishTime field value if set, zero value otherwise.
func (o *GetPlanV3ResponseResult) GetPublishTime() string {
	if o == nil || IsNil(o.PublishTime) {
		var ret string
		return ret
	}
	return *o.PublishTime
}

// GetPublishTimeOk returns a tuple with the PublishTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPlanV3ResponseResult) GetPublishTimeOk() (*string, bool) {
	if o == nil || IsNil(o.PublishTime) {
		return nil, false
	}
	return o.PublishTime, true
}

// HasPublishTime returns a boolean if a field has been set.
func (o *GetPlanV3ResponseResult) HasPublishTime() bool {
	if o != nil && !IsNil(o.PublishTime) {
		return true
	}

	return false
}

// SetPublishTime gets a reference to the given string and assigns it to the PublishTime field.
func (o *GetPlanV3ResponseResult) SetPublishTime(v string) {
	o.PublishTime = &v
}

// GetPublishUserId returns the PublishUserId field value if set, zero value otherwise.
func (o *GetPlanV3ResponseResult) GetPublishUserId() string {
	if o == nil || IsNil(o.PublishUserId) {
		var ret string
		return ret
	}
	return *o.PublishUserId
}

// GetPublishUserIdOk returns a tuple with the PublishUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPlanV3ResponseResult) GetPublishUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.PublishUserId) {
		return nil, false
	}
	return o.PublishUserId, true
}

// HasPublishUserId returns a boolean if a field has been set.
func (o *GetPlanV3ResponseResult) HasPublishUserId() bool {
	if o != nil && !IsNil(o.PublishUserId) {
		return true
	}

	return false
}

// SetPublishUserId gets a reference to the given string and assigns it to the PublishUserId field.
func (o *GetPlanV3ResponseResult) SetPublishUserId(v string) {
	o.PublishUserId = &v
}

// GetApprovalInfo returns the ApprovalInfo field value if set, zero value otherwise.
func (o *GetPlanV3ResponseResult) GetApprovalInfo() GetPlanV3ResponseResultApprovalInfo {
	if o == nil || IsNil(o.ApprovalInfo) {
		var ret GetPlanV3ResponseResultApprovalInfo
		return ret
	}
	return *o.ApprovalInfo
}

// GetApprovalInfoOk returns a tuple with the ApprovalInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPlanV3ResponseResult) GetApprovalInfoOk() (*GetPlanV3ResponseResultApprovalInfo, bool) {
	if o == nil || IsNil(o.ApprovalInfo) {
		return nil, false
	}
	return o.ApprovalInfo, true
}

// HasApprovalInfo returns a boolean if a field has been set.
func (o *GetPlanV3ResponseResult) HasApprovalInfo() bool {
	if o != nil && !IsNil(o.ApprovalInfo) {
		return true
	}

	return false
}

// SetApprovalInfo gets a reference to the given GetPlanV3ResponseResultApprovalInfo and assigns it to the ApprovalInfo field.
func (o *GetPlanV3ResponseResult) SetApprovalInfo(v GetPlanV3ResponseResultApprovalInfo) {
	o.ApprovalInfo = &v
}

// GetLatestOnlineVersion returns the LatestOnlineVersion field value if set, zero value otherwise.
func (o *GetPlanV3ResponseResult) GetLatestOnlineVersion() GetPlanV3ResponseResultLatestOnlineVersion {
	if o == nil || IsNil(o.LatestOnlineVersion) {
		var ret GetPlanV3ResponseResultLatestOnlineVersion
		return ret
	}
	return *o.LatestOnlineVersion
}

// GetLatestOnlineVersionOk returns a tuple with the LatestOnlineVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPlanV3ResponseResult) GetLatestOnlineVersionOk() (*GetPlanV3ResponseResultLatestOnlineVersion, bool) {
	if o == nil || IsNil(o.LatestOnlineVersion) {
		return nil, false
	}
	return o.LatestOnlineVersion, true
}

// HasLatestOnlineVersion returns a boolean if a field has been set.
func (o *GetPlanV3ResponseResult) HasLatestOnlineVersion() bool {
	if o != nil && !IsNil(o.LatestOnlineVersion) {
		return true
	}

	return false
}

// SetLatestOnlineVersion gets a reference to the given GetPlanV3ResponseResultLatestOnlineVersion and assigns it to the LatestOnlineVersion field.
func (o *GetPlanV3ResponseResult) SetLatestOnlineVersion(v GetPlanV3ResponseResultLatestOnlineVersion) {
	o.LatestOnlineVersion = &v
}

// GetLatestVersion returns the LatestVersion field value if set, zero value otherwise.
func (o *GetPlanV3ResponseResult) GetLatestVersion() GetPlanV3ResponseResultLatestVersion {
	if o == nil || IsNil(o.LatestVersion) {
		var ret GetPlanV3ResponseResultLatestVersion
		return ret
	}
	return *o.LatestVersion
}

// GetLatestVersionOk returns a tuple with the LatestVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPlanV3ResponseResult) GetLatestVersionOk() (*GetPlanV3ResponseResultLatestVersion, bool) {
	if o == nil || IsNil(o.LatestVersion) {
		return nil, false
	}
	return o.LatestVersion, true
}

// HasLatestVersion returns a boolean if a field has been set.
func (o *GetPlanV3ResponseResult) HasLatestVersion() bool {
	if o != nil && !IsNil(o.LatestVersion) {
		return true
	}

	return false
}

// SetLatestVersion gets a reference to the given GetPlanV3ResponseResultLatestVersion and assigns it to the LatestVersion field.
func (o *GetPlanV3ResponseResult) SetLatestVersion(v GetPlanV3ResponseResultLatestVersion) {
	o.LatestVersion = &v
}

func (o GetPlanV3ResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetPlanV3ResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if !IsNil(o.ProjectId) {
		toSerialize["projectId"] = o.ProjectId
	}
	if !IsNil(o.Subject) {
		toSerialize["subject"] = o.Subject
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.DueDate) {
		toSerialize["dueDate"] = o.DueDate
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.CreatorId) {
		toSerialize["creatorId"] = o.CreatorId
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.ModifierId) {
		toSerialize["modifierId"] = o.ModifierId
	}
	if !IsNil(o.Updated) {
		toSerialize["updated"] = o.Updated
	}
	if !IsNil(o.Visible) {
		toSerialize["visible"] = o.Visible
	}
	if !IsNil(o.PublishTime) {
		toSerialize["publishTime"] = o.PublishTime
	}
	if !IsNil(o.PublishUserId) {
		toSerialize["publishUserId"] = o.PublishUserId
	}
	if !IsNil(o.ApprovalInfo) {
		toSerialize["approvalInfo"] = o.ApprovalInfo
	}
	if !IsNil(o.LatestOnlineVersion) {
		toSerialize["latestOnlineVersion"] = o.LatestOnlineVersion
	}
	if !IsNil(o.LatestVersion) {
		toSerialize["latestVersion"] = o.LatestVersion
	}
	return toSerialize, nil
}

type NullableGetPlanV3ResponseResult struct {
	value *GetPlanV3ResponseResult
	isSet bool
}

func (v NullableGetPlanV3ResponseResult) Get() *GetPlanV3ResponseResult {
	return v.value
}

func (v *NullableGetPlanV3ResponseResult) Set(val *GetPlanV3ResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPlanV3ResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPlanV3ResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPlanV3ResponseResult(val *GetPlanV3ResponseResult) *NullableGetPlanV3ResponseResult {
	return &NullableGetPlanV3ResponseResult{value: val, isSet: true}
}

func (v NullableGetPlanV3ResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetPlanV3ResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


