/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetPlanV3ResponseResultApprovalInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetPlanV3ResponseResultApprovalInfo{}

// GetPlanV3ResponseResultApprovalInfo 审批信息
type GetPlanV3ResponseResultApprovalInfo struct {
	// 审批ID
	Id *string `json:"id,omitempty"`
	// 项目计划ID
	ProjectPlanId *string `json:"projectPlanId,omitempty"`
	// 项目计划版本ID
	ProjectPlanVersionId *string `json:"projectPlanVersionId,omitempty"`
	// 来源ID
	SourceId *string `json:"sourceId,omitempty"`
	// 详情URL
	DetailUrl *string `json:"detailUrl,omitempty"`
	// 审批平台
	Platform *string `json:"platform,omitempty"`
	// 审批者ID
	ApproverId *string `json:"approverId,omitempty"`
	// 信息
	Info *string `json:"info,omitempty"`
	// 是否禁用
	IsDisabled *bool `json:"isDisabled,omitempty"`
	// 计划审批状态，enum['apprpved','refused','approving','canceled']
	Status *string `json:"status,omitempty"`
}

// NewGetPlanV3ResponseResultApprovalInfo instantiates a new GetPlanV3ResponseResultApprovalInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetPlanV3ResponseResultApprovalInfo() *GetPlanV3ResponseResultApprovalInfo {
	this := GetPlanV3ResponseResultApprovalInfo{}
	return &this
}

// NewGetPlanV3ResponseResultApprovalInfoWithDefaults instantiates a new GetPlanV3ResponseResultApprovalInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetPlanV3ResponseResultApprovalInfoWithDefaults() *GetPlanV3ResponseResultApprovalInfo {
	this := GetPlanV3ResponseResultApprovalInfo{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetPlanV3ResponseResultApprovalInfo) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPlanV3ResponseResultApprovalInfo) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetPlanV3ResponseResultApprovalInfo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetPlanV3ResponseResultApprovalInfo) SetId(v string) {
	o.Id = &v
}

// GetProjectPlanId returns the ProjectPlanId field value if set, zero value otherwise.
func (o *GetPlanV3ResponseResultApprovalInfo) GetProjectPlanId() string {
	if o == nil || IsNil(o.ProjectPlanId) {
		var ret string
		return ret
	}
	return *o.ProjectPlanId
}

// GetProjectPlanIdOk returns a tuple with the ProjectPlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPlanV3ResponseResultApprovalInfo) GetProjectPlanIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectPlanId) {
		return nil, false
	}
	return o.ProjectPlanId, true
}

// HasProjectPlanId returns a boolean if a field has been set.
func (o *GetPlanV3ResponseResultApprovalInfo) HasProjectPlanId() bool {
	if o != nil && !IsNil(o.ProjectPlanId) {
		return true
	}

	return false
}

// SetProjectPlanId gets a reference to the given string and assigns it to the ProjectPlanId field.
func (o *GetPlanV3ResponseResultApprovalInfo) SetProjectPlanId(v string) {
	o.ProjectPlanId = &v
}

// GetProjectPlanVersionId returns the ProjectPlanVersionId field value if set, zero value otherwise.
func (o *GetPlanV3ResponseResultApprovalInfo) GetProjectPlanVersionId() string {
	if o == nil || IsNil(o.ProjectPlanVersionId) {
		var ret string
		return ret
	}
	return *o.ProjectPlanVersionId
}

// GetProjectPlanVersionIdOk returns a tuple with the ProjectPlanVersionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPlanV3ResponseResultApprovalInfo) GetProjectPlanVersionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectPlanVersionId) {
		return nil, false
	}
	return o.ProjectPlanVersionId, true
}

// HasProjectPlanVersionId returns a boolean if a field has been set.
func (o *GetPlanV3ResponseResultApprovalInfo) HasProjectPlanVersionId() bool {
	if o != nil && !IsNil(o.ProjectPlanVersionId) {
		return true
	}

	return false
}

// SetProjectPlanVersionId gets a reference to the given string and assigns it to the ProjectPlanVersionId field.
func (o *GetPlanV3ResponseResultApprovalInfo) SetProjectPlanVersionId(v string) {
	o.ProjectPlanVersionId = &v
}

// GetSourceId returns the SourceId field value if set, zero value otherwise.
func (o *GetPlanV3ResponseResultApprovalInfo) GetSourceId() string {
	if o == nil || IsNil(o.SourceId) {
		var ret string
		return ret
	}
	return *o.SourceId
}

// GetSourceIdOk returns a tuple with the SourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPlanV3ResponseResultApprovalInfo) GetSourceIdOk() (*string, bool) {
	if o == nil || IsNil(o.SourceId) {
		return nil, false
	}
	return o.SourceId, true
}

// HasSourceId returns a boolean if a field has been set.
func (o *GetPlanV3ResponseResultApprovalInfo) HasSourceId() bool {
	if o != nil && !IsNil(o.SourceId) {
		return true
	}

	return false
}

// SetSourceId gets a reference to the given string and assigns it to the SourceId field.
func (o *GetPlanV3ResponseResultApprovalInfo) SetSourceId(v string) {
	o.SourceId = &v
}

// GetDetailUrl returns the DetailUrl field value if set, zero value otherwise.
func (o *GetPlanV3ResponseResultApprovalInfo) GetDetailUrl() string {
	if o == nil || IsNil(o.DetailUrl) {
		var ret string
		return ret
	}
	return *o.DetailUrl
}

// GetDetailUrlOk returns a tuple with the DetailUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPlanV3ResponseResultApprovalInfo) GetDetailUrlOk() (*string, bool) {
	if o == nil || IsNil(o.DetailUrl) {
		return nil, false
	}
	return o.DetailUrl, true
}

// HasDetailUrl returns a boolean if a field has been set.
func (o *GetPlanV3ResponseResultApprovalInfo) HasDetailUrl() bool {
	if o != nil && !IsNil(o.DetailUrl) {
		return true
	}

	return false
}

// SetDetailUrl gets a reference to the given string and assigns it to the DetailUrl field.
func (o *GetPlanV3ResponseResultApprovalInfo) SetDetailUrl(v string) {
	o.DetailUrl = &v
}

// GetPlatform returns the Platform field value if set, zero value otherwise.
func (o *GetPlanV3ResponseResultApprovalInfo) GetPlatform() string {
	if o == nil || IsNil(o.Platform) {
		var ret string
		return ret
	}
	return *o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPlanV3ResponseResultApprovalInfo) GetPlatformOk() (*string, bool) {
	if o == nil || IsNil(o.Platform) {
		return nil, false
	}
	return o.Platform, true
}

// HasPlatform returns a boolean if a field has been set.
func (o *GetPlanV3ResponseResultApprovalInfo) HasPlatform() bool {
	if o != nil && !IsNil(o.Platform) {
		return true
	}

	return false
}

// SetPlatform gets a reference to the given string and assigns it to the Platform field.
func (o *GetPlanV3ResponseResultApprovalInfo) SetPlatform(v string) {
	o.Platform = &v
}

// GetApproverId returns the ApproverId field value if set, zero value otherwise.
func (o *GetPlanV3ResponseResultApprovalInfo) GetApproverId() string {
	if o == nil || IsNil(o.ApproverId) {
		var ret string
		return ret
	}
	return *o.ApproverId
}

// GetApproverIdOk returns a tuple with the ApproverId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPlanV3ResponseResultApprovalInfo) GetApproverIdOk() (*string, bool) {
	if o == nil || IsNil(o.ApproverId) {
		return nil, false
	}
	return o.ApproverId, true
}

// HasApproverId returns a boolean if a field has been set.
func (o *GetPlanV3ResponseResultApprovalInfo) HasApproverId() bool {
	if o != nil && !IsNil(o.ApproverId) {
		return true
	}

	return false
}

// SetApproverId gets a reference to the given string and assigns it to the ApproverId field.
func (o *GetPlanV3ResponseResultApprovalInfo) SetApproverId(v string) {
	o.ApproverId = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *GetPlanV3ResponseResultApprovalInfo) GetInfo() string {
	if o == nil || IsNil(o.Info) {
		var ret string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPlanV3ResponseResultApprovalInfo) GetInfoOk() (*string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *GetPlanV3ResponseResultApprovalInfo) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given string and assigns it to the Info field.
func (o *GetPlanV3ResponseResultApprovalInfo) SetInfo(v string) {
	o.Info = &v
}

// GetIsDisabled returns the IsDisabled field value if set, zero value otherwise.
func (o *GetPlanV3ResponseResultApprovalInfo) GetIsDisabled() bool {
	if o == nil || IsNil(o.IsDisabled) {
		var ret bool
		return ret
	}
	return *o.IsDisabled
}

// GetIsDisabledOk returns a tuple with the IsDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPlanV3ResponseResultApprovalInfo) GetIsDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDisabled) {
		return nil, false
	}
	return o.IsDisabled, true
}

// HasIsDisabled returns a boolean if a field has been set.
func (o *GetPlanV3ResponseResultApprovalInfo) HasIsDisabled() bool {
	if o != nil && !IsNil(o.IsDisabled) {
		return true
	}

	return false
}

// SetIsDisabled gets a reference to the given bool and assigns it to the IsDisabled field.
func (o *GetPlanV3ResponseResultApprovalInfo) SetIsDisabled(v bool) {
	o.IsDisabled = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GetPlanV3ResponseResultApprovalInfo) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPlanV3ResponseResultApprovalInfo) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GetPlanV3ResponseResultApprovalInfo) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *GetPlanV3ResponseResultApprovalInfo) SetStatus(v string) {
	o.Status = &v
}

func (o GetPlanV3ResponseResultApprovalInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetPlanV3ResponseResultApprovalInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ProjectPlanId) {
		toSerialize["projectPlanId"] = o.ProjectPlanId
	}
	if !IsNil(o.ProjectPlanVersionId) {
		toSerialize["projectPlanVersionId"] = o.ProjectPlanVersionId
	}
	if !IsNil(o.SourceId) {
		toSerialize["sourceId"] = o.SourceId
	}
	if !IsNil(o.DetailUrl) {
		toSerialize["detailUrl"] = o.DetailUrl
	}
	if !IsNil(o.Platform) {
		toSerialize["platform"] = o.Platform
	}
	if !IsNil(o.ApproverId) {
		toSerialize["approverId"] = o.ApproverId
	}
	if !IsNil(o.Info) {
		toSerialize["info"] = o.Info
	}
	if !IsNil(o.IsDisabled) {
		toSerialize["isDisabled"] = o.IsDisabled
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableGetPlanV3ResponseResultApprovalInfo struct {
	value *GetPlanV3ResponseResultApprovalInfo
	isSet bool
}

func (v NullableGetPlanV3ResponseResultApprovalInfo) Get() *GetPlanV3ResponseResultApprovalInfo {
	return v.value
}

func (v *NullableGetPlanV3ResponseResultApprovalInfo) Set(val *GetPlanV3ResponseResultApprovalInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPlanV3ResponseResultApprovalInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPlanV3ResponseResultApprovalInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPlanV3ResponseResultApprovalInfo(val *GetPlanV3ResponseResultApprovalInfo) *NullableGetPlanV3ResponseResultApprovalInfo {
	return &NullableGetPlanV3ResponseResultApprovalInfo{value: val, isSet: true}
}

func (v NullableGetPlanV3ResponseResultApprovalInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetPlanV3ResponseResultApprovalInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


