/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the GetProgramsV3ResponseResultInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetProgramsV3ResponseResultInner{}

// GetProgramsV3ResponseResultInner struct for GetProgramsV3ResponseResultInner
type GetProgramsV3ResponseResultInner struct {
	// 项目集 ID
	Id *string `json:"id,omitempty"`
	// 项目集名称
	Name *string `json:"name,omitempty"`
	// 组织 ID
	OrganizationId *string `json:"organizationId,omitempty"`
	// 创建者 ID
	CreatorId *string `json:"creatorId,omitempty"`
	// 持有者 ID
	HolderId *string `json:"holderId,omitempty"`
	// 分组 ID
	GroupId *string `json:"groupId,omitempty"`
	// 链接分组 ID 列表
	LinkGroupIds []string `json:"linkGroupIds,omitempty"`
	// 祖先 ID 列表
	AncestorIds []string `json:"ancestorIds,omitempty"`
	// 描述信息
	Description *string `json:"description,omitempty"`
	// 创建时间
	Created *time.Time `json:"created,omitempty"`
	// 修改时间
	Updated *time.Time `json:"updated,omitempty"`
	// 项目集开始时间
	StartDate *time.Time `json:"startDate,omitempty"`
	// 项目集截止时间
	DueDate *time.Time `json:"dueDate,omitempty"`
	// 是否已删除
	IsDeleted *bool `json:"isDeleted,omitempty"`
	StatusDegree *GetProgramsV3ResponseResultInnerStatusDegree `json:"statusDegree,omitempty"`
	// 虚拟项目 ID
	VirtualProjectId *string `json:"virtualProjectId,omitempty"`
	// 如果该字段不为空，则表示是旧版项目分组升级，该字段为项目分组ID
	FromProjecttagId *string `json:"fromProjecttagId,omitempty"`
}

// NewGetProgramsV3ResponseResultInner instantiates a new GetProgramsV3ResponseResultInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetProgramsV3ResponseResultInner() *GetProgramsV3ResponseResultInner {
	this := GetProgramsV3ResponseResultInner{}
	return &this
}

// NewGetProgramsV3ResponseResultInnerWithDefaults instantiates a new GetProgramsV3ResponseResultInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetProgramsV3ResponseResultInnerWithDefaults() *GetProgramsV3ResponseResultInner {
	this := GetProgramsV3ResponseResultInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetProgramsV3ResponseResultInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProgramsV3ResponseResultInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetProgramsV3ResponseResultInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetProgramsV3ResponseResultInner) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetProgramsV3ResponseResultInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProgramsV3ResponseResultInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetProgramsV3ResponseResultInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetProgramsV3ResponseResultInner) SetName(v string) {
	o.Name = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *GetProgramsV3ResponseResultInner) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProgramsV3ResponseResultInner) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *GetProgramsV3ResponseResultInner) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *GetProgramsV3ResponseResultInner) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise.
func (o *GetProgramsV3ResponseResultInner) GetCreatorId() string {
	if o == nil || IsNil(o.CreatorId) {
		var ret string
		return ret
	}
	return *o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProgramsV3ResponseResultInner) GetCreatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorId) {
		return nil, false
	}
	return o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *GetProgramsV3ResponseResultInner) HasCreatorId() bool {
	if o != nil && !IsNil(o.CreatorId) {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given string and assigns it to the CreatorId field.
func (o *GetProgramsV3ResponseResultInner) SetCreatorId(v string) {
	o.CreatorId = &v
}

// GetHolderId returns the HolderId field value if set, zero value otherwise.
func (o *GetProgramsV3ResponseResultInner) GetHolderId() string {
	if o == nil || IsNil(o.HolderId) {
		var ret string
		return ret
	}
	return *o.HolderId
}

// GetHolderIdOk returns a tuple with the HolderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProgramsV3ResponseResultInner) GetHolderIdOk() (*string, bool) {
	if o == nil || IsNil(o.HolderId) {
		return nil, false
	}
	return o.HolderId, true
}

// HasHolderId returns a boolean if a field has been set.
func (o *GetProgramsV3ResponseResultInner) HasHolderId() bool {
	if o != nil && !IsNil(o.HolderId) {
		return true
	}

	return false
}

// SetHolderId gets a reference to the given string and assigns it to the HolderId field.
func (o *GetProgramsV3ResponseResultInner) SetHolderId(v string) {
	o.HolderId = &v
}

// GetGroupId returns the GroupId field value if set, zero value otherwise.
func (o *GetProgramsV3ResponseResultInner) GetGroupId() string {
	if o == nil || IsNil(o.GroupId) {
		var ret string
		return ret
	}
	return *o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProgramsV3ResponseResultInner) GetGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.GroupId) {
		return nil, false
	}
	return o.GroupId, true
}

// HasGroupId returns a boolean if a field has been set.
func (o *GetProgramsV3ResponseResultInner) HasGroupId() bool {
	if o != nil && !IsNil(o.GroupId) {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given string and assigns it to the GroupId field.
func (o *GetProgramsV3ResponseResultInner) SetGroupId(v string) {
	o.GroupId = &v
}

// GetLinkGroupIds returns the LinkGroupIds field value if set, zero value otherwise.
func (o *GetProgramsV3ResponseResultInner) GetLinkGroupIds() []string {
	if o == nil || IsNil(o.LinkGroupIds) {
		var ret []string
		return ret
	}
	return o.LinkGroupIds
}

// GetLinkGroupIdsOk returns a tuple with the LinkGroupIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProgramsV3ResponseResultInner) GetLinkGroupIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.LinkGroupIds) {
		return nil, false
	}
	return o.LinkGroupIds, true
}

// HasLinkGroupIds returns a boolean if a field has been set.
func (o *GetProgramsV3ResponseResultInner) HasLinkGroupIds() bool {
	if o != nil && !IsNil(o.LinkGroupIds) {
		return true
	}

	return false
}

// SetLinkGroupIds gets a reference to the given []string and assigns it to the LinkGroupIds field.
func (o *GetProgramsV3ResponseResultInner) SetLinkGroupIds(v []string) {
	o.LinkGroupIds = v
}

// GetAncestorIds returns the AncestorIds field value if set, zero value otherwise.
func (o *GetProgramsV3ResponseResultInner) GetAncestorIds() []string {
	if o == nil || IsNil(o.AncestorIds) {
		var ret []string
		return ret
	}
	return o.AncestorIds
}

// GetAncestorIdsOk returns a tuple with the AncestorIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProgramsV3ResponseResultInner) GetAncestorIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.AncestorIds) {
		return nil, false
	}
	return o.AncestorIds, true
}

// HasAncestorIds returns a boolean if a field has been set.
func (o *GetProgramsV3ResponseResultInner) HasAncestorIds() bool {
	if o != nil && !IsNil(o.AncestorIds) {
		return true
	}

	return false
}

// SetAncestorIds gets a reference to the given []string and assigns it to the AncestorIds field.
func (o *GetProgramsV3ResponseResultInner) SetAncestorIds(v []string) {
	o.AncestorIds = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *GetProgramsV3ResponseResultInner) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProgramsV3ResponseResultInner) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *GetProgramsV3ResponseResultInner) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *GetProgramsV3ResponseResultInner) SetDescription(v string) {
	o.Description = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *GetProgramsV3ResponseResultInner) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProgramsV3ResponseResultInner) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *GetProgramsV3ResponseResultInner) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *GetProgramsV3ResponseResultInner) SetCreated(v time.Time) {
	o.Created = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *GetProgramsV3ResponseResultInner) GetUpdated() time.Time {
	if o == nil || IsNil(o.Updated) {
		var ret time.Time
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProgramsV3ResponseResultInner) GetUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Updated) {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *GetProgramsV3ResponseResultInner) HasUpdated() bool {
	if o != nil && !IsNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given time.Time and assigns it to the Updated field.
func (o *GetProgramsV3ResponseResultInner) SetUpdated(v time.Time) {
	o.Updated = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *GetProgramsV3ResponseResultInner) GetStartDate() time.Time {
	if o == nil || IsNil(o.StartDate) {
		var ret time.Time
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProgramsV3ResponseResultInner) GetStartDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *GetProgramsV3ResponseResultInner) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given time.Time and assigns it to the StartDate field.
func (o *GetProgramsV3ResponseResultInner) SetStartDate(v time.Time) {
	o.StartDate = &v
}

// GetDueDate returns the DueDate field value if set, zero value otherwise.
func (o *GetProgramsV3ResponseResultInner) GetDueDate() time.Time {
	if o == nil || IsNil(o.DueDate) {
		var ret time.Time
		return ret
	}
	return *o.DueDate
}

// GetDueDateOk returns a tuple with the DueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProgramsV3ResponseResultInner) GetDueDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DueDate) {
		return nil, false
	}
	return o.DueDate, true
}

// HasDueDate returns a boolean if a field has been set.
func (o *GetProgramsV3ResponseResultInner) HasDueDate() bool {
	if o != nil && !IsNil(o.DueDate) {
		return true
	}

	return false
}

// SetDueDate gets a reference to the given time.Time and assigns it to the DueDate field.
func (o *GetProgramsV3ResponseResultInner) SetDueDate(v time.Time) {
	o.DueDate = &v
}

// GetIsDeleted returns the IsDeleted field value if set, zero value otherwise.
func (o *GetProgramsV3ResponseResultInner) GetIsDeleted() bool {
	if o == nil || IsNil(o.IsDeleted) {
		var ret bool
		return ret
	}
	return *o.IsDeleted
}

// GetIsDeletedOk returns a tuple with the IsDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProgramsV3ResponseResultInner) GetIsDeletedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDeleted) {
		return nil, false
	}
	return o.IsDeleted, true
}

// HasIsDeleted returns a boolean if a field has been set.
func (o *GetProgramsV3ResponseResultInner) HasIsDeleted() bool {
	if o != nil && !IsNil(o.IsDeleted) {
		return true
	}

	return false
}

// SetIsDeleted gets a reference to the given bool and assigns it to the IsDeleted field.
func (o *GetProgramsV3ResponseResultInner) SetIsDeleted(v bool) {
	o.IsDeleted = &v
}

// GetStatusDegree returns the StatusDegree field value if set, zero value otherwise.
func (o *GetProgramsV3ResponseResultInner) GetStatusDegree() GetProgramsV3ResponseResultInnerStatusDegree {
	if o == nil || IsNil(o.StatusDegree) {
		var ret GetProgramsV3ResponseResultInnerStatusDegree
		return ret
	}
	return *o.StatusDegree
}

// GetStatusDegreeOk returns a tuple with the StatusDegree field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProgramsV3ResponseResultInner) GetStatusDegreeOk() (*GetProgramsV3ResponseResultInnerStatusDegree, bool) {
	if o == nil || IsNil(o.StatusDegree) {
		return nil, false
	}
	return o.StatusDegree, true
}

// HasStatusDegree returns a boolean if a field has been set.
func (o *GetProgramsV3ResponseResultInner) HasStatusDegree() bool {
	if o != nil && !IsNil(o.StatusDegree) {
		return true
	}

	return false
}

// SetStatusDegree gets a reference to the given GetProgramsV3ResponseResultInnerStatusDegree and assigns it to the StatusDegree field.
func (o *GetProgramsV3ResponseResultInner) SetStatusDegree(v GetProgramsV3ResponseResultInnerStatusDegree) {
	o.StatusDegree = &v
}

// GetVirtualProjectId returns the VirtualProjectId field value if set, zero value otherwise.
func (o *GetProgramsV3ResponseResultInner) GetVirtualProjectId() string {
	if o == nil || IsNil(o.VirtualProjectId) {
		var ret string
		return ret
	}
	return *o.VirtualProjectId
}

// GetVirtualProjectIdOk returns a tuple with the VirtualProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProgramsV3ResponseResultInner) GetVirtualProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.VirtualProjectId) {
		return nil, false
	}
	return o.VirtualProjectId, true
}

// HasVirtualProjectId returns a boolean if a field has been set.
func (o *GetProgramsV3ResponseResultInner) HasVirtualProjectId() bool {
	if o != nil && !IsNil(o.VirtualProjectId) {
		return true
	}

	return false
}

// SetVirtualProjectId gets a reference to the given string and assigns it to the VirtualProjectId field.
func (o *GetProgramsV3ResponseResultInner) SetVirtualProjectId(v string) {
	o.VirtualProjectId = &v
}

// GetFromProjecttagId returns the FromProjecttagId field value if set, zero value otherwise.
func (o *GetProgramsV3ResponseResultInner) GetFromProjecttagId() string {
	if o == nil || IsNil(o.FromProjecttagId) {
		var ret string
		return ret
	}
	return *o.FromProjecttagId
}

// GetFromProjecttagIdOk returns a tuple with the FromProjecttagId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProgramsV3ResponseResultInner) GetFromProjecttagIdOk() (*string, bool) {
	if o == nil || IsNil(o.FromProjecttagId) {
		return nil, false
	}
	return o.FromProjecttagId, true
}

// HasFromProjecttagId returns a boolean if a field has been set.
func (o *GetProgramsV3ResponseResultInner) HasFromProjecttagId() bool {
	if o != nil && !IsNil(o.FromProjecttagId) {
		return true
	}

	return false
}

// SetFromProjecttagId gets a reference to the given string and assigns it to the FromProjecttagId field.
func (o *GetProgramsV3ResponseResultInner) SetFromProjecttagId(v string) {
	o.FromProjecttagId = &v
}

func (o GetProgramsV3ResponseResultInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetProgramsV3ResponseResultInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if !IsNil(o.CreatorId) {
		toSerialize["creatorId"] = o.CreatorId
	}
	if !IsNil(o.HolderId) {
		toSerialize["holderId"] = o.HolderId
	}
	if !IsNil(o.GroupId) {
		toSerialize["groupId"] = o.GroupId
	}
	if !IsNil(o.LinkGroupIds) {
		toSerialize["linkGroupIds"] = o.LinkGroupIds
	}
	if !IsNil(o.AncestorIds) {
		toSerialize["ancestorIds"] = o.AncestorIds
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.Updated) {
		toSerialize["updated"] = o.Updated
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.DueDate) {
		toSerialize["dueDate"] = o.DueDate
	}
	if !IsNil(o.IsDeleted) {
		toSerialize["isDeleted"] = o.IsDeleted
	}
	if !IsNil(o.StatusDegree) {
		toSerialize["statusDegree"] = o.StatusDegree
	}
	if !IsNil(o.VirtualProjectId) {
		toSerialize["virtualProjectId"] = o.VirtualProjectId
	}
	if !IsNil(o.FromProjecttagId) {
		toSerialize["fromProjecttagId"] = o.FromProjecttagId
	}
	return toSerialize, nil
}

type NullableGetProgramsV3ResponseResultInner struct {
	value *GetProgramsV3ResponseResultInner
	isSet bool
}

func (v NullableGetProgramsV3ResponseResultInner) Get() *GetProgramsV3ResponseResultInner {
	return v.value
}

func (v *NullableGetProgramsV3ResponseResultInner) Set(val *GetProgramsV3ResponseResultInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetProgramsV3ResponseResultInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetProgramsV3ResponseResultInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetProgramsV3ResponseResultInner(val *GetProgramsV3ResponseResultInner) *NullableGetProgramsV3ResponseResultInner {
	return &NullableGetProgramsV3ResponseResultInner{value: val, isSet: true}
}

func (v NullableGetProgramsV3ResponseResultInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetProgramsV3ResponseResultInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


