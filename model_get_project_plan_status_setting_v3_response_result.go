/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetProjectPlanStatusSettingV3ResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetProjectPlanStatusSettingV3ResponseResult{}

// GetProjectPlanStatusSettingV3ResponseResult struct for GetProjectPlanStatusSettingV3ResponseResult
type GetProjectPlanStatusSettingV3ResponseResult struct {
	// 是否开启发布审批
	IsEnablePublishApproval *bool `json:"isEnablePublishApproval,omitempty"`
	// 是否开启变更审批
	IsEnableChangeApproval *bool `json:"isEnableChangeApproval,omitempty"`
	// 发布审批链接
	PublishApprovalUrl *string `json:"publishApprovalUrl,omitempty"`
	// 变更审批链接
	ChangeApprovalUrl *string `json:"changeApprovalUrl,omitempty"`
	// 审批链接
	ApprovalUrl *string `json:"approvalUrl,omitempty"`
	// 自定义状态列表
	CustomStatus []GetPlanStatusV3ResponseResult `json:"customStatus,omitempty"`
}

// NewGetProjectPlanStatusSettingV3ResponseResult instantiates a new GetProjectPlanStatusSettingV3ResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetProjectPlanStatusSettingV3ResponseResult() *GetProjectPlanStatusSettingV3ResponseResult {
	this := GetProjectPlanStatusSettingV3ResponseResult{}
	return &this
}

// NewGetProjectPlanStatusSettingV3ResponseResultWithDefaults instantiates a new GetProjectPlanStatusSettingV3ResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetProjectPlanStatusSettingV3ResponseResultWithDefaults() *GetProjectPlanStatusSettingV3ResponseResult {
	this := GetProjectPlanStatusSettingV3ResponseResult{}
	return &this
}

// GetIsEnablePublishApproval returns the IsEnablePublishApproval field value if set, zero value otherwise.
func (o *GetProjectPlanStatusSettingV3ResponseResult) GetIsEnablePublishApproval() bool {
	if o == nil || IsNil(o.IsEnablePublishApproval) {
		var ret bool
		return ret
	}
	return *o.IsEnablePublishApproval
}

// GetIsEnablePublishApprovalOk returns a tuple with the IsEnablePublishApproval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProjectPlanStatusSettingV3ResponseResult) GetIsEnablePublishApprovalOk() (*bool, bool) {
	if o == nil || IsNil(o.IsEnablePublishApproval) {
		return nil, false
	}
	return o.IsEnablePublishApproval, true
}

// HasIsEnablePublishApproval returns a boolean if a field has been set.
func (o *GetProjectPlanStatusSettingV3ResponseResult) HasIsEnablePublishApproval() bool {
	if o != nil && !IsNil(o.IsEnablePublishApproval) {
		return true
	}

	return false
}

// SetIsEnablePublishApproval gets a reference to the given bool and assigns it to the IsEnablePublishApproval field.
func (o *GetProjectPlanStatusSettingV3ResponseResult) SetIsEnablePublishApproval(v bool) {
	o.IsEnablePublishApproval = &v
}

// GetIsEnableChangeApproval returns the IsEnableChangeApproval field value if set, zero value otherwise.
func (o *GetProjectPlanStatusSettingV3ResponseResult) GetIsEnableChangeApproval() bool {
	if o == nil || IsNil(o.IsEnableChangeApproval) {
		var ret bool
		return ret
	}
	return *o.IsEnableChangeApproval
}

// GetIsEnableChangeApprovalOk returns a tuple with the IsEnableChangeApproval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProjectPlanStatusSettingV3ResponseResult) GetIsEnableChangeApprovalOk() (*bool, bool) {
	if o == nil || IsNil(o.IsEnableChangeApproval) {
		return nil, false
	}
	return o.IsEnableChangeApproval, true
}

// HasIsEnableChangeApproval returns a boolean if a field has been set.
func (o *GetProjectPlanStatusSettingV3ResponseResult) HasIsEnableChangeApproval() bool {
	if o != nil && !IsNil(o.IsEnableChangeApproval) {
		return true
	}

	return false
}

// SetIsEnableChangeApproval gets a reference to the given bool and assigns it to the IsEnableChangeApproval field.
func (o *GetProjectPlanStatusSettingV3ResponseResult) SetIsEnableChangeApproval(v bool) {
	o.IsEnableChangeApproval = &v
}

// GetPublishApprovalUrl returns the PublishApprovalUrl field value if set, zero value otherwise.
func (o *GetProjectPlanStatusSettingV3ResponseResult) GetPublishApprovalUrl() string {
	if o == nil || IsNil(o.PublishApprovalUrl) {
		var ret string
		return ret
	}
	return *o.PublishApprovalUrl
}

// GetPublishApprovalUrlOk returns a tuple with the PublishApprovalUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProjectPlanStatusSettingV3ResponseResult) GetPublishApprovalUrlOk() (*string, bool) {
	if o == nil || IsNil(o.PublishApprovalUrl) {
		return nil, false
	}
	return o.PublishApprovalUrl, true
}

// HasPublishApprovalUrl returns a boolean if a field has been set.
func (o *GetProjectPlanStatusSettingV3ResponseResult) HasPublishApprovalUrl() bool {
	if o != nil && !IsNil(o.PublishApprovalUrl) {
		return true
	}

	return false
}

// SetPublishApprovalUrl gets a reference to the given string and assigns it to the PublishApprovalUrl field.
func (o *GetProjectPlanStatusSettingV3ResponseResult) SetPublishApprovalUrl(v string) {
	o.PublishApprovalUrl = &v
}

// GetChangeApprovalUrl returns the ChangeApprovalUrl field value if set, zero value otherwise.
func (o *GetProjectPlanStatusSettingV3ResponseResult) GetChangeApprovalUrl() string {
	if o == nil || IsNil(o.ChangeApprovalUrl) {
		var ret string
		return ret
	}
	return *o.ChangeApprovalUrl
}

// GetChangeApprovalUrlOk returns a tuple with the ChangeApprovalUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProjectPlanStatusSettingV3ResponseResult) GetChangeApprovalUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ChangeApprovalUrl) {
		return nil, false
	}
	return o.ChangeApprovalUrl, true
}

// HasChangeApprovalUrl returns a boolean if a field has been set.
func (o *GetProjectPlanStatusSettingV3ResponseResult) HasChangeApprovalUrl() bool {
	if o != nil && !IsNil(o.ChangeApprovalUrl) {
		return true
	}

	return false
}

// SetChangeApprovalUrl gets a reference to the given string and assigns it to the ChangeApprovalUrl field.
func (o *GetProjectPlanStatusSettingV3ResponseResult) SetChangeApprovalUrl(v string) {
	o.ChangeApprovalUrl = &v
}

// GetApprovalUrl returns the ApprovalUrl field value if set, zero value otherwise.
func (o *GetProjectPlanStatusSettingV3ResponseResult) GetApprovalUrl() string {
	if o == nil || IsNil(o.ApprovalUrl) {
		var ret string
		return ret
	}
	return *o.ApprovalUrl
}

// GetApprovalUrlOk returns a tuple with the ApprovalUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProjectPlanStatusSettingV3ResponseResult) GetApprovalUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ApprovalUrl) {
		return nil, false
	}
	return o.ApprovalUrl, true
}

// HasApprovalUrl returns a boolean if a field has been set.
func (o *GetProjectPlanStatusSettingV3ResponseResult) HasApprovalUrl() bool {
	if o != nil && !IsNil(o.ApprovalUrl) {
		return true
	}

	return false
}

// SetApprovalUrl gets a reference to the given string and assigns it to the ApprovalUrl field.
func (o *GetProjectPlanStatusSettingV3ResponseResult) SetApprovalUrl(v string) {
	o.ApprovalUrl = &v
}

// GetCustomStatus returns the CustomStatus field value if set, zero value otherwise.
func (o *GetProjectPlanStatusSettingV3ResponseResult) GetCustomStatus() []GetPlanStatusV3ResponseResult {
	if o == nil || IsNil(o.CustomStatus) {
		var ret []GetPlanStatusV3ResponseResult
		return ret
	}
	return o.CustomStatus
}

// GetCustomStatusOk returns a tuple with the CustomStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProjectPlanStatusSettingV3ResponseResult) GetCustomStatusOk() ([]GetPlanStatusV3ResponseResult, bool) {
	if o == nil || IsNil(o.CustomStatus) {
		return nil, false
	}
	return o.CustomStatus, true
}

// HasCustomStatus returns a boolean if a field has been set.
func (o *GetProjectPlanStatusSettingV3ResponseResult) HasCustomStatus() bool {
	if o != nil && !IsNil(o.CustomStatus) {
		return true
	}

	return false
}

// SetCustomStatus gets a reference to the given []GetPlanStatusV3ResponseResult and assigns it to the CustomStatus field.
func (o *GetProjectPlanStatusSettingV3ResponseResult) SetCustomStatus(v []GetPlanStatusV3ResponseResult) {
	o.CustomStatus = v
}

func (o GetProjectPlanStatusSettingV3ResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetProjectPlanStatusSettingV3ResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsEnablePublishApproval) {
		toSerialize["isEnablePublishApproval"] = o.IsEnablePublishApproval
	}
	if !IsNil(o.IsEnableChangeApproval) {
		toSerialize["isEnableChangeApproval"] = o.IsEnableChangeApproval
	}
	if !IsNil(o.PublishApprovalUrl) {
		toSerialize["publishApprovalUrl"] = o.PublishApprovalUrl
	}
	if !IsNil(o.ChangeApprovalUrl) {
		toSerialize["changeApprovalUrl"] = o.ChangeApprovalUrl
	}
	if !IsNil(o.ApprovalUrl) {
		toSerialize["approvalUrl"] = o.ApprovalUrl
	}
	if !IsNil(o.CustomStatus) {
		toSerialize["customStatus"] = o.CustomStatus
	}
	return toSerialize, nil
}

type NullableGetProjectPlanStatusSettingV3ResponseResult struct {
	value *GetProjectPlanStatusSettingV3ResponseResult
	isSet bool
}

func (v NullableGetProjectPlanStatusSettingV3ResponseResult) Get() *GetProjectPlanStatusSettingV3ResponseResult {
	return v.value
}

func (v *NullableGetProjectPlanStatusSettingV3ResponseResult) Set(val *GetProjectPlanStatusSettingV3ResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableGetProjectPlanStatusSettingV3ResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableGetProjectPlanStatusSettingV3ResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetProjectPlanStatusSettingV3ResponseResult(val *GetProjectPlanStatusSettingV3ResponseResult) *NullableGetProjectPlanStatusSettingV3ResponseResult {
	return &NullableGetProjectPlanStatusSettingV3ResponseResult{value: val, isSet: true}
}

func (v NullableGetProjectPlanStatusSettingV3ResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetProjectPlanStatusSettingV3ResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


