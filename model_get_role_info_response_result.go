/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetRoleInfoResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetRoleInfoResponseResult{}

// GetRoleInfoResponseResult struct for GetRoleInfoResponseResult
type GetRoleInfoResponseResult struct {
	// 角色 ID
	RoleId *string `json:"roleId,omitempty"`
	// 角色名称
	Name *string `json:"name,omitempty"`
	// 所属企业 ID
	OrgId *string `json:"orgId,omitempty"`
	// 创建者 ID
	CreatorId *string `json:"creatorId,omitempty"`
	// 角色拥有的权限列表
	Permissions *string `json:"permissions,omitempty"`
	// 成员角色，取值为：-1: 外部成员, 0: 成员, 1: 管理员, 2: 拥有者
	Role *string `json:"role,omitempty"`
	// 是否是默认角色
	IsDefault *string `json:"isDefault,omitempty"`
	// 创建时间
	Created *string `json:"created,omitempty"`
	// 更新时间
	Updated *string `json:"updated,omitempty"`
}

// NewGetRoleInfoResponseResult instantiates a new GetRoleInfoResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetRoleInfoResponseResult() *GetRoleInfoResponseResult {
	this := GetRoleInfoResponseResult{}
	return &this
}

// NewGetRoleInfoResponseResultWithDefaults instantiates a new GetRoleInfoResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetRoleInfoResponseResultWithDefaults() *GetRoleInfoResponseResult {
	this := GetRoleInfoResponseResult{}
	return &this
}

// GetRoleId returns the RoleId field value if set, zero value otherwise.
func (o *GetRoleInfoResponseResult) GetRoleId() string {
	if o == nil || IsNil(o.RoleId) {
		var ret string
		return ret
	}
	return *o.RoleId
}

// GetRoleIdOk returns a tuple with the RoleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRoleInfoResponseResult) GetRoleIdOk() (*string, bool) {
	if o == nil || IsNil(o.RoleId) {
		return nil, false
	}
	return o.RoleId, true
}

// HasRoleId returns a boolean if a field has been set.
func (o *GetRoleInfoResponseResult) HasRoleId() bool {
	if o != nil && !IsNil(o.RoleId) {
		return true
	}

	return false
}

// SetRoleId gets a reference to the given string and assigns it to the RoleId field.
func (o *GetRoleInfoResponseResult) SetRoleId(v string) {
	o.RoleId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetRoleInfoResponseResult) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRoleInfoResponseResult) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetRoleInfoResponseResult) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetRoleInfoResponseResult) SetName(v string) {
	o.Name = &v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *GetRoleInfoResponseResult) GetOrgId() string {
	if o == nil || IsNil(o.OrgId) {
		var ret string
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRoleInfoResponseResult) GetOrgIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *GetRoleInfoResponseResult) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given string and assigns it to the OrgId field.
func (o *GetRoleInfoResponseResult) SetOrgId(v string) {
	o.OrgId = &v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise.
func (o *GetRoleInfoResponseResult) GetCreatorId() string {
	if o == nil || IsNil(o.CreatorId) {
		var ret string
		return ret
	}
	return *o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRoleInfoResponseResult) GetCreatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorId) {
		return nil, false
	}
	return o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *GetRoleInfoResponseResult) HasCreatorId() bool {
	if o != nil && !IsNil(o.CreatorId) {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given string and assigns it to the CreatorId field.
func (o *GetRoleInfoResponseResult) SetCreatorId(v string) {
	o.CreatorId = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *GetRoleInfoResponseResult) GetPermissions() string {
	if o == nil || IsNil(o.Permissions) {
		var ret string
		return ret
	}
	return *o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRoleInfoResponseResult) GetPermissionsOk() (*string, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *GetRoleInfoResponseResult) HasPermissions() bool {
	if o != nil && !IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given string and assigns it to the Permissions field.
func (o *GetRoleInfoResponseResult) SetPermissions(v string) {
	o.Permissions = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *GetRoleInfoResponseResult) GetRole() string {
	if o == nil || IsNil(o.Role) {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRoleInfoResponseResult) GetRoleOk() (*string, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *GetRoleInfoResponseResult) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *GetRoleInfoResponseResult) SetRole(v string) {
	o.Role = &v
}

// GetIsDefault returns the IsDefault field value if set, zero value otherwise.
func (o *GetRoleInfoResponseResult) GetIsDefault() string {
	if o == nil || IsNil(o.IsDefault) {
		var ret string
		return ret
	}
	return *o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRoleInfoResponseResult) GetIsDefaultOk() (*string, bool) {
	if o == nil || IsNil(o.IsDefault) {
		return nil, false
	}
	return o.IsDefault, true
}

// HasIsDefault returns a boolean if a field has been set.
func (o *GetRoleInfoResponseResult) HasIsDefault() bool {
	if o != nil && !IsNil(o.IsDefault) {
		return true
	}

	return false
}

// SetIsDefault gets a reference to the given string and assigns it to the IsDefault field.
func (o *GetRoleInfoResponseResult) SetIsDefault(v string) {
	o.IsDefault = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *GetRoleInfoResponseResult) GetCreated() string {
	if o == nil || IsNil(o.Created) {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRoleInfoResponseResult) GetCreatedOk() (*string, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *GetRoleInfoResponseResult) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *GetRoleInfoResponseResult) SetCreated(v string) {
	o.Created = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *GetRoleInfoResponseResult) GetUpdated() string {
	if o == nil || IsNil(o.Updated) {
		var ret string
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRoleInfoResponseResult) GetUpdatedOk() (*string, bool) {
	if o == nil || IsNil(o.Updated) {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *GetRoleInfoResponseResult) HasUpdated() bool {
	if o != nil && !IsNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given string and assigns it to the Updated field.
func (o *GetRoleInfoResponseResult) SetUpdated(v string) {
	o.Updated = &v
}

func (o GetRoleInfoResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetRoleInfoResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RoleId) {
		toSerialize["roleId"] = o.RoleId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OrgId) {
		toSerialize["orgId"] = o.OrgId
	}
	if !IsNil(o.CreatorId) {
		toSerialize["creatorId"] = o.CreatorId
	}
	if !IsNil(o.Permissions) {
		toSerialize["permissions"] = o.Permissions
	}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	if !IsNil(o.IsDefault) {
		toSerialize["isDefault"] = o.IsDefault
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.Updated) {
		toSerialize["updated"] = o.Updated
	}
	return toSerialize, nil
}

type NullableGetRoleInfoResponseResult struct {
	value *GetRoleInfoResponseResult
	isSet bool
}

func (v NullableGetRoleInfoResponseResult) Get() *GetRoleInfoResponseResult {
	return v.value
}

func (v *NullableGetRoleInfoResponseResult) Set(val *GetRoleInfoResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRoleInfoResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRoleInfoResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRoleInfoResponseResult(val *GetRoleInfoResponseResult) *NullableGetRoleInfoResponseResult {
	return &NullableGetRoleInfoResponseResult{value: val, isSet: true}
}

func (v NullableGetRoleInfoResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRoleInfoResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


