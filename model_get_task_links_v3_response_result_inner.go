/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the GetTaskLinksV3ResponseResultInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetTaskLinksV3ResponseResultInner{}

// GetTaskLinksV3ResponseResultInner 任务关联
type GetTaskLinksV3ResponseResultInner struct {
	// 关联ID
	Id *string `json:"id,omitempty"`
	// 创建人ID
	CreatorId *string `json:"creatorId,omitempty"`
	// 任务ID
	ParentId *string `json:"parentId,omitempty"`
	// 关联资源ID
	LinkedId *string `json:"linkedId,omitempty"`
	// 关联类型
	LinkedType *string `json:"linkedType,omitempty"`
	Parent *GetTaskLinksV3ResponseResultInnerParent `json:"parent,omitempty"`
	Linked *GetTaskLinksV3ResponseResultInnerLinked `json:"linked,omitempty"`
	// 创建时间
	Created *time.Time `json:"created,omitempty"`
	// 更新时间
	Updated *time.Time `json:"updated,omitempty"`
}

// NewGetTaskLinksV3ResponseResultInner instantiates a new GetTaskLinksV3ResponseResultInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetTaskLinksV3ResponseResultInner() *GetTaskLinksV3ResponseResultInner {
	this := GetTaskLinksV3ResponseResultInner{}
	return &this
}

// NewGetTaskLinksV3ResponseResultInnerWithDefaults instantiates a new GetTaskLinksV3ResponseResultInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetTaskLinksV3ResponseResultInnerWithDefaults() *GetTaskLinksV3ResponseResultInner {
	this := GetTaskLinksV3ResponseResultInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetTaskLinksV3ResponseResultInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTaskLinksV3ResponseResultInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetTaskLinksV3ResponseResultInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetTaskLinksV3ResponseResultInner) SetId(v string) {
	o.Id = &v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise.
func (o *GetTaskLinksV3ResponseResultInner) GetCreatorId() string {
	if o == nil || IsNil(o.CreatorId) {
		var ret string
		return ret
	}
	return *o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTaskLinksV3ResponseResultInner) GetCreatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorId) {
		return nil, false
	}
	return o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *GetTaskLinksV3ResponseResultInner) HasCreatorId() bool {
	if o != nil && !IsNil(o.CreatorId) {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given string and assigns it to the CreatorId field.
func (o *GetTaskLinksV3ResponseResultInner) SetCreatorId(v string) {
	o.CreatorId = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *GetTaskLinksV3ResponseResultInner) GetParentId() string {
	if o == nil || IsNil(o.ParentId) {
		var ret string
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTaskLinksV3ResponseResultInner) GetParentIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentId) {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *GetTaskLinksV3ResponseResultInner) HasParentId() bool {
	if o != nil && !IsNil(o.ParentId) {
		return true
	}

	return false
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *GetTaskLinksV3ResponseResultInner) SetParentId(v string) {
	o.ParentId = &v
}

// GetLinkedId returns the LinkedId field value if set, zero value otherwise.
func (o *GetTaskLinksV3ResponseResultInner) GetLinkedId() string {
	if o == nil || IsNil(o.LinkedId) {
		var ret string
		return ret
	}
	return *o.LinkedId
}

// GetLinkedIdOk returns a tuple with the LinkedId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTaskLinksV3ResponseResultInner) GetLinkedIdOk() (*string, bool) {
	if o == nil || IsNil(o.LinkedId) {
		return nil, false
	}
	return o.LinkedId, true
}

// HasLinkedId returns a boolean if a field has been set.
func (o *GetTaskLinksV3ResponseResultInner) HasLinkedId() bool {
	if o != nil && !IsNil(o.LinkedId) {
		return true
	}

	return false
}

// SetLinkedId gets a reference to the given string and assigns it to the LinkedId field.
func (o *GetTaskLinksV3ResponseResultInner) SetLinkedId(v string) {
	o.LinkedId = &v
}

// GetLinkedType returns the LinkedType field value if set, zero value otherwise.
func (o *GetTaskLinksV3ResponseResultInner) GetLinkedType() string {
	if o == nil || IsNil(o.LinkedType) {
		var ret string
		return ret
	}
	return *o.LinkedType
}

// GetLinkedTypeOk returns a tuple with the LinkedType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTaskLinksV3ResponseResultInner) GetLinkedTypeOk() (*string, bool) {
	if o == nil || IsNil(o.LinkedType) {
		return nil, false
	}
	return o.LinkedType, true
}

// HasLinkedType returns a boolean if a field has been set.
func (o *GetTaskLinksV3ResponseResultInner) HasLinkedType() bool {
	if o != nil && !IsNil(o.LinkedType) {
		return true
	}

	return false
}

// SetLinkedType gets a reference to the given string and assigns it to the LinkedType field.
func (o *GetTaskLinksV3ResponseResultInner) SetLinkedType(v string) {
	o.LinkedType = &v
}

// GetParent returns the Parent field value if set, zero value otherwise.
func (o *GetTaskLinksV3ResponseResultInner) GetParent() GetTaskLinksV3ResponseResultInnerParent {
	if o == nil || IsNil(o.Parent) {
		var ret GetTaskLinksV3ResponseResultInnerParent
		return ret
	}
	return *o.Parent
}

// GetParentOk returns a tuple with the Parent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTaskLinksV3ResponseResultInner) GetParentOk() (*GetTaskLinksV3ResponseResultInnerParent, bool) {
	if o == nil || IsNil(o.Parent) {
		return nil, false
	}
	return o.Parent, true
}

// HasParent returns a boolean if a field has been set.
func (o *GetTaskLinksV3ResponseResultInner) HasParent() bool {
	if o != nil && !IsNil(o.Parent) {
		return true
	}

	return false
}

// SetParent gets a reference to the given GetTaskLinksV3ResponseResultInnerParent and assigns it to the Parent field.
func (o *GetTaskLinksV3ResponseResultInner) SetParent(v GetTaskLinksV3ResponseResultInnerParent) {
	o.Parent = &v
}

// GetLinked returns the Linked field value if set, zero value otherwise.
func (o *GetTaskLinksV3ResponseResultInner) GetLinked() GetTaskLinksV3ResponseResultInnerLinked {
	if o == nil || IsNil(o.Linked) {
		var ret GetTaskLinksV3ResponseResultInnerLinked
		return ret
	}
	return *o.Linked
}

// GetLinkedOk returns a tuple with the Linked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTaskLinksV3ResponseResultInner) GetLinkedOk() (*GetTaskLinksV3ResponseResultInnerLinked, bool) {
	if o == nil || IsNil(o.Linked) {
		return nil, false
	}
	return o.Linked, true
}

// HasLinked returns a boolean if a field has been set.
func (o *GetTaskLinksV3ResponseResultInner) HasLinked() bool {
	if o != nil && !IsNil(o.Linked) {
		return true
	}

	return false
}

// SetLinked gets a reference to the given GetTaskLinksV3ResponseResultInnerLinked and assigns it to the Linked field.
func (o *GetTaskLinksV3ResponseResultInner) SetLinked(v GetTaskLinksV3ResponseResultInnerLinked) {
	o.Linked = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *GetTaskLinksV3ResponseResultInner) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTaskLinksV3ResponseResultInner) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *GetTaskLinksV3ResponseResultInner) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *GetTaskLinksV3ResponseResultInner) SetCreated(v time.Time) {
	o.Created = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *GetTaskLinksV3ResponseResultInner) GetUpdated() time.Time {
	if o == nil || IsNil(o.Updated) {
		var ret time.Time
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTaskLinksV3ResponseResultInner) GetUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Updated) {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *GetTaskLinksV3ResponseResultInner) HasUpdated() bool {
	if o != nil && !IsNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given time.Time and assigns it to the Updated field.
func (o *GetTaskLinksV3ResponseResultInner) SetUpdated(v time.Time) {
	o.Updated = &v
}

func (o GetTaskLinksV3ResponseResultInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetTaskLinksV3ResponseResultInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.CreatorId) {
		toSerialize["creatorId"] = o.CreatorId
	}
	if !IsNil(o.ParentId) {
		toSerialize["parentId"] = o.ParentId
	}
	if !IsNil(o.LinkedId) {
		toSerialize["linkedId"] = o.LinkedId
	}
	if !IsNil(o.LinkedType) {
		toSerialize["linkedType"] = o.LinkedType
	}
	if !IsNil(o.Parent) {
		toSerialize["parent"] = o.Parent
	}
	if !IsNil(o.Linked) {
		toSerialize["linked"] = o.Linked
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.Updated) {
		toSerialize["updated"] = o.Updated
	}
	return toSerialize, nil
}

type NullableGetTaskLinksV3ResponseResultInner struct {
	value *GetTaskLinksV3ResponseResultInner
	isSet bool
}

func (v NullableGetTaskLinksV3ResponseResultInner) Get() *GetTaskLinksV3ResponseResultInner {
	return v.value
}

func (v *NullableGetTaskLinksV3ResponseResultInner) Set(val *GetTaskLinksV3ResponseResultInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetTaskLinksV3ResponseResultInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetTaskLinksV3ResponseResultInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetTaskLinksV3ResponseResultInner(val *GetTaskLinksV3ResponseResultInner) *NullableGetTaskLinksV3ResponseResultInner {
	return &NullableGetTaskLinksV3ResponseResultInner{value: val, isSet: true}
}

func (v NullableGetTaskLinksV3ResponseResultInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetTaskLinksV3ResponseResultInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


