/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the GetTaskTracesV3ResponseResultInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetTaskTracesV3ResponseResultInner{}

// GetTaskTracesV3ResponseResultInner struct for GetTaskTracesV3ResponseResultInner
type GetTaskTracesV3ResponseResultInner struct {
	// 进展 ID
	Id *string `json:"id,omitempty"`
	// 进展绑定对象 ID
	BoundToObjectId *string `json:"boundToObjectId,omitempty"`
	// 进展绑定对象类型
	BoundToObjectType *string `json:"boundToObjectType,omitempty"`
	// 渲染模式
	RenderMode *string `json:"renderMode,omitempty"`
	// 源数据
	Raw *string `json:"raw,omitempty"`
	// 进展状态； 1-状态正常；2-存在风险；3-进展逾期
	Status *float32 `json:"status,omitempty"`
	// 进展创建人
	CreatorId *string `json:"creatorId,omitempty"`
	// 是否删除
	IsDeleted *bool `json:"isDeleted,omitempty"`
	// 创建时间
	Created *time.Time `json:"created,omitempty"`
	// 更新时间
	Updated *time.Time `json:"updated,omitempty"`
	// 进展标题
	Title *string `json:"title,omitempty"`
	// 进展内容
	Content *string `json:"content,omitempty"`
	// 进展提醒人 ID 列表
	ReminderIds []string `json:"reminderIds,omitempty"`
	// 附件详细
	Attachments []GetTaskTracesV3ResponseResultInnerAttachmentsInner `json:"attachments,omitempty"`
}

// NewGetTaskTracesV3ResponseResultInner instantiates a new GetTaskTracesV3ResponseResultInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetTaskTracesV3ResponseResultInner() *GetTaskTracesV3ResponseResultInner {
	this := GetTaskTracesV3ResponseResultInner{}
	return &this
}

// NewGetTaskTracesV3ResponseResultInnerWithDefaults instantiates a new GetTaskTracesV3ResponseResultInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetTaskTracesV3ResponseResultInnerWithDefaults() *GetTaskTracesV3ResponseResultInner {
	this := GetTaskTracesV3ResponseResultInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetTaskTracesV3ResponseResultInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTaskTracesV3ResponseResultInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetTaskTracesV3ResponseResultInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetTaskTracesV3ResponseResultInner) SetId(v string) {
	o.Id = &v
}

// GetBoundToObjectId returns the BoundToObjectId field value if set, zero value otherwise.
func (o *GetTaskTracesV3ResponseResultInner) GetBoundToObjectId() string {
	if o == nil || IsNil(o.BoundToObjectId) {
		var ret string
		return ret
	}
	return *o.BoundToObjectId
}

// GetBoundToObjectIdOk returns a tuple with the BoundToObjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTaskTracesV3ResponseResultInner) GetBoundToObjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.BoundToObjectId) {
		return nil, false
	}
	return o.BoundToObjectId, true
}

// HasBoundToObjectId returns a boolean if a field has been set.
func (o *GetTaskTracesV3ResponseResultInner) HasBoundToObjectId() bool {
	if o != nil && !IsNil(o.BoundToObjectId) {
		return true
	}

	return false
}

// SetBoundToObjectId gets a reference to the given string and assigns it to the BoundToObjectId field.
func (o *GetTaskTracesV3ResponseResultInner) SetBoundToObjectId(v string) {
	o.BoundToObjectId = &v
}

// GetBoundToObjectType returns the BoundToObjectType field value if set, zero value otherwise.
func (o *GetTaskTracesV3ResponseResultInner) GetBoundToObjectType() string {
	if o == nil || IsNil(o.BoundToObjectType) {
		var ret string
		return ret
	}
	return *o.BoundToObjectType
}

// GetBoundToObjectTypeOk returns a tuple with the BoundToObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTaskTracesV3ResponseResultInner) GetBoundToObjectTypeOk() (*string, bool) {
	if o == nil || IsNil(o.BoundToObjectType) {
		return nil, false
	}
	return o.BoundToObjectType, true
}

// HasBoundToObjectType returns a boolean if a field has been set.
func (o *GetTaskTracesV3ResponseResultInner) HasBoundToObjectType() bool {
	if o != nil && !IsNil(o.BoundToObjectType) {
		return true
	}

	return false
}

// SetBoundToObjectType gets a reference to the given string and assigns it to the BoundToObjectType field.
func (o *GetTaskTracesV3ResponseResultInner) SetBoundToObjectType(v string) {
	o.BoundToObjectType = &v
}

// GetRenderMode returns the RenderMode field value if set, zero value otherwise.
func (o *GetTaskTracesV3ResponseResultInner) GetRenderMode() string {
	if o == nil || IsNil(o.RenderMode) {
		var ret string
		return ret
	}
	return *o.RenderMode
}

// GetRenderModeOk returns a tuple with the RenderMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTaskTracesV3ResponseResultInner) GetRenderModeOk() (*string, bool) {
	if o == nil || IsNil(o.RenderMode) {
		return nil, false
	}
	return o.RenderMode, true
}

// HasRenderMode returns a boolean if a field has been set.
func (o *GetTaskTracesV3ResponseResultInner) HasRenderMode() bool {
	if o != nil && !IsNil(o.RenderMode) {
		return true
	}

	return false
}

// SetRenderMode gets a reference to the given string and assigns it to the RenderMode field.
func (o *GetTaskTracesV3ResponseResultInner) SetRenderMode(v string) {
	o.RenderMode = &v
}

// GetRaw returns the Raw field value if set, zero value otherwise.
func (o *GetTaskTracesV3ResponseResultInner) GetRaw() string {
	if o == nil || IsNil(o.Raw) {
		var ret string
		return ret
	}
	return *o.Raw
}

// GetRawOk returns a tuple with the Raw field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTaskTracesV3ResponseResultInner) GetRawOk() (*string, bool) {
	if o == nil || IsNil(o.Raw) {
		return nil, false
	}
	return o.Raw, true
}

// HasRaw returns a boolean if a field has been set.
func (o *GetTaskTracesV3ResponseResultInner) HasRaw() bool {
	if o != nil && !IsNil(o.Raw) {
		return true
	}

	return false
}

// SetRaw gets a reference to the given string and assigns it to the Raw field.
func (o *GetTaskTracesV3ResponseResultInner) SetRaw(v string) {
	o.Raw = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GetTaskTracesV3ResponseResultInner) GetStatus() float32 {
	if o == nil || IsNil(o.Status) {
		var ret float32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTaskTracesV3ResponseResultInner) GetStatusOk() (*float32, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GetTaskTracesV3ResponseResultInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given float32 and assigns it to the Status field.
func (o *GetTaskTracesV3ResponseResultInner) SetStatus(v float32) {
	o.Status = &v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise.
func (o *GetTaskTracesV3ResponseResultInner) GetCreatorId() string {
	if o == nil || IsNil(o.CreatorId) {
		var ret string
		return ret
	}
	return *o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTaskTracesV3ResponseResultInner) GetCreatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorId) {
		return nil, false
	}
	return o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *GetTaskTracesV3ResponseResultInner) HasCreatorId() bool {
	if o != nil && !IsNil(o.CreatorId) {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given string and assigns it to the CreatorId field.
func (o *GetTaskTracesV3ResponseResultInner) SetCreatorId(v string) {
	o.CreatorId = &v
}

// GetIsDeleted returns the IsDeleted field value if set, zero value otherwise.
func (o *GetTaskTracesV3ResponseResultInner) GetIsDeleted() bool {
	if o == nil || IsNil(o.IsDeleted) {
		var ret bool
		return ret
	}
	return *o.IsDeleted
}

// GetIsDeletedOk returns a tuple with the IsDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTaskTracesV3ResponseResultInner) GetIsDeletedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDeleted) {
		return nil, false
	}
	return o.IsDeleted, true
}

// HasIsDeleted returns a boolean if a field has been set.
func (o *GetTaskTracesV3ResponseResultInner) HasIsDeleted() bool {
	if o != nil && !IsNil(o.IsDeleted) {
		return true
	}

	return false
}

// SetIsDeleted gets a reference to the given bool and assigns it to the IsDeleted field.
func (o *GetTaskTracesV3ResponseResultInner) SetIsDeleted(v bool) {
	o.IsDeleted = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *GetTaskTracesV3ResponseResultInner) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTaskTracesV3ResponseResultInner) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *GetTaskTracesV3ResponseResultInner) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *GetTaskTracesV3ResponseResultInner) SetCreated(v time.Time) {
	o.Created = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *GetTaskTracesV3ResponseResultInner) GetUpdated() time.Time {
	if o == nil || IsNil(o.Updated) {
		var ret time.Time
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTaskTracesV3ResponseResultInner) GetUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Updated) {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *GetTaskTracesV3ResponseResultInner) HasUpdated() bool {
	if o != nil && !IsNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given time.Time and assigns it to the Updated field.
func (o *GetTaskTracesV3ResponseResultInner) SetUpdated(v time.Time) {
	o.Updated = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *GetTaskTracesV3ResponseResultInner) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTaskTracesV3ResponseResultInner) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *GetTaskTracesV3ResponseResultInner) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *GetTaskTracesV3ResponseResultInner) SetTitle(v string) {
	o.Title = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *GetTaskTracesV3ResponseResultInner) GetContent() string {
	if o == nil || IsNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTaskTracesV3ResponseResultInner) GetContentOk() (*string, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *GetTaskTracesV3ResponseResultInner) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *GetTaskTracesV3ResponseResultInner) SetContent(v string) {
	o.Content = &v
}

// GetReminderIds returns the ReminderIds field value if set, zero value otherwise.
func (o *GetTaskTracesV3ResponseResultInner) GetReminderIds() []string {
	if o == nil || IsNil(o.ReminderIds) {
		var ret []string
		return ret
	}
	return o.ReminderIds
}

// GetReminderIdsOk returns a tuple with the ReminderIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTaskTracesV3ResponseResultInner) GetReminderIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ReminderIds) {
		return nil, false
	}
	return o.ReminderIds, true
}

// HasReminderIds returns a boolean if a field has been set.
func (o *GetTaskTracesV3ResponseResultInner) HasReminderIds() bool {
	if o != nil && !IsNil(o.ReminderIds) {
		return true
	}

	return false
}

// SetReminderIds gets a reference to the given []string and assigns it to the ReminderIds field.
func (o *GetTaskTracesV3ResponseResultInner) SetReminderIds(v []string) {
	o.ReminderIds = v
}

// GetAttachments returns the Attachments field value if set, zero value otherwise.
func (o *GetTaskTracesV3ResponseResultInner) GetAttachments() []GetTaskTracesV3ResponseResultInnerAttachmentsInner {
	if o == nil || IsNil(o.Attachments) {
		var ret []GetTaskTracesV3ResponseResultInnerAttachmentsInner
		return ret
	}
	return o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTaskTracesV3ResponseResultInner) GetAttachmentsOk() ([]GetTaskTracesV3ResponseResultInnerAttachmentsInner, bool) {
	if o == nil || IsNil(o.Attachments) {
		return nil, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *GetTaskTracesV3ResponseResultInner) HasAttachments() bool {
	if o != nil && !IsNil(o.Attachments) {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given []GetTaskTracesV3ResponseResultInnerAttachmentsInner and assigns it to the Attachments field.
func (o *GetTaskTracesV3ResponseResultInner) SetAttachments(v []GetTaskTracesV3ResponseResultInnerAttachmentsInner) {
	o.Attachments = v
}

func (o GetTaskTracesV3ResponseResultInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetTaskTracesV3ResponseResultInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.BoundToObjectId) {
		toSerialize["boundToObjectId"] = o.BoundToObjectId
	}
	if !IsNil(o.BoundToObjectType) {
		toSerialize["boundToObjectType"] = o.BoundToObjectType
	}
	if !IsNil(o.RenderMode) {
		toSerialize["renderMode"] = o.RenderMode
	}
	if !IsNil(o.Raw) {
		toSerialize["raw"] = o.Raw
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.CreatorId) {
		toSerialize["creatorId"] = o.CreatorId
	}
	if !IsNil(o.IsDeleted) {
		toSerialize["isDeleted"] = o.IsDeleted
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.Updated) {
		toSerialize["updated"] = o.Updated
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !IsNil(o.ReminderIds) {
		toSerialize["reminderIds"] = o.ReminderIds
	}
	if !IsNil(o.Attachments) {
		toSerialize["attachments"] = o.Attachments
	}
	return toSerialize, nil
}

type NullableGetTaskTracesV3ResponseResultInner struct {
	value *GetTaskTracesV3ResponseResultInner
	isSet bool
}

func (v NullableGetTaskTracesV3ResponseResultInner) Get() *GetTaskTracesV3ResponseResultInner {
	return v.value
}

func (v *NullableGetTaskTracesV3ResponseResultInner) Set(val *GetTaskTracesV3ResponseResultInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetTaskTracesV3ResponseResultInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetTaskTracesV3ResponseResultInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetTaskTracesV3ResponseResultInner(val *GetTaskTracesV3ResponseResultInner) *NullableGetTaskTracesV3ResponseResultInner {
	return &NullableGetTaskTracesV3ResponseResultInner{value: val, isSet: true}
}

func (v NullableGetTaskTracesV3ResponseResultInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetTaskTracesV3ResponseResultInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


