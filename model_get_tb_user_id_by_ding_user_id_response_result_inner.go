/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetTbUserIdByDingUserIdResponseResultInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetTbUserIdByDingUserIdResponseResultInner{}

// GetTbUserIdByDingUserIdResponseResultInner struct for GetTbUserIdByDingUserIdResponseResultInner
type GetTbUserIdByDingUserIdResponseResultInner struct {
	// Teambition 用户 ID
	TbUserId *string `json:"tbUserId,omitempty"`
	// 钉钉企业内用户 userId, 例如 manager4220
	DingtalkUserId *string `json:"dingtalkUserId,omitempty"`
}

// NewGetTbUserIdByDingUserIdResponseResultInner instantiates a new GetTbUserIdByDingUserIdResponseResultInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetTbUserIdByDingUserIdResponseResultInner() *GetTbUserIdByDingUserIdResponseResultInner {
	this := GetTbUserIdByDingUserIdResponseResultInner{}
	return &this
}

// NewGetTbUserIdByDingUserIdResponseResultInnerWithDefaults instantiates a new GetTbUserIdByDingUserIdResponseResultInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetTbUserIdByDingUserIdResponseResultInnerWithDefaults() *GetTbUserIdByDingUserIdResponseResultInner {
	this := GetTbUserIdByDingUserIdResponseResultInner{}
	return &this
}

// GetTbUserId returns the TbUserId field value if set, zero value otherwise.
func (o *GetTbUserIdByDingUserIdResponseResultInner) GetTbUserId() string {
	if o == nil || IsNil(o.TbUserId) {
		var ret string
		return ret
	}
	return *o.TbUserId
}

// GetTbUserIdOk returns a tuple with the TbUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTbUserIdByDingUserIdResponseResultInner) GetTbUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.TbUserId) {
		return nil, false
	}
	return o.TbUserId, true
}

// HasTbUserId returns a boolean if a field has been set.
func (o *GetTbUserIdByDingUserIdResponseResultInner) HasTbUserId() bool {
	if o != nil && !IsNil(o.TbUserId) {
		return true
	}

	return false
}

// SetTbUserId gets a reference to the given string and assigns it to the TbUserId field.
func (o *GetTbUserIdByDingUserIdResponseResultInner) SetTbUserId(v string) {
	o.TbUserId = &v
}

// GetDingtalkUserId returns the DingtalkUserId field value if set, zero value otherwise.
func (o *GetTbUserIdByDingUserIdResponseResultInner) GetDingtalkUserId() string {
	if o == nil || IsNil(o.DingtalkUserId) {
		var ret string
		return ret
	}
	return *o.DingtalkUserId
}

// GetDingtalkUserIdOk returns a tuple with the DingtalkUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTbUserIdByDingUserIdResponseResultInner) GetDingtalkUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.DingtalkUserId) {
		return nil, false
	}
	return o.DingtalkUserId, true
}

// HasDingtalkUserId returns a boolean if a field has been set.
func (o *GetTbUserIdByDingUserIdResponseResultInner) HasDingtalkUserId() bool {
	if o != nil && !IsNil(o.DingtalkUserId) {
		return true
	}

	return false
}

// SetDingtalkUserId gets a reference to the given string and assigns it to the DingtalkUserId field.
func (o *GetTbUserIdByDingUserIdResponseResultInner) SetDingtalkUserId(v string) {
	o.DingtalkUserId = &v
}

func (o GetTbUserIdByDingUserIdResponseResultInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetTbUserIdByDingUserIdResponseResultInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TbUserId) {
		toSerialize["tbUserId"] = o.TbUserId
	}
	if !IsNil(o.DingtalkUserId) {
		toSerialize["dingtalkUserId"] = o.DingtalkUserId
	}
	return toSerialize, nil
}

type NullableGetTbUserIdByDingUserIdResponseResultInner struct {
	value *GetTbUserIdByDingUserIdResponseResultInner
	isSet bool
}

func (v NullableGetTbUserIdByDingUserIdResponseResultInner) Get() *GetTbUserIdByDingUserIdResponseResultInner {
	return v.value
}

func (v *NullableGetTbUserIdByDingUserIdResponseResultInner) Set(val *GetTbUserIdByDingUserIdResponseResultInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetTbUserIdByDingUserIdResponseResultInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetTbUserIdByDingUserIdResponseResultInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetTbUserIdByDingUserIdResponseResultInner(val *GetTbUserIdByDingUserIdResponseResultInner) *NullableGetTbUserIdByDingUserIdResponseResultInner {
	return &NullableGetTbUserIdByDingUserIdResponseResultInner{value: val, isSet: true}
}

func (v NullableGetTbUserIdByDingUserIdResponseResultInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetTbUserIdByDingUserIdResponseResultInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


