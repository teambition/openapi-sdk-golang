/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetUserAccessTokenRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetUserAccessTokenRequest{}

// GetUserAccessTokenRequest struct for GetUserAccessTokenRequest
type GetUserAccessTokenRequest struct {
	// 来自请求身份验证流程，用户扫码登录后会自动 302 到 redirect_uri 并带上此参数，当 grantType = authorizationCode 时必填
	Code *string `json:"code,omitempty"`
	// 过期时间，默认是 86400（单位是秒，即 1 天），最长是 1 年
	Expires *int32 `json:"expires,omitempty"`
	// authorization_code 或 refresh_token
	GrantType *string `json:"grantType,omitempty"`
	// 当 grantType = refreshToken 时必填
	RefreshToken *string `json:"refreshToken,omitempty"`
}

// NewGetUserAccessTokenRequest instantiates a new GetUserAccessTokenRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetUserAccessTokenRequest() *GetUserAccessTokenRequest {
	this := GetUserAccessTokenRequest{}
	return &this
}

// NewGetUserAccessTokenRequestWithDefaults instantiates a new GetUserAccessTokenRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetUserAccessTokenRequestWithDefaults() *GetUserAccessTokenRequest {
	this := GetUserAccessTokenRequest{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *GetUserAccessTokenRequest) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserAccessTokenRequest) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *GetUserAccessTokenRequest) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *GetUserAccessTokenRequest) SetCode(v string) {
	o.Code = &v
}

// GetExpires returns the Expires field value if set, zero value otherwise.
func (o *GetUserAccessTokenRequest) GetExpires() int32 {
	if o == nil || IsNil(o.Expires) {
		var ret int32
		return ret
	}
	return *o.Expires
}

// GetExpiresOk returns a tuple with the Expires field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserAccessTokenRequest) GetExpiresOk() (*int32, bool) {
	if o == nil || IsNil(o.Expires) {
		return nil, false
	}
	return o.Expires, true
}

// HasExpires returns a boolean if a field has been set.
func (o *GetUserAccessTokenRequest) HasExpires() bool {
	if o != nil && !IsNil(o.Expires) {
		return true
	}

	return false
}

// SetExpires gets a reference to the given int32 and assigns it to the Expires field.
func (o *GetUserAccessTokenRequest) SetExpires(v int32) {
	o.Expires = &v
}

// GetGrantType returns the GrantType field value if set, zero value otherwise.
func (o *GetUserAccessTokenRequest) GetGrantType() string {
	if o == nil || IsNil(o.GrantType) {
		var ret string
		return ret
	}
	return *o.GrantType
}

// GetGrantTypeOk returns a tuple with the GrantType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserAccessTokenRequest) GetGrantTypeOk() (*string, bool) {
	if o == nil || IsNil(o.GrantType) {
		return nil, false
	}
	return o.GrantType, true
}

// HasGrantType returns a boolean if a field has been set.
func (o *GetUserAccessTokenRequest) HasGrantType() bool {
	if o != nil && !IsNil(o.GrantType) {
		return true
	}

	return false
}

// SetGrantType gets a reference to the given string and assigns it to the GrantType field.
func (o *GetUserAccessTokenRequest) SetGrantType(v string) {
	o.GrantType = &v
}

// GetRefreshToken returns the RefreshToken field value if set, zero value otherwise.
func (o *GetUserAccessTokenRequest) GetRefreshToken() string {
	if o == nil || IsNil(o.RefreshToken) {
		var ret string
		return ret
	}
	return *o.RefreshToken
}

// GetRefreshTokenOk returns a tuple with the RefreshToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserAccessTokenRequest) GetRefreshTokenOk() (*string, bool) {
	if o == nil || IsNil(o.RefreshToken) {
		return nil, false
	}
	return o.RefreshToken, true
}

// HasRefreshToken returns a boolean if a field has been set.
func (o *GetUserAccessTokenRequest) HasRefreshToken() bool {
	if o != nil && !IsNil(o.RefreshToken) {
		return true
	}

	return false
}

// SetRefreshToken gets a reference to the given string and assigns it to the RefreshToken field.
func (o *GetUserAccessTokenRequest) SetRefreshToken(v string) {
	o.RefreshToken = &v
}

func (o GetUserAccessTokenRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetUserAccessTokenRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Expires) {
		toSerialize["expires"] = o.Expires
	}
	if !IsNil(o.GrantType) {
		toSerialize["grantType"] = o.GrantType
	}
	if !IsNil(o.RefreshToken) {
		toSerialize["refreshToken"] = o.RefreshToken
	}
	return toSerialize, nil
}

type NullableGetUserAccessTokenRequest struct {
	value *GetUserAccessTokenRequest
	isSet bool
}

func (v NullableGetUserAccessTokenRequest) Get() *GetUserAccessTokenRequest {
	return v.value
}

func (v *NullableGetUserAccessTokenRequest) Set(val *GetUserAccessTokenRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetUserAccessTokenRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetUserAccessTokenRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetUserAccessTokenRequest(val *GetUserAccessTokenRequest) *NullableGetUserAccessTokenRequest {
	return &NullableGetUserAccessTokenRequest{value: val, isSet: true}
}

func (v NullableGetUserAccessTokenRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetUserAccessTokenRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


