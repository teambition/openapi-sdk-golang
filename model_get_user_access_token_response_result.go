/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetUserAccessTokenResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetUserAccessTokenResponseResult{}

// GetUserAccessTokenResponseResult struct for GetUserAccessTokenResponseResult
type GetUserAccessTokenResponseResult struct {
	// 用户授权获取用户信息 token
	AccessToken *string `json:"accessToken,omitempty"`
	// accessToken 过期时间
	Expires *int32 `json:"expires,omitempty"`
	// 刷新 accessToken 时使用，永久有效直至用户退出登录
	RefreshToken *string `json:"refreshToken,omitempty"`
	// 固定为 Bearer
	TokenType *string `json:"tokenType,omitempty"`
	// 用户 ID
	UserId *string `json:"userId,omitempty"`
}

// NewGetUserAccessTokenResponseResult instantiates a new GetUserAccessTokenResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetUserAccessTokenResponseResult() *GetUserAccessTokenResponseResult {
	this := GetUserAccessTokenResponseResult{}
	return &this
}

// NewGetUserAccessTokenResponseResultWithDefaults instantiates a new GetUserAccessTokenResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetUserAccessTokenResponseResultWithDefaults() *GetUserAccessTokenResponseResult {
	this := GetUserAccessTokenResponseResult{}
	return &this
}

// GetAccessToken returns the AccessToken field value if set, zero value otherwise.
func (o *GetUserAccessTokenResponseResult) GetAccessToken() string {
	if o == nil || IsNil(o.AccessToken) {
		var ret string
		return ret
	}
	return *o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserAccessTokenResponseResult) GetAccessTokenOk() (*string, bool) {
	if o == nil || IsNil(o.AccessToken) {
		return nil, false
	}
	return o.AccessToken, true
}

// HasAccessToken returns a boolean if a field has been set.
func (o *GetUserAccessTokenResponseResult) HasAccessToken() bool {
	if o != nil && !IsNil(o.AccessToken) {
		return true
	}

	return false
}

// SetAccessToken gets a reference to the given string and assigns it to the AccessToken field.
func (o *GetUserAccessTokenResponseResult) SetAccessToken(v string) {
	o.AccessToken = &v
}

// GetExpires returns the Expires field value if set, zero value otherwise.
func (o *GetUserAccessTokenResponseResult) GetExpires() int32 {
	if o == nil || IsNil(o.Expires) {
		var ret int32
		return ret
	}
	return *o.Expires
}

// GetExpiresOk returns a tuple with the Expires field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserAccessTokenResponseResult) GetExpiresOk() (*int32, bool) {
	if o == nil || IsNil(o.Expires) {
		return nil, false
	}
	return o.Expires, true
}

// HasExpires returns a boolean if a field has been set.
func (o *GetUserAccessTokenResponseResult) HasExpires() bool {
	if o != nil && !IsNil(o.Expires) {
		return true
	}

	return false
}

// SetExpires gets a reference to the given int32 and assigns it to the Expires field.
func (o *GetUserAccessTokenResponseResult) SetExpires(v int32) {
	o.Expires = &v
}

// GetRefreshToken returns the RefreshToken field value if set, zero value otherwise.
func (o *GetUserAccessTokenResponseResult) GetRefreshToken() string {
	if o == nil || IsNil(o.RefreshToken) {
		var ret string
		return ret
	}
	return *o.RefreshToken
}

// GetRefreshTokenOk returns a tuple with the RefreshToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserAccessTokenResponseResult) GetRefreshTokenOk() (*string, bool) {
	if o == nil || IsNil(o.RefreshToken) {
		return nil, false
	}
	return o.RefreshToken, true
}

// HasRefreshToken returns a boolean if a field has been set.
func (o *GetUserAccessTokenResponseResult) HasRefreshToken() bool {
	if o != nil && !IsNil(o.RefreshToken) {
		return true
	}

	return false
}

// SetRefreshToken gets a reference to the given string and assigns it to the RefreshToken field.
func (o *GetUserAccessTokenResponseResult) SetRefreshToken(v string) {
	o.RefreshToken = &v
}

// GetTokenType returns the TokenType field value if set, zero value otherwise.
func (o *GetUserAccessTokenResponseResult) GetTokenType() string {
	if o == nil || IsNil(o.TokenType) {
		var ret string
		return ret
	}
	return *o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserAccessTokenResponseResult) GetTokenTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TokenType) {
		return nil, false
	}
	return o.TokenType, true
}

// HasTokenType returns a boolean if a field has been set.
func (o *GetUserAccessTokenResponseResult) HasTokenType() bool {
	if o != nil && !IsNil(o.TokenType) {
		return true
	}

	return false
}

// SetTokenType gets a reference to the given string and assigns it to the TokenType field.
func (o *GetUserAccessTokenResponseResult) SetTokenType(v string) {
	o.TokenType = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *GetUserAccessTokenResponseResult) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserAccessTokenResponseResult) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *GetUserAccessTokenResponseResult) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *GetUserAccessTokenResponseResult) SetUserId(v string) {
	o.UserId = &v
}

func (o GetUserAccessTokenResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetUserAccessTokenResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccessToken) {
		toSerialize["accessToken"] = o.AccessToken
	}
	if !IsNil(o.Expires) {
		toSerialize["expires"] = o.Expires
	}
	if !IsNil(o.RefreshToken) {
		toSerialize["refreshToken"] = o.RefreshToken
	}
	if !IsNil(o.TokenType) {
		toSerialize["tokenType"] = o.TokenType
	}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	return toSerialize, nil
}

type NullableGetUserAccessTokenResponseResult struct {
	value *GetUserAccessTokenResponseResult
	isSet bool
}

func (v NullableGetUserAccessTokenResponseResult) Get() *GetUserAccessTokenResponseResult {
	return v.value
}

func (v *NullableGetUserAccessTokenResponseResult) Set(val *GetUserAccessTokenResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableGetUserAccessTokenResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableGetUserAccessTokenResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetUserAccessTokenResponseResult(val *GetUserAccessTokenResponseResult) *NullableGetUserAccessTokenResponseResult {
	return &NullableGetUserAccessTokenResponseResult{value: val, isSet: true}
}

func (v NullableGetUserAccessTokenResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetUserAccessTokenResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


