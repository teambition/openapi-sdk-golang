/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetWorkspaceInfoResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetWorkspaceInfoResponseResult{}

// GetWorkspaceInfoResponseResult 获取知识库ID响应
type GetWorkspaceInfoResponseResult struct {
	// 项目绑定的知识库ID
	WorkspaceId *string `json:"workspaceId,omitempty"`
	// 项目绑定的知识库UUId,可用于钉钉开放文档接口查询
	WorkspaceUUID *string `json:"workspaceUUID,omitempty"`
	// 项目绑定的文件夹ID，非null表明绑定知识库为文件夹类型
	SubDentryId *string `json:"subDentryId,omitempty"`
	// 项目绑定的的文件夹UUId,可用于钉钉开放文档接口查询
	SubDentryUUID *string `json:"subDentryUUID,omitempty"`
}

// NewGetWorkspaceInfoResponseResult instantiates a new GetWorkspaceInfoResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetWorkspaceInfoResponseResult() *GetWorkspaceInfoResponseResult {
	this := GetWorkspaceInfoResponseResult{}
	return &this
}

// NewGetWorkspaceInfoResponseResultWithDefaults instantiates a new GetWorkspaceInfoResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetWorkspaceInfoResponseResultWithDefaults() *GetWorkspaceInfoResponseResult {
	this := GetWorkspaceInfoResponseResult{}
	return &this
}

// GetWorkspaceId returns the WorkspaceId field value if set, zero value otherwise.
func (o *GetWorkspaceInfoResponseResult) GetWorkspaceId() string {
	if o == nil || IsNil(o.WorkspaceId) {
		var ret string
		return ret
	}
	return *o.WorkspaceId
}

// GetWorkspaceIdOk returns a tuple with the WorkspaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetWorkspaceInfoResponseResult) GetWorkspaceIdOk() (*string, bool) {
	if o == nil || IsNil(o.WorkspaceId) {
		return nil, false
	}
	return o.WorkspaceId, true
}

// HasWorkspaceId returns a boolean if a field has been set.
func (o *GetWorkspaceInfoResponseResult) HasWorkspaceId() bool {
	if o != nil && !IsNil(o.WorkspaceId) {
		return true
	}

	return false
}

// SetWorkspaceId gets a reference to the given string and assigns it to the WorkspaceId field.
func (o *GetWorkspaceInfoResponseResult) SetWorkspaceId(v string) {
	o.WorkspaceId = &v
}

// GetWorkspaceUUID returns the WorkspaceUUID field value if set, zero value otherwise.
func (o *GetWorkspaceInfoResponseResult) GetWorkspaceUUID() string {
	if o == nil || IsNil(o.WorkspaceUUID) {
		var ret string
		return ret
	}
	return *o.WorkspaceUUID
}

// GetWorkspaceUUIDOk returns a tuple with the WorkspaceUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetWorkspaceInfoResponseResult) GetWorkspaceUUIDOk() (*string, bool) {
	if o == nil || IsNil(o.WorkspaceUUID) {
		return nil, false
	}
	return o.WorkspaceUUID, true
}

// HasWorkspaceUUID returns a boolean if a field has been set.
func (o *GetWorkspaceInfoResponseResult) HasWorkspaceUUID() bool {
	if o != nil && !IsNil(o.WorkspaceUUID) {
		return true
	}

	return false
}

// SetWorkspaceUUID gets a reference to the given string and assigns it to the WorkspaceUUID field.
func (o *GetWorkspaceInfoResponseResult) SetWorkspaceUUID(v string) {
	o.WorkspaceUUID = &v
}

// GetSubDentryId returns the SubDentryId field value if set, zero value otherwise.
func (o *GetWorkspaceInfoResponseResult) GetSubDentryId() string {
	if o == nil || IsNil(o.SubDentryId) {
		var ret string
		return ret
	}
	return *o.SubDentryId
}

// GetSubDentryIdOk returns a tuple with the SubDentryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetWorkspaceInfoResponseResult) GetSubDentryIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubDentryId) {
		return nil, false
	}
	return o.SubDentryId, true
}

// HasSubDentryId returns a boolean if a field has been set.
func (o *GetWorkspaceInfoResponseResult) HasSubDentryId() bool {
	if o != nil && !IsNil(o.SubDentryId) {
		return true
	}

	return false
}

// SetSubDentryId gets a reference to the given string and assigns it to the SubDentryId field.
func (o *GetWorkspaceInfoResponseResult) SetSubDentryId(v string) {
	o.SubDentryId = &v
}

// GetSubDentryUUID returns the SubDentryUUID field value if set, zero value otherwise.
func (o *GetWorkspaceInfoResponseResult) GetSubDentryUUID() string {
	if o == nil || IsNil(o.SubDentryUUID) {
		var ret string
		return ret
	}
	return *o.SubDentryUUID
}

// GetSubDentryUUIDOk returns a tuple with the SubDentryUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetWorkspaceInfoResponseResult) GetSubDentryUUIDOk() (*string, bool) {
	if o == nil || IsNil(o.SubDentryUUID) {
		return nil, false
	}
	return o.SubDentryUUID, true
}

// HasSubDentryUUID returns a boolean if a field has been set.
func (o *GetWorkspaceInfoResponseResult) HasSubDentryUUID() bool {
	if o != nil && !IsNil(o.SubDentryUUID) {
		return true
	}

	return false
}

// SetSubDentryUUID gets a reference to the given string and assigns it to the SubDentryUUID field.
func (o *GetWorkspaceInfoResponseResult) SetSubDentryUUID(v string) {
	o.SubDentryUUID = &v
}

func (o GetWorkspaceInfoResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetWorkspaceInfoResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.WorkspaceId) {
		toSerialize["workspaceId"] = o.WorkspaceId
	}
	if !IsNil(o.WorkspaceUUID) {
		toSerialize["workspaceUUID"] = o.WorkspaceUUID
	}
	if !IsNil(o.SubDentryId) {
		toSerialize["subDentryId"] = o.SubDentryId
	}
	if !IsNil(o.SubDentryUUID) {
		toSerialize["subDentryUUID"] = o.SubDentryUUID
	}
	return toSerialize, nil
}

type NullableGetWorkspaceInfoResponseResult struct {
	value *GetWorkspaceInfoResponseResult
	isSet bool
}

func (v NullableGetWorkspaceInfoResponseResult) Get() *GetWorkspaceInfoResponseResult {
	return v.value
}

func (v *NullableGetWorkspaceInfoResponseResult) Set(val *GetWorkspaceInfoResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableGetWorkspaceInfoResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableGetWorkspaceInfoResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetWorkspaceInfoResponseResult(val *GetWorkspaceInfoResponseResult) *NullableGetWorkspaceInfoResponseResult {
	return &NullableGetWorkspaceInfoResponseResult{value: val, isSet: true}
}

func (v NullableGetWorkspaceInfoResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetWorkspaceInfoResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


