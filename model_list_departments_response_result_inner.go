/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListDepartmentsResponseResultInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListDepartmentsResponseResultInner{}

// ListDepartmentsResponseResultInner struct for ListDepartmentsResponseResultInner
type ListDepartmentsResponseResultInner struct {
	// 企业 ID
	OrgId *string `json:"orgId,omitempty"`
	// 部门 ID
	DeptId *string `json:"deptId,omitempty"`
	// 部门名称
	Name *string `json:"name,omitempty"`
	// 父部门 ID  （没有为空）
	ParentId *string `json:"parentId,omitempty"`
	// 创建时间
	Created *string `json:"created,omitempty"`
	// 部门负责人 ID
	LeaderId *string `json:"leaderId,omitempty"`
	// 创建者 ID
	CreatorId *string `json:"creatorId,omitempty"`
	// 所有祖先部门 ID 列表，ancestorIds[0] 为直接父部门，ancestorIds[1] 为父部门的父部门，以此类推
	AncestorIds []string `json:"ancestorIds,omitempty"`
}

// NewListDepartmentsResponseResultInner instantiates a new ListDepartmentsResponseResultInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListDepartmentsResponseResultInner() *ListDepartmentsResponseResultInner {
	this := ListDepartmentsResponseResultInner{}
	return &this
}

// NewListDepartmentsResponseResultInnerWithDefaults instantiates a new ListDepartmentsResponseResultInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListDepartmentsResponseResultInnerWithDefaults() *ListDepartmentsResponseResultInner {
	this := ListDepartmentsResponseResultInner{}
	return &this
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *ListDepartmentsResponseResultInner) GetOrgId() string {
	if o == nil || IsNil(o.OrgId) {
		var ret string
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListDepartmentsResponseResultInner) GetOrgIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *ListDepartmentsResponseResultInner) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given string and assigns it to the OrgId field.
func (o *ListDepartmentsResponseResultInner) SetOrgId(v string) {
	o.OrgId = &v
}

// GetDeptId returns the DeptId field value if set, zero value otherwise.
func (o *ListDepartmentsResponseResultInner) GetDeptId() string {
	if o == nil || IsNil(o.DeptId) {
		var ret string
		return ret
	}
	return *o.DeptId
}

// GetDeptIdOk returns a tuple with the DeptId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListDepartmentsResponseResultInner) GetDeptIdOk() (*string, bool) {
	if o == nil || IsNil(o.DeptId) {
		return nil, false
	}
	return o.DeptId, true
}

// HasDeptId returns a boolean if a field has been set.
func (o *ListDepartmentsResponseResultInner) HasDeptId() bool {
	if o != nil && !IsNil(o.DeptId) {
		return true
	}

	return false
}

// SetDeptId gets a reference to the given string and assigns it to the DeptId field.
func (o *ListDepartmentsResponseResultInner) SetDeptId(v string) {
	o.DeptId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ListDepartmentsResponseResultInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListDepartmentsResponseResultInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ListDepartmentsResponseResultInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ListDepartmentsResponseResultInner) SetName(v string) {
	o.Name = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *ListDepartmentsResponseResultInner) GetParentId() string {
	if o == nil || IsNil(o.ParentId) {
		var ret string
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListDepartmentsResponseResultInner) GetParentIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentId) {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *ListDepartmentsResponseResultInner) HasParentId() bool {
	if o != nil && !IsNil(o.ParentId) {
		return true
	}

	return false
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *ListDepartmentsResponseResultInner) SetParentId(v string) {
	o.ParentId = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *ListDepartmentsResponseResultInner) GetCreated() string {
	if o == nil || IsNil(o.Created) {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListDepartmentsResponseResultInner) GetCreatedOk() (*string, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *ListDepartmentsResponseResultInner) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *ListDepartmentsResponseResultInner) SetCreated(v string) {
	o.Created = &v
}

// GetLeaderId returns the LeaderId field value if set, zero value otherwise.
func (o *ListDepartmentsResponseResultInner) GetLeaderId() string {
	if o == nil || IsNil(o.LeaderId) {
		var ret string
		return ret
	}
	return *o.LeaderId
}

// GetLeaderIdOk returns a tuple with the LeaderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListDepartmentsResponseResultInner) GetLeaderIdOk() (*string, bool) {
	if o == nil || IsNil(o.LeaderId) {
		return nil, false
	}
	return o.LeaderId, true
}

// HasLeaderId returns a boolean if a field has been set.
func (o *ListDepartmentsResponseResultInner) HasLeaderId() bool {
	if o != nil && !IsNil(o.LeaderId) {
		return true
	}

	return false
}

// SetLeaderId gets a reference to the given string and assigns it to the LeaderId field.
func (o *ListDepartmentsResponseResultInner) SetLeaderId(v string) {
	o.LeaderId = &v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise.
func (o *ListDepartmentsResponseResultInner) GetCreatorId() string {
	if o == nil || IsNil(o.CreatorId) {
		var ret string
		return ret
	}
	return *o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListDepartmentsResponseResultInner) GetCreatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorId) {
		return nil, false
	}
	return o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *ListDepartmentsResponseResultInner) HasCreatorId() bool {
	if o != nil && !IsNil(o.CreatorId) {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given string and assigns it to the CreatorId field.
func (o *ListDepartmentsResponseResultInner) SetCreatorId(v string) {
	o.CreatorId = &v
}

// GetAncestorIds returns the AncestorIds field value if set, zero value otherwise.
func (o *ListDepartmentsResponseResultInner) GetAncestorIds() []string {
	if o == nil || IsNil(o.AncestorIds) {
		var ret []string
		return ret
	}
	return o.AncestorIds
}

// GetAncestorIdsOk returns a tuple with the AncestorIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListDepartmentsResponseResultInner) GetAncestorIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.AncestorIds) {
		return nil, false
	}
	return o.AncestorIds, true
}

// HasAncestorIds returns a boolean if a field has been set.
func (o *ListDepartmentsResponseResultInner) HasAncestorIds() bool {
	if o != nil && !IsNil(o.AncestorIds) {
		return true
	}

	return false
}

// SetAncestorIds gets a reference to the given []string and assigns it to the AncestorIds field.
func (o *ListDepartmentsResponseResultInner) SetAncestorIds(v []string) {
	o.AncestorIds = v
}

func (o ListDepartmentsResponseResultInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListDepartmentsResponseResultInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OrgId) {
		toSerialize["orgId"] = o.OrgId
	}
	if !IsNil(o.DeptId) {
		toSerialize["deptId"] = o.DeptId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ParentId) {
		toSerialize["parentId"] = o.ParentId
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.LeaderId) {
		toSerialize["leaderId"] = o.LeaderId
	}
	if !IsNil(o.CreatorId) {
		toSerialize["creatorId"] = o.CreatorId
	}
	if !IsNil(o.AncestorIds) {
		toSerialize["ancestorIds"] = o.AncestorIds
	}
	return toSerialize, nil
}

type NullableListDepartmentsResponseResultInner struct {
	value *ListDepartmentsResponseResultInner
	isSet bool
}

func (v NullableListDepartmentsResponseResultInner) Get() *ListDepartmentsResponseResultInner {
	return v.value
}

func (v *NullableListDepartmentsResponseResultInner) Set(val *ListDepartmentsResponseResultInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListDepartmentsResponseResultInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListDepartmentsResponseResultInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListDepartmentsResponseResultInner(val *ListDepartmentsResponseResultInner) *NullableListDepartmentsResponseResultInner {
	return &NullableListDepartmentsResponseResultInner{value: val, isSet: true}
}

func (v NullableListDepartmentsResponseResultInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListDepartmentsResponseResultInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


