/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListLicenseAllocationsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListLicenseAllocationsResponse{}

// ListLicenseAllocationsResponse struct for ListLicenseAllocationsResponse
type ListLicenseAllocationsResponse struct {
	Success *bool `json:"success,omitempty"`
	Result []ListLicenseAllocationsResponseResultInner `json:"result,omitempty"`
	// 分页标记，当返回为非空字符串时表示还有更多数据，可以将此字符串赋值到请求参数 pageToken 获取更多数据。示例值：\"cfcbh8noe9jct71bqkg0\"
	NextPageToken *int32 `json:"nextPageToken,omitempty"`
	// 记录总数
	TotalSize *int32 `json:"totalSize,omitempty"`
	// 本次请求条件下的数据总量
	Count *float32 `json:"count,omitempty"`
	// 响应状态码
	Code *float32 `json:"code,omitempty"`
	// 异常错误信息
	ErrorMessage *string `json:"errorMessage,omitempty"`
	// 请求 ID，请求异常时可提供此 ID，进行问题排查。
	RequestId *string `json:"requestId,omitempty"`
}

// NewListLicenseAllocationsResponse instantiates a new ListLicenseAllocationsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListLicenseAllocationsResponse() *ListLicenseAllocationsResponse {
	this := ListLicenseAllocationsResponse{}
	return &this
}

// NewListLicenseAllocationsResponseWithDefaults instantiates a new ListLicenseAllocationsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListLicenseAllocationsResponseWithDefaults() *ListLicenseAllocationsResponse {
	this := ListLicenseAllocationsResponse{}
	return &this
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *ListLicenseAllocationsResponse) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListLicenseAllocationsResponse) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *ListLicenseAllocationsResponse) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *ListLicenseAllocationsResponse) SetSuccess(v bool) {
	o.Success = &v
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *ListLicenseAllocationsResponse) GetResult() []ListLicenseAllocationsResponseResultInner {
	if o == nil || IsNil(o.Result) {
		var ret []ListLicenseAllocationsResponseResultInner
		return ret
	}
	return o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListLicenseAllocationsResponse) GetResultOk() ([]ListLicenseAllocationsResponseResultInner, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *ListLicenseAllocationsResponse) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given []ListLicenseAllocationsResponseResultInner and assigns it to the Result field.
func (o *ListLicenseAllocationsResponse) SetResult(v []ListLicenseAllocationsResponseResultInner) {
	o.Result = v
}

// GetNextPageToken returns the NextPageToken field value if set, zero value otherwise.
func (o *ListLicenseAllocationsResponse) GetNextPageToken() int32 {
	if o == nil || IsNil(o.NextPageToken) {
		var ret int32
		return ret
	}
	return *o.NextPageToken
}

// GetNextPageTokenOk returns a tuple with the NextPageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListLicenseAllocationsResponse) GetNextPageTokenOk() (*int32, bool) {
	if o == nil || IsNil(o.NextPageToken) {
		return nil, false
	}
	return o.NextPageToken, true
}

// HasNextPageToken returns a boolean if a field has been set.
func (o *ListLicenseAllocationsResponse) HasNextPageToken() bool {
	if o != nil && !IsNil(o.NextPageToken) {
		return true
	}

	return false
}

// SetNextPageToken gets a reference to the given int32 and assigns it to the NextPageToken field.
func (o *ListLicenseAllocationsResponse) SetNextPageToken(v int32) {
	o.NextPageToken = &v
}

// GetTotalSize returns the TotalSize field value if set, zero value otherwise.
func (o *ListLicenseAllocationsResponse) GetTotalSize() int32 {
	if o == nil || IsNil(o.TotalSize) {
		var ret int32
		return ret
	}
	return *o.TotalSize
}

// GetTotalSizeOk returns a tuple with the TotalSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListLicenseAllocationsResponse) GetTotalSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalSize) {
		return nil, false
	}
	return o.TotalSize, true
}

// HasTotalSize returns a boolean if a field has been set.
func (o *ListLicenseAllocationsResponse) HasTotalSize() bool {
	if o != nil && !IsNil(o.TotalSize) {
		return true
	}

	return false
}

// SetTotalSize gets a reference to the given int32 and assigns it to the TotalSize field.
func (o *ListLicenseAllocationsResponse) SetTotalSize(v int32) {
	o.TotalSize = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *ListLicenseAllocationsResponse) GetCount() float32 {
	if o == nil || IsNil(o.Count) {
		var ret float32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListLicenseAllocationsResponse) GetCountOk() (*float32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *ListLicenseAllocationsResponse) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given float32 and assigns it to the Count field.
func (o *ListLicenseAllocationsResponse) SetCount(v float32) {
	o.Count = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ListLicenseAllocationsResponse) GetCode() float32 {
	if o == nil || IsNil(o.Code) {
		var ret float32
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListLicenseAllocationsResponse) GetCodeOk() (*float32, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ListLicenseAllocationsResponse) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given float32 and assigns it to the Code field.
func (o *ListLicenseAllocationsResponse) SetCode(v float32) {
	o.Code = &v
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise.
func (o *ListLicenseAllocationsResponse) GetErrorMessage() string {
	if o == nil || IsNil(o.ErrorMessage) {
		var ret string
		return ret
	}
	return *o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListLicenseAllocationsResponse) GetErrorMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorMessage) {
		return nil, false
	}
	return o.ErrorMessage, true
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *ListLicenseAllocationsResponse) HasErrorMessage() bool {
	if o != nil && !IsNil(o.ErrorMessage) {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given string and assigns it to the ErrorMessage field.
func (o *ListLicenseAllocationsResponse) SetErrorMessage(v string) {
	o.ErrorMessage = &v
}

// GetRequestId returns the RequestId field value if set, zero value otherwise.
func (o *ListLicenseAllocationsResponse) GetRequestId() string {
	if o == nil || IsNil(o.RequestId) {
		var ret string
		return ret
	}
	return *o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListLicenseAllocationsResponse) GetRequestIdOk() (*string, bool) {
	if o == nil || IsNil(o.RequestId) {
		return nil, false
	}
	return o.RequestId, true
}

// HasRequestId returns a boolean if a field has been set.
func (o *ListLicenseAllocationsResponse) HasRequestId() bool {
	if o != nil && !IsNil(o.RequestId) {
		return true
	}

	return false
}

// SetRequestId gets a reference to the given string and assigns it to the RequestId field.
func (o *ListLicenseAllocationsResponse) SetRequestId(v string) {
	o.RequestId = &v
}

func (o ListLicenseAllocationsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListLicenseAllocationsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	if !IsNil(o.NextPageToken) {
		toSerialize["nextPageToken"] = o.NextPageToken
	}
	if !IsNil(o.TotalSize) {
		toSerialize["totalSize"] = o.TotalSize
	}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.ErrorMessage) {
		toSerialize["errorMessage"] = o.ErrorMessage
	}
	if !IsNil(o.RequestId) {
		toSerialize["requestId"] = o.RequestId
	}
	return toSerialize, nil
}

type NullableListLicenseAllocationsResponse struct {
	value *ListLicenseAllocationsResponse
	isSet bool
}

func (v NullableListLicenseAllocationsResponse) Get() *ListLicenseAllocationsResponse {
	return v.value
}

func (v *NullableListLicenseAllocationsResponse) Set(val *ListLicenseAllocationsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListLicenseAllocationsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListLicenseAllocationsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListLicenseAllocationsResponse(val *ListLicenseAllocationsResponse) *NullableListLicenseAllocationsResponse {
	return &NullableListLicenseAllocationsResponse{value: val, isSet: true}
}

func (v NullableListLicenseAllocationsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListLicenseAllocationsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


