/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListLicenseAllocationsResponseResultInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListLicenseAllocationsResponseResultInner{}

// ListLicenseAllocationsResponseResultInner struct for ListLicenseAllocationsResponseResultInner
type ListLicenseAllocationsResponseResultInner struct {
	// 用户 ID
	UserId *string `json:"userId,omitempty"`
	// 企业成员名称
	MemberName *string `json:"memberName,omitempty"`
	// 角色名称
	RoleName *string `json:"roleName,omitempty"`
	// 角色ID
	RoleId *string `json:"roleId,omitempty"`
	// 加入的部门列表
	Teams []ListLicenseAllocationsResponseResultInnerTeamsInner `json:"teams,omitempty"`
}

// NewListLicenseAllocationsResponseResultInner instantiates a new ListLicenseAllocationsResponseResultInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListLicenseAllocationsResponseResultInner() *ListLicenseAllocationsResponseResultInner {
	this := ListLicenseAllocationsResponseResultInner{}
	return &this
}

// NewListLicenseAllocationsResponseResultInnerWithDefaults instantiates a new ListLicenseAllocationsResponseResultInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListLicenseAllocationsResponseResultInnerWithDefaults() *ListLicenseAllocationsResponseResultInner {
	this := ListLicenseAllocationsResponseResultInner{}
	return &this
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *ListLicenseAllocationsResponseResultInner) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListLicenseAllocationsResponseResultInner) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *ListLicenseAllocationsResponseResultInner) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *ListLicenseAllocationsResponseResultInner) SetUserId(v string) {
	o.UserId = &v
}

// GetMemberName returns the MemberName field value if set, zero value otherwise.
func (o *ListLicenseAllocationsResponseResultInner) GetMemberName() string {
	if o == nil || IsNil(o.MemberName) {
		var ret string
		return ret
	}
	return *o.MemberName
}

// GetMemberNameOk returns a tuple with the MemberName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListLicenseAllocationsResponseResultInner) GetMemberNameOk() (*string, bool) {
	if o == nil || IsNil(o.MemberName) {
		return nil, false
	}
	return o.MemberName, true
}

// HasMemberName returns a boolean if a field has been set.
func (o *ListLicenseAllocationsResponseResultInner) HasMemberName() bool {
	if o != nil && !IsNil(o.MemberName) {
		return true
	}

	return false
}

// SetMemberName gets a reference to the given string and assigns it to the MemberName field.
func (o *ListLicenseAllocationsResponseResultInner) SetMemberName(v string) {
	o.MemberName = &v
}

// GetRoleName returns the RoleName field value if set, zero value otherwise.
func (o *ListLicenseAllocationsResponseResultInner) GetRoleName() string {
	if o == nil || IsNil(o.RoleName) {
		var ret string
		return ret
	}
	return *o.RoleName
}

// GetRoleNameOk returns a tuple with the RoleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListLicenseAllocationsResponseResultInner) GetRoleNameOk() (*string, bool) {
	if o == nil || IsNil(o.RoleName) {
		return nil, false
	}
	return o.RoleName, true
}

// HasRoleName returns a boolean if a field has been set.
func (o *ListLicenseAllocationsResponseResultInner) HasRoleName() bool {
	if o != nil && !IsNil(o.RoleName) {
		return true
	}

	return false
}

// SetRoleName gets a reference to the given string and assigns it to the RoleName field.
func (o *ListLicenseAllocationsResponseResultInner) SetRoleName(v string) {
	o.RoleName = &v
}

// GetRoleId returns the RoleId field value if set, zero value otherwise.
func (o *ListLicenseAllocationsResponseResultInner) GetRoleId() string {
	if o == nil || IsNil(o.RoleId) {
		var ret string
		return ret
	}
	return *o.RoleId
}

// GetRoleIdOk returns a tuple with the RoleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListLicenseAllocationsResponseResultInner) GetRoleIdOk() (*string, bool) {
	if o == nil || IsNil(o.RoleId) {
		return nil, false
	}
	return o.RoleId, true
}

// HasRoleId returns a boolean if a field has been set.
func (o *ListLicenseAllocationsResponseResultInner) HasRoleId() bool {
	if o != nil && !IsNil(o.RoleId) {
		return true
	}

	return false
}

// SetRoleId gets a reference to the given string and assigns it to the RoleId field.
func (o *ListLicenseAllocationsResponseResultInner) SetRoleId(v string) {
	o.RoleId = &v
}

// GetTeams returns the Teams field value if set, zero value otherwise.
func (o *ListLicenseAllocationsResponseResultInner) GetTeams() []ListLicenseAllocationsResponseResultInnerTeamsInner {
	if o == nil || IsNil(o.Teams) {
		var ret []ListLicenseAllocationsResponseResultInnerTeamsInner
		return ret
	}
	return o.Teams
}

// GetTeamsOk returns a tuple with the Teams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListLicenseAllocationsResponseResultInner) GetTeamsOk() ([]ListLicenseAllocationsResponseResultInnerTeamsInner, bool) {
	if o == nil || IsNil(o.Teams) {
		return nil, false
	}
	return o.Teams, true
}

// HasTeams returns a boolean if a field has been set.
func (o *ListLicenseAllocationsResponseResultInner) HasTeams() bool {
	if o != nil && !IsNil(o.Teams) {
		return true
	}

	return false
}

// SetTeams gets a reference to the given []ListLicenseAllocationsResponseResultInnerTeamsInner and assigns it to the Teams field.
func (o *ListLicenseAllocationsResponseResultInner) SetTeams(v []ListLicenseAllocationsResponseResultInnerTeamsInner) {
	o.Teams = v
}

func (o ListLicenseAllocationsResponseResultInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListLicenseAllocationsResponseResultInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	if !IsNil(o.MemberName) {
		toSerialize["memberName"] = o.MemberName
	}
	if !IsNil(o.RoleName) {
		toSerialize["roleName"] = o.RoleName
	}
	if !IsNil(o.RoleId) {
		toSerialize["roleId"] = o.RoleId
	}
	if !IsNil(o.Teams) {
		toSerialize["teams"] = o.Teams
	}
	return toSerialize, nil
}

type NullableListLicenseAllocationsResponseResultInner struct {
	value *ListLicenseAllocationsResponseResultInner
	isSet bool
}

func (v NullableListLicenseAllocationsResponseResultInner) Get() *ListLicenseAllocationsResponseResultInner {
	return v.value
}

func (v *NullableListLicenseAllocationsResponseResultInner) Set(val *ListLicenseAllocationsResponseResultInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListLicenseAllocationsResponseResultInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListLicenseAllocationsResponseResultInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListLicenseAllocationsResponseResultInner(val *ListLicenseAllocationsResponseResultInner) *NullableListLicenseAllocationsResponseResultInner {
	return &NullableListLicenseAllocationsResponseResultInner{value: val, isSet: true}
}

func (v NullableListLicenseAllocationsResponseResultInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListLicenseAllocationsResponseResultInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


