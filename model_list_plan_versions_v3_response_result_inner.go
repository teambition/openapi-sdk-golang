/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListPlanVersionsV3ResponseResultInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListPlanVersionsV3ResponseResultInner{}

// ListPlanVersionsV3ResponseResultInner struct for ListPlanVersionsV3ResponseResultInner
type ListPlanVersionsV3ResponseResultInner struct {
	// 版本ID
	Id *string `json:"id,omitempty"`
	// 项目计划ID
	ProjectPlanId *string `json:"projectPlanId,omitempty"`
	// 是否当前版本
	IsCurrentVersion *bool `json:"isCurrentVersion,omitempty"`
	// 版本状态
	Status *string `json:"status,omitempty"`
	// 发布原因
	Reason *string `json:"reason,omitempty"`
	// 发布者ID
	PublishUserId *string `json:"publishUserId,omitempty"`
	// 发布时间(UTC)
	PublishTime *string `json:"publishTime,omitempty"`
	// 创建者ID
	CreatorId *string `json:"creatorId,omitempty"`
	// 创建时间(UTC)
	Created *string `json:"created,omitempty"`
	// 修改者ID
	ModifierId *string `json:"modifierId,omitempty"`
	// 更新时间(UTC)
	Updated *string `json:"updated,omitempty"`
}

// NewListPlanVersionsV3ResponseResultInner instantiates a new ListPlanVersionsV3ResponseResultInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListPlanVersionsV3ResponseResultInner() *ListPlanVersionsV3ResponseResultInner {
	this := ListPlanVersionsV3ResponseResultInner{}
	return &this
}

// NewListPlanVersionsV3ResponseResultInnerWithDefaults instantiates a new ListPlanVersionsV3ResponseResultInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListPlanVersionsV3ResponseResultInnerWithDefaults() *ListPlanVersionsV3ResponseResultInner {
	this := ListPlanVersionsV3ResponseResultInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ListPlanVersionsV3ResponseResultInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPlanVersionsV3ResponseResultInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ListPlanVersionsV3ResponseResultInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ListPlanVersionsV3ResponseResultInner) SetId(v string) {
	o.Id = &v
}

// GetProjectPlanId returns the ProjectPlanId field value if set, zero value otherwise.
func (o *ListPlanVersionsV3ResponseResultInner) GetProjectPlanId() string {
	if o == nil || IsNil(o.ProjectPlanId) {
		var ret string
		return ret
	}
	return *o.ProjectPlanId
}

// GetProjectPlanIdOk returns a tuple with the ProjectPlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPlanVersionsV3ResponseResultInner) GetProjectPlanIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectPlanId) {
		return nil, false
	}
	return o.ProjectPlanId, true
}

// HasProjectPlanId returns a boolean if a field has been set.
func (o *ListPlanVersionsV3ResponseResultInner) HasProjectPlanId() bool {
	if o != nil && !IsNil(o.ProjectPlanId) {
		return true
	}

	return false
}

// SetProjectPlanId gets a reference to the given string and assigns it to the ProjectPlanId field.
func (o *ListPlanVersionsV3ResponseResultInner) SetProjectPlanId(v string) {
	o.ProjectPlanId = &v
}

// GetIsCurrentVersion returns the IsCurrentVersion field value if set, zero value otherwise.
func (o *ListPlanVersionsV3ResponseResultInner) GetIsCurrentVersion() bool {
	if o == nil || IsNil(o.IsCurrentVersion) {
		var ret bool
		return ret
	}
	return *o.IsCurrentVersion
}

// GetIsCurrentVersionOk returns a tuple with the IsCurrentVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPlanVersionsV3ResponseResultInner) GetIsCurrentVersionOk() (*bool, bool) {
	if o == nil || IsNil(o.IsCurrentVersion) {
		return nil, false
	}
	return o.IsCurrentVersion, true
}

// HasIsCurrentVersion returns a boolean if a field has been set.
func (o *ListPlanVersionsV3ResponseResultInner) HasIsCurrentVersion() bool {
	if o != nil && !IsNil(o.IsCurrentVersion) {
		return true
	}

	return false
}

// SetIsCurrentVersion gets a reference to the given bool and assigns it to the IsCurrentVersion field.
func (o *ListPlanVersionsV3ResponseResultInner) SetIsCurrentVersion(v bool) {
	o.IsCurrentVersion = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ListPlanVersionsV3ResponseResultInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPlanVersionsV3ResponseResultInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ListPlanVersionsV3ResponseResultInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ListPlanVersionsV3ResponseResultInner) SetStatus(v string) {
	o.Status = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *ListPlanVersionsV3ResponseResultInner) GetReason() string {
	if o == nil || IsNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPlanVersionsV3ResponseResultInner) GetReasonOk() (*string, bool) {
	if o == nil || IsNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *ListPlanVersionsV3ResponseResultInner) HasReason() bool {
	if o != nil && !IsNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *ListPlanVersionsV3ResponseResultInner) SetReason(v string) {
	o.Reason = &v
}

// GetPublishUserId returns the PublishUserId field value if set, zero value otherwise.
func (o *ListPlanVersionsV3ResponseResultInner) GetPublishUserId() string {
	if o == nil || IsNil(o.PublishUserId) {
		var ret string
		return ret
	}
	return *o.PublishUserId
}

// GetPublishUserIdOk returns a tuple with the PublishUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPlanVersionsV3ResponseResultInner) GetPublishUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.PublishUserId) {
		return nil, false
	}
	return o.PublishUserId, true
}

// HasPublishUserId returns a boolean if a field has been set.
func (o *ListPlanVersionsV3ResponseResultInner) HasPublishUserId() bool {
	if o != nil && !IsNil(o.PublishUserId) {
		return true
	}

	return false
}

// SetPublishUserId gets a reference to the given string and assigns it to the PublishUserId field.
func (o *ListPlanVersionsV3ResponseResultInner) SetPublishUserId(v string) {
	o.PublishUserId = &v
}

// GetPublishTime returns the PublishTime field value if set, zero value otherwise.
func (o *ListPlanVersionsV3ResponseResultInner) GetPublishTime() string {
	if o == nil || IsNil(o.PublishTime) {
		var ret string
		return ret
	}
	return *o.PublishTime
}

// GetPublishTimeOk returns a tuple with the PublishTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPlanVersionsV3ResponseResultInner) GetPublishTimeOk() (*string, bool) {
	if o == nil || IsNil(o.PublishTime) {
		return nil, false
	}
	return o.PublishTime, true
}

// HasPublishTime returns a boolean if a field has been set.
func (o *ListPlanVersionsV3ResponseResultInner) HasPublishTime() bool {
	if o != nil && !IsNil(o.PublishTime) {
		return true
	}

	return false
}

// SetPublishTime gets a reference to the given string and assigns it to the PublishTime field.
func (o *ListPlanVersionsV3ResponseResultInner) SetPublishTime(v string) {
	o.PublishTime = &v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise.
func (o *ListPlanVersionsV3ResponseResultInner) GetCreatorId() string {
	if o == nil || IsNil(o.CreatorId) {
		var ret string
		return ret
	}
	return *o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPlanVersionsV3ResponseResultInner) GetCreatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorId) {
		return nil, false
	}
	return o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *ListPlanVersionsV3ResponseResultInner) HasCreatorId() bool {
	if o != nil && !IsNil(o.CreatorId) {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given string and assigns it to the CreatorId field.
func (o *ListPlanVersionsV3ResponseResultInner) SetCreatorId(v string) {
	o.CreatorId = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *ListPlanVersionsV3ResponseResultInner) GetCreated() string {
	if o == nil || IsNil(o.Created) {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPlanVersionsV3ResponseResultInner) GetCreatedOk() (*string, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *ListPlanVersionsV3ResponseResultInner) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *ListPlanVersionsV3ResponseResultInner) SetCreated(v string) {
	o.Created = &v
}

// GetModifierId returns the ModifierId field value if set, zero value otherwise.
func (o *ListPlanVersionsV3ResponseResultInner) GetModifierId() string {
	if o == nil || IsNil(o.ModifierId) {
		var ret string
		return ret
	}
	return *o.ModifierId
}

// GetModifierIdOk returns a tuple with the ModifierId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPlanVersionsV3ResponseResultInner) GetModifierIdOk() (*string, bool) {
	if o == nil || IsNil(o.ModifierId) {
		return nil, false
	}
	return o.ModifierId, true
}

// HasModifierId returns a boolean if a field has been set.
func (o *ListPlanVersionsV3ResponseResultInner) HasModifierId() bool {
	if o != nil && !IsNil(o.ModifierId) {
		return true
	}

	return false
}

// SetModifierId gets a reference to the given string and assigns it to the ModifierId field.
func (o *ListPlanVersionsV3ResponseResultInner) SetModifierId(v string) {
	o.ModifierId = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *ListPlanVersionsV3ResponseResultInner) GetUpdated() string {
	if o == nil || IsNil(o.Updated) {
		var ret string
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPlanVersionsV3ResponseResultInner) GetUpdatedOk() (*string, bool) {
	if o == nil || IsNil(o.Updated) {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *ListPlanVersionsV3ResponseResultInner) HasUpdated() bool {
	if o != nil && !IsNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given string and assigns it to the Updated field.
func (o *ListPlanVersionsV3ResponseResultInner) SetUpdated(v string) {
	o.Updated = &v
}

func (o ListPlanVersionsV3ResponseResultInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListPlanVersionsV3ResponseResultInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ProjectPlanId) {
		toSerialize["projectPlanId"] = o.ProjectPlanId
	}
	if !IsNil(o.IsCurrentVersion) {
		toSerialize["isCurrentVersion"] = o.IsCurrentVersion
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Reason) {
		toSerialize["reason"] = o.Reason
	}
	if !IsNil(o.PublishUserId) {
		toSerialize["publishUserId"] = o.PublishUserId
	}
	if !IsNil(o.PublishTime) {
		toSerialize["publishTime"] = o.PublishTime
	}
	if !IsNil(o.CreatorId) {
		toSerialize["creatorId"] = o.CreatorId
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.ModifierId) {
		toSerialize["modifierId"] = o.ModifierId
	}
	if !IsNil(o.Updated) {
		toSerialize["updated"] = o.Updated
	}
	return toSerialize, nil
}

type NullableListPlanVersionsV3ResponseResultInner struct {
	value *ListPlanVersionsV3ResponseResultInner
	isSet bool
}

func (v NullableListPlanVersionsV3ResponseResultInner) Get() *ListPlanVersionsV3ResponseResultInner {
	return v.value
}

func (v *NullableListPlanVersionsV3ResponseResultInner) Set(val *ListPlanVersionsV3ResponseResultInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListPlanVersionsV3ResponseResultInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListPlanVersionsV3ResponseResultInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListPlanVersionsV3ResponseResultInner(val *ListPlanVersionsV3ResponseResultInner) *NullableListPlanVersionsV3ResponseResultInner {
	return &NullableListPlanVersionsV3ResponseResultInner{value: val, isSet: true}
}

func (v NullableListPlanVersionsV3ResponseResultInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListPlanVersionsV3ResponseResultInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


