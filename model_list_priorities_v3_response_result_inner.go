/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListPrioritiesV3ResponseResultInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListPrioritiesV3ResponseResultInner{}

// ListPrioritiesV3ResponseResultInner struct for ListPrioritiesV3ResponseResultInner
type ListPrioritiesV3ResponseResultInner struct {
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Priority *int32 `json:"priority,omitempty"`
	Color *string `json:"color,omitempty"`
}

// NewListPrioritiesV3ResponseResultInner instantiates a new ListPrioritiesV3ResponseResultInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListPrioritiesV3ResponseResultInner() *ListPrioritiesV3ResponseResultInner {
	this := ListPrioritiesV3ResponseResultInner{}
	return &this
}

// NewListPrioritiesV3ResponseResultInnerWithDefaults instantiates a new ListPrioritiesV3ResponseResultInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListPrioritiesV3ResponseResultInnerWithDefaults() *ListPrioritiesV3ResponseResultInner {
	this := ListPrioritiesV3ResponseResultInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ListPrioritiesV3ResponseResultInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPrioritiesV3ResponseResultInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ListPrioritiesV3ResponseResultInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ListPrioritiesV3ResponseResultInner) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ListPrioritiesV3ResponseResultInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPrioritiesV3ResponseResultInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ListPrioritiesV3ResponseResultInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ListPrioritiesV3ResponseResultInner) SetName(v string) {
	o.Name = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *ListPrioritiesV3ResponseResultInner) GetPriority() int32 {
	if o == nil || IsNil(o.Priority) {
		var ret int32
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPrioritiesV3ResponseResultInner) GetPriorityOk() (*int32, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *ListPrioritiesV3ResponseResultInner) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given int32 and assigns it to the Priority field.
func (o *ListPrioritiesV3ResponseResultInner) SetPriority(v int32) {
	o.Priority = &v
}

// GetColor returns the Color field value if set, zero value otherwise.
func (o *ListPrioritiesV3ResponseResultInner) GetColor() string {
	if o == nil || IsNil(o.Color) {
		var ret string
		return ret
	}
	return *o.Color
}

// GetColorOk returns a tuple with the Color field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPrioritiesV3ResponseResultInner) GetColorOk() (*string, bool) {
	if o == nil || IsNil(o.Color) {
		return nil, false
	}
	return o.Color, true
}

// HasColor returns a boolean if a field has been set.
func (o *ListPrioritiesV3ResponseResultInner) HasColor() bool {
	if o != nil && !IsNil(o.Color) {
		return true
	}

	return false
}

// SetColor gets a reference to the given string and assigns it to the Color field.
func (o *ListPrioritiesV3ResponseResultInner) SetColor(v string) {
	o.Color = &v
}

func (o ListPrioritiesV3ResponseResultInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListPrioritiesV3ResponseResultInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}
	if !IsNil(o.Color) {
		toSerialize["color"] = o.Color
	}
	return toSerialize, nil
}

type NullableListPrioritiesV3ResponseResultInner struct {
	value *ListPrioritiesV3ResponseResultInner
	isSet bool
}

func (v NullableListPrioritiesV3ResponseResultInner) Get() *ListPrioritiesV3ResponseResultInner {
	return v.value
}

func (v *NullableListPrioritiesV3ResponseResultInner) Set(val *ListPrioritiesV3ResponseResultInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListPrioritiesV3ResponseResultInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListPrioritiesV3ResponseResultInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListPrioritiesV3ResponseResultInner(val *ListPrioritiesV3ResponseResultInner) *NullableListPrioritiesV3ResponseResultInner {
	return &NullableListPrioritiesV3ResponseResultInner{value: val, isSet: true}
}

func (v NullableListPrioritiesV3ResponseResultInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListPrioritiesV3ResponseResultInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


