/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListProjectAppsV3ResponseResultInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListProjectAppsV3ResponseResultInner{}

// ListProjectAppsV3ResponseResultInner 项目应用
type ListProjectAppsV3ResponseResultInner struct {
	// 项目应用ID
	// Deprecated
	Id *string `json:"id,omitempty"`
	// 项目应用ID
	AppId *string `json:"appId,omitempty"`
	// 项目应用版本
	VersionId *string `json:"versionId,omitempty"`
	// 是否启用
	Enabled *bool `json:"enabled,omitempty"`
}

// NewListProjectAppsV3ResponseResultInner instantiates a new ListProjectAppsV3ResponseResultInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListProjectAppsV3ResponseResultInner() *ListProjectAppsV3ResponseResultInner {
	this := ListProjectAppsV3ResponseResultInner{}
	return &this
}

// NewListProjectAppsV3ResponseResultInnerWithDefaults instantiates a new ListProjectAppsV3ResponseResultInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListProjectAppsV3ResponseResultInnerWithDefaults() *ListProjectAppsV3ResponseResultInner {
	this := ListProjectAppsV3ResponseResultInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
// Deprecated
func (o *ListProjectAppsV3ResponseResultInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *ListProjectAppsV3ResponseResultInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ListProjectAppsV3ResponseResultInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
// Deprecated
func (o *ListProjectAppsV3ResponseResultInner) SetId(v string) {
	o.Id = &v
}

// GetAppId returns the AppId field value if set, zero value otherwise.
func (o *ListProjectAppsV3ResponseResultInner) GetAppId() string {
	if o == nil || IsNil(o.AppId) {
		var ret string
		return ret
	}
	return *o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProjectAppsV3ResponseResultInner) GetAppIdOk() (*string, bool) {
	if o == nil || IsNil(o.AppId) {
		return nil, false
	}
	return o.AppId, true
}

// HasAppId returns a boolean if a field has been set.
func (o *ListProjectAppsV3ResponseResultInner) HasAppId() bool {
	if o != nil && !IsNil(o.AppId) {
		return true
	}

	return false
}

// SetAppId gets a reference to the given string and assigns it to the AppId field.
func (o *ListProjectAppsV3ResponseResultInner) SetAppId(v string) {
	o.AppId = &v
}

// GetVersionId returns the VersionId field value if set, zero value otherwise.
func (o *ListProjectAppsV3ResponseResultInner) GetVersionId() string {
	if o == nil || IsNil(o.VersionId) {
		var ret string
		return ret
	}
	return *o.VersionId
}

// GetVersionIdOk returns a tuple with the VersionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProjectAppsV3ResponseResultInner) GetVersionIdOk() (*string, bool) {
	if o == nil || IsNil(o.VersionId) {
		return nil, false
	}
	return o.VersionId, true
}

// HasVersionId returns a boolean if a field has been set.
func (o *ListProjectAppsV3ResponseResultInner) HasVersionId() bool {
	if o != nil && !IsNil(o.VersionId) {
		return true
	}

	return false
}

// SetVersionId gets a reference to the given string and assigns it to the VersionId field.
func (o *ListProjectAppsV3ResponseResultInner) SetVersionId(v string) {
	o.VersionId = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ListProjectAppsV3ResponseResultInner) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProjectAppsV3ResponseResultInner) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *ListProjectAppsV3ResponseResultInner) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ListProjectAppsV3ResponseResultInner) SetEnabled(v bool) {
	o.Enabled = &v
}

func (o ListProjectAppsV3ResponseResultInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListProjectAppsV3ResponseResultInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.AppId) {
		toSerialize["appId"] = o.AppId
	}
	if !IsNil(o.VersionId) {
		toSerialize["versionId"] = o.VersionId
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	return toSerialize, nil
}

type NullableListProjectAppsV3ResponseResultInner struct {
	value *ListProjectAppsV3ResponseResultInner
	isSet bool
}

func (v NullableListProjectAppsV3ResponseResultInner) Get() *ListProjectAppsV3ResponseResultInner {
	return v.value
}

func (v *NullableListProjectAppsV3ResponseResultInner) Set(val *ListProjectAppsV3ResponseResultInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListProjectAppsV3ResponseResultInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListProjectAppsV3ResponseResultInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListProjectAppsV3ResponseResultInner(val *ListProjectAppsV3ResponseResultInner) *NullableListProjectAppsV3ResponseResultInner {
	return &NullableListProjectAppsV3ResponseResultInner{value: val, isSet: true}
}

func (v NullableListProjectAppsV3ResponseResultInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListProjectAppsV3ResponseResultInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


