/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the ListProjectRemindersV3ResponseResultInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListProjectRemindersV3ResponseResultInner{}

// ListProjectRemindersV3ResponseResultInner 项目「默认任务提醒」信息
type ListProjectRemindersV3ResponseResultInner struct {
	// 提醒规则
	Rule *string `json:"rule,omitempty"`
	// 提醒角色或者用户ID列表
	Receivers []string `json:"receivers,omitempty"`
	// 创建人用户ID
	CreatorId *string `json:"creatorId,omitempty"`
	// 创建时间
	Created *time.Time `json:"created,omitempty"`
	// 更新时间
	Updated *string `json:"updated,omitempty"`
}

// NewListProjectRemindersV3ResponseResultInner instantiates a new ListProjectRemindersV3ResponseResultInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListProjectRemindersV3ResponseResultInner() *ListProjectRemindersV3ResponseResultInner {
	this := ListProjectRemindersV3ResponseResultInner{}
	return &this
}

// NewListProjectRemindersV3ResponseResultInnerWithDefaults instantiates a new ListProjectRemindersV3ResponseResultInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListProjectRemindersV3ResponseResultInnerWithDefaults() *ListProjectRemindersV3ResponseResultInner {
	this := ListProjectRemindersV3ResponseResultInner{}
	return &this
}

// GetRule returns the Rule field value if set, zero value otherwise.
func (o *ListProjectRemindersV3ResponseResultInner) GetRule() string {
	if o == nil || IsNil(o.Rule) {
		var ret string
		return ret
	}
	return *o.Rule
}

// GetRuleOk returns a tuple with the Rule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProjectRemindersV3ResponseResultInner) GetRuleOk() (*string, bool) {
	if o == nil || IsNil(o.Rule) {
		return nil, false
	}
	return o.Rule, true
}

// HasRule returns a boolean if a field has been set.
func (o *ListProjectRemindersV3ResponseResultInner) HasRule() bool {
	if o != nil && !IsNil(o.Rule) {
		return true
	}

	return false
}

// SetRule gets a reference to the given string and assigns it to the Rule field.
func (o *ListProjectRemindersV3ResponseResultInner) SetRule(v string) {
	o.Rule = &v
}

// GetReceivers returns the Receivers field value if set, zero value otherwise.
func (o *ListProjectRemindersV3ResponseResultInner) GetReceivers() []string {
	if o == nil || IsNil(o.Receivers) {
		var ret []string
		return ret
	}
	return o.Receivers
}

// GetReceiversOk returns a tuple with the Receivers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProjectRemindersV3ResponseResultInner) GetReceiversOk() ([]string, bool) {
	if o == nil || IsNil(o.Receivers) {
		return nil, false
	}
	return o.Receivers, true
}

// HasReceivers returns a boolean if a field has been set.
func (o *ListProjectRemindersV3ResponseResultInner) HasReceivers() bool {
	if o != nil && !IsNil(o.Receivers) {
		return true
	}

	return false
}

// SetReceivers gets a reference to the given []string and assigns it to the Receivers field.
func (o *ListProjectRemindersV3ResponseResultInner) SetReceivers(v []string) {
	o.Receivers = v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise.
func (o *ListProjectRemindersV3ResponseResultInner) GetCreatorId() string {
	if o == nil || IsNil(o.CreatorId) {
		var ret string
		return ret
	}
	return *o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProjectRemindersV3ResponseResultInner) GetCreatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorId) {
		return nil, false
	}
	return o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *ListProjectRemindersV3ResponseResultInner) HasCreatorId() bool {
	if o != nil && !IsNil(o.CreatorId) {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given string and assigns it to the CreatorId field.
func (o *ListProjectRemindersV3ResponseResultInner) SetCreatorId(v string) {
	o.CreatorId = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *ListProjectRemindersV3ResponseResultInner) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProjectRemindersV3ResponseResultInner) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *ListProjectRemindersV3ResponseResultInner) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *ListProjectRemindersV3ResponseResultInner) SetCreated(v time.Time) {
	o.Created = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *ListProjectRemindersV3ResponseResultInner) GetUpdated() string {
	if o == nil || IsNil(o.Updated) {
		var ret string
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProjectRemindersV3ResponseResultInner) GetUpdatedOk() (*string, bool) {
	if o == nil || IsNil(o.Updated) {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *ListProjectRemindersV3ResponseResultInner) HasUpdated() bool {
	if o != nil && !IsNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given string and assigns it to the Updated field.
func (o *ListProjectRemindersV3ResponseResultInner) SetUpdated(v string) {
	o.Updated = &v
}

func (o ListProjectRemindersV3ResponseResultInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListProjectRemindersV3ResponseResultInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Rule) {
		toSerialize["rule"] = o.Rule
	}
	if !IsNil(o.Receivers) {
		toSerialize["receivers"] = o.Receivers
	}
	if !IsNil(o.CreatorId) {
		toSerialize["creatorId"] = o.CreatorId
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.Updated) {
		toSerialize["updated"] = o.Updated
	}
	return toSerialize, nil
}

type NullableListProjectRemindersV3ResponseResultInner struct {
	value *ListProjectRemindersV3ResponseResultInner
	isSet bool
}

func (v NullableListProjectRemindersV3ResponseResultInner) Get() *ListProjectRemindersV3ResponseResultInner {
	return v.value
}

func (v *NullableListProjectRemindersV3ResponseResultInner) Set(val *ListProjectRemindersV3ResponseResultInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListProjectRemindersV3ResponseResultInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListProjectRemindersV3ResponseResultInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListProjectRemindersV3ResponseResultInner(val *ListProjectRemindersV3ResponseResultInner) *NullableListProjectRemindersV3ResponseResultInner {
	return &NullableListProjectRemindersV3ResponseResultInner{value: val, isSet: true}
}

func (v NullableListProjectRemindersV3ResponseResultInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListProjectRemindersV3ResponseResultInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


