/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListProjectRolesV3ResponseResultInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListProjectRolesV3ResponseResultInner{}

// ListProjectRolesV3ResponseResultInner 项目角色信息
type ListProjectRolesV3ResponseResultInner struct {
	// 项目角色ID
	Id *string `json:"id,omitempty"`
	// 角色名字
	Name *string `json:"name,omitempty"`
	// 引用角色 ID
	OriginalId *string `json:"originalId,omitempty"`
	// 角色拥有的权限列表
	Permissions []string `json:"permissions,omitempty"`
	// 项目角色等级， 0=成员；1=管理员；2=拥有者
	Level *int32 `json:"level,omitempty"`
	// 是否是项目默认角色
	IsDefaultRole *bool `json:"isDefaultRole,omitempty"`
	// 是否是项目角色列表下展示，为 false 时不展示，其他情况均展示
	Display *bool `json:"display,omitempty"`
}

// NewListProjectRolesV3ResponseResultInner instantiates a new ListProjectRolesV3ResponseResultInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListProjectRolesV3ResponseResultInner() *ListProjectRolesV3ResponseResultInner {
	this := ListProjectRolesV3ResponseResultInner{}
	return &this
}

// NewListProjectRolesV3ResponseResultInnerWithDefaults instantiates a new ListProjectRolesV3ResponseResultInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListProjectRolesV3ResponseResultInnerWithDefaults() *ListProjectRolesV3ResponseResultInner {
	this := ListProjectRolesV3ResponseResultInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ListProjectRolesV3ResponseResultInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProjectRolesV3ResponseResultInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ListProjectRolesV3ResponseResultInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ListProjectRolesV3ResponseResultInner) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ListProjectRolesV3ResponseResultInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProjectRolesV3ResponseResultInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ListProjectRolesV3ResponseResultInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ListProjectRolesV3ResponseResultInner) SetName(v string) {
	o.Name = &v
}

// GetOriginalId returns the OriginalId field value if set, zero value otherwise.
func (o *ListProjectRolesV3ResponseResultInner) GetOriginalId() string {
	if o == nil || IsNil(o.OriginalId) {
		var ret string
		return ret
	}
	return *o.OriginalId
}

// GetOriginalIdOk returns a tuple with the OriginalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProjectRolesV3ResponseResultInner) GetOriginalIdOk() (*string, bool) {
	if o == nil || IsNil(o.OriginalId) {
		return nil, false
	}
	return o.OriginalId, true
}

// HasOriginalId returns a boolean if a field has been set.
func (o *ListProjectRolesV3ResponseResultInner) HasOriginalId() bool {
	if o != nil && !IsNil(o.OriginalId) {
		return true
	}

	return false
}

// SetOriginalId gets a reference to the given string and assigns it to the OriginalId field.
func (o *ListProjectRolesV3ResponseResultInner) SetOriginalId(v string) {
	o.OriginalId = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *ListProjectRolesV3ResponseResultInner) GetPermissions() []string {
	if o == nil || IsNil(o.Permissions) {
		var ret []string
		return ret
	}
	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProjectRolesV3ResponseResultInner) GetPermissionsOk() ([]string, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *ListProjectRolesV3ResponseResultInner) HasPermissions() bool {
	if o != nil && !IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []string and assigns it to the Permissions field.
func (o *ListProjectRolesV3ResponseResultInner) SetPermissions(v []string) {
	o.Permissions = v
}

// GetLevel returns the Level field value if set, zero value otherwise.
func (o *ListProjectRolesV3ResponseResultInner) GetLevel() int32 {
	if o == nil || IsNil(o.Level) {
		var ret int32
		return ret
	}
	return *o.Level
}

// GetLevelOk returns a tuple with the Level field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProjectRolesV3ResponseResultInner) GetLevelOk() (*int32, bool) {
	if o == nil || IsNil(o.Level) {
		return nil, false
	}
	return o.Level, true
}

// HasLevel returns a boolean if a field has been set.
func (o *ListProjectRolesV3ResponseResultInner) HasLevel() bool {
	if o != nil && !IsNil(o.Level) {
		return true
	}

	return false
}

// SetLevel gets a reference to the given int32 and assigns it to the Level field.
func (o *ListProjectRolesV3ResponseResultInner) SetLevel(v int32) {
	o.Level = &v
}

// GetIsDefaultRole returns the IsDefaultRole field value if set, zero value otherwise.
func (o *ListProjectRolesV3ResponseResultInner) GetIsDefaultRole() bool {
	if o == nil || IsNil(o.IsDefaultRole) {
		var ret bool
		return ret
	}
	return *o.IsDefaultRole
}

// GetIsDefaultRoleOk returns a tuple with the IsDefaultRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProjectRolesV3ResponseResultInner) GetIsDefaultRoleOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDefaultRole) {
		return nil, false
	}
	return o.IsDefaultRole, true
}

// HasIsDefaultRole returns a boolean if a field has been set.
func (o *ListProjectRolesV3ResponseResultInner) HasIsDefaultRole() bool {
	if o != nil && !IsNil(o.IsDefaultRole) {
		return true
	}

	return false
}

// SetIsDefaultRole gets a reference to the given bool and assigns it to the IsDefaultRole field.
func (o *ListProjectRolesV3ResponseResultInner) SetIsDefaultRole(v bool) {
	o.IsDefaultRole = &v
}

// GetDisplay returns the Display field value if set, zero value otherwise.
func (o *ListProjectRolesV3ResponseResultInner) GetDisplay() bool {
	if o == nil || IsNil(o.Display) {
		var ret bool
		return ret
	}
	return *o.Display
}

// GetDisplayOk returns a tuple with the Display field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProjectRolesV3ResponseResultInner) GetDisplayOk() (*bool, bool) {
	if o == nil || IsNil(o.Display) {
		return nil, false
	}
	return o.Display, true
}

// HasDisplay returns a boolean if a field has been set.
func (o *ListProjectRolesV3ResponseResultInner) HasDisplay() bool {
	if o != nil && !IsNil(o.Display) {
		return true
	}

	return false
}

// SetDisplay gets a reference to the given bool and assigns it to the Display field.
func (o *ListProjectRolesV3ResponseResultInner) SetDisplay(v bool) {
	o.Display = &v
}

func (o ListProjectRolesV3ResponseResultInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListProjectRolesV3ResponseResultInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OriginalId) {
		toSerialize["originalId"] = o.OriginalId
	}
	if !IsNil(o.Permissions) {
		toSerialize["permissions"] = o.Permissions
	}
	if !IsNil(o.Level) {
		toSerialize["level"] = o.Level
	}
	if !IsNil(o.IsDefaultRole) {
		toSerialize["isDefaultRole"] = o.IsDefaultRole
	}
	if !IsNil(o.Display) {
		toSerialize["display"] = o.Display
	}
	return toSerialize, nil
}

type NullableListProjectRolesV3ResponseResultInner struct {
	value *ListProjectRolesV3ResponseResultInner
	isSet bool
}

func (v NullableListProjectRolesV3ResponseResultInner) Get() *ListProjectRolesV3ResponseResultInner {
	return v.value
}

func (v *NullableListProjectRolesV3ResponseResultInner) Set(val *ListProjectRolesV3ResponseResultInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListProjectRolesV3ResponseResultInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListProjectRolesV3ResponseResultInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListProjectRolesV3ResponseResultInner(val *ListProjectRolesV3ResponseResultInner) *NullableListProjectRolesV3ResponseResultInner {
	return &NullableListProjectRolesV3ResponseResultInner{value: val, isSet: true}
}

func (v NullableListProjectRolesV3ResponseResultInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListProjectRolesV3ResponseResultInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


