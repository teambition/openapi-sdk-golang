/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the ListProjectStatusesV3ResponseResultInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListProjectStatusesV3ResponseResultInner{}

// ListProjectStatusesV3ResponseResultInner 项目状态
type ListProjectStatusesV3ResponseResultInner struct {
	// 项目ID
	ProjectId *string `json:"projectId,omitempty"`
	// 项目状态名称
	Name *string `json:"name,omitempty"`
	// 项目状态内容
	Content *string `json:"content,omitempty"`
	// 项目状态富文本Html格式内容
	ContentHtml *string `json:"contentHtml,omitempty"`
	// 项目状态指标：'minor', 'low', 'normal', 'risky', 'urgent'
	Degree *string `json:"degree,omitempty"`
	// 项目状态创建人ID
	CreatorId *string `json:"creatorId,omitempty"`
	// 创建时间
	Created *time.Time `json:"created,omitempty"`
}

// NewListProjectStatusesV3ResponseResultInner instantiates a new ListProjectStatusesV3ResponseResultInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListProjectStatusesV3ResponseResultInner() *ListProjectStatusesV3ResponseResultInner {
	this := ListProjectStatusesV3ResponseResultInner{}
	return &this
}

// NewListProjectStatusesV3ResponseResultInnerWithDefaults instantiates a new ListProjectStatusesV3ResponseResultInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListProjectStatusesV3ResponseResultInnerWithDefaults() *ListProjectStatusesV3ResponseResultInner {
	this := ListProjectStatusesV3ResponseResultInner{}
	return &this
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *ListProjectStatusesV3ResponseResultInner) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId) {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProjectStatusesV3ResponseResultInner) GetProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *ListProjectStatusesV3ResponseResultInner) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *ListProjectStatusesV3ResponseResultInner) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ListProjectStatusesV3ResponseResultInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProjectStatusesV3ResponseResultInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ListProjectStatusesV3ResponseResultInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ListProjectStatusesV3ResponseResultInner) SetName(v string) {
	o.Name = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *ListProjectStatusesV3ResponseResultInner) GetContent() string {
	if o == nil || IsNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProjectStatusesV3ResponseResultInner) GetContentOk() (*string, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *ListProjectStatusesV3ResponseResultInner) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *ListProjectStatusesV3ResponseResultInner) SetContent(v string) {
	o.Content = &v
}

// GetContentHtml returns the ContentHtml field value if set, zero value otherwise.
func (o *ListProjectStatusesV3ResponseResultInner) GetContentHtml() string {
	if o == nil || IsNil(o.ContentHtml) {
		var ret string
		return ret
	}
	return *o.ContentHtml
}

// GetContentHtmlOk returns a tuple with the ContentHtml field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProjectStatusesV3ResponseResultInner) GetContentHtmlOk() (*string, bool) {
	if o == nil || IsNil(o.ContentHtml) {
		return nil, false
	}
	return o.ContentHtml, true
}

// HasContentHtml returns a boolean if a field has been set.
func (o *ListProjectStatusesV3ResponseResultInner) HasContentHtml() bool {
	if o != nil && !IsNil(o.ContentHtml) {
		return true
	}

	return false
}

// SetContentHtml gets a reference to the given string and assigns it to the ContentHtml field.
func (o *ListProjectStatusesV3ResponseResultInner) SetContentHtml(v string) {
	o.ContentHtml = &v
}

// GetDegree returns the Degree field value if set, zero value otherwise.
func (o *ListProjectStatusesV3ResponseResultInner) GetDegree() string {
	if o == nil || IsNil(o.Degree) {
		var ret string
		return ret
	}
	return *o.Degree
}

// GetDegreeOk returns a tuple with the Degree field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProjectStatusesV3ResponseResultInner) GetDegreeOk() (*string, bool) {
	if o == nil || IsNil(o.Degree) {
		return nil, false
	}
	return o.Degree, true
}

// HasDegree returns a boolean if a field has been set.
func (o *ListProjectStatusesV3ResponseResultInner) HasDegree() bool {
	if o != nil && !IsNil(o.Degree) {
		return true
	}

	return false
}

// SetDegree gets a reference to the given string and assigns it to the Degree field.
func (o *ListProjectStatusesV3ResponseResultInner) SetDegree(v string) {
	o.Degree = &v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise.
func (o *ListProjectStatusesV3ResponseResultInner) GetCreatorId() string {
	if o == nil || IsNil(o.CreatorId) {
		var ret string
		return ret
	}
	return *o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProjectStatusesV3ResponseResultInner) GetCreatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorId) {
		return nil, false
	}
	return o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *ListProjectStatusesV3ResponseResultInner) HasCreatorId() bool {
	if o != nil && !IsNil(o.CreatorId) {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given string and assigns it to the CreatorId field.
func (o *ListProjectStatusesV3ResponseResultInner) SetCreatorId(v string) {
	o.CreatorId = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *ListProjectStatusesV3ResponseResultInner) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProjectStatusesV3ResponseResultInner) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *ListProjectStatusesV3ResponseResultInner) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *ListProjectStatusesV3ResponseResultInner) SetCreated(v time.Time) {
	o.Created = &v
}

func (o ListProjectStatusesV3ResponseResultInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListProjectStatusesV3ResponseResultInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProjectId) {
		toSerialize["projectId"] = o.ProjectId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !IsNil(o.ContentHtml) {
		toSerialize["contentHtml"] = o.ContentHtml
	}
	if !IsNil(o.Degree) {
		toSerialize["degree"] = o.Degree
	}
	if !IsNil(o.CreatorId) {
		toSerialize["creatorId"] = o.CreatorId
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	return toSerialize, nil
}

type NullableListProjectStatusesV3ResponseResultInner struct {
	value *ListProjectStatusesV3ResponseResultInner
	isSet bool
}

func (v NullableListProjectStatusesV3ResponseResultInner) Get() *ListProjectStatusesV3ResponseResultInner {
	return v.value
}

func (v *NullableListProjectStatusesV3ResponseResultInner) Set(val *ListProjectStatusesV3ResponseResultInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListProjectStatusesV3ResponseResultInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListProjectStatusesV3ResponseResultInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListProjectStatusesV3ResponseResultInner(val *ListProjectStatusesV3ResponseResultInner) *NullableListProjectStatusesV3ResponseResultInner {
	return &NullableListProjectStatusesV3ResponseResultInner{value: val, isSet: true}
}

func (v NullableListProjectStatusesV3ResponseResultInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListProjectStatusesV3ResponseResultInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


