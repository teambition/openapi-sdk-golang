/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListStatusValidatorsV3ResponseResultInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListStatusValidatorsV3ResponseResultInner{}

// ListStatusValidatorsV3ResponseResultInner 
type ListStatusValidatorsV3ResponseResultInner struct {
	Field *ListStatusValidatorsV3ResponseResultInnerField `json:"field,omitempty"`
	Value *ListStatusValidatorsV3ResponseResultInnerValue `json:"value,omitempty"`
}

// NewListStatusValidatorsV3ResponseResultInner instantiates a new ListStatusValidatorsV3ResponseResultInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListStatusValidatorsV3ResponseResultInner() *ListStatusValidatorsV3ResponseResultInner {
	this := ListStatusValidatorsV3ResponseResultInner{}
	return &this
}

// NewListStatusValidatorsV3ResponseResultInnerWithDefaults instantiates a new ListStatusValidatorsV3ResponseResultInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListStatusValidatorsV3ResponseResultInnerWithDefaults() *ListStatusValidatorsV3ResponseResultInner {
	this := ListStatusValidatorsV3ResponseResultInner{}
	return &this
}

// GetField returns the Field field value if set, zero value otherwise.
func (o *ListStatusValidatorsV3ResponseResultInner) GetField() ListStatusValidatorsV3ResponseResultInnerField {
	if o == nil || IsNil(o.Field) {
		var ret ListStatusValidatorsV3ResponseResultInnerField
		return ret
	}
	return *o.Field
}

// GetFieldOk returns a tuple with the Field field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStatusValidatorsV3ResponseResultInner) GetFieldOk() (*ListStatusValidatorsV3ResponseResultInnerField, bool) {
	if o == nil || IsNil(o.Field) {
		return nil, false
	}
	return o.Field, true
}

// HasField returns a boolean if a field has been set.
func (o *ListStatusValidatorsV3ResponseResultInner) HasField() bool {
	if o != nil && !IsNil(o.Field) {
		return true
	}

	return false
}

// SetField gets a reference to the given ListStatusValidatorsV3ResponseResultInnerField and assigns it to the Field field.
func (o *ListStatusValidatorsV3ResponseResultInner) SetField(v ListStatusValidatorsV3ResponseResultInnerField) {
	o.Field = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *ListStatusValidatorsV3ResponseResultInner) GetValue() ListStatusValidatorsV3ResponseResultInnerValue {
	if o == nil || IsNil(o.Value) {
		var ret ListStatusValidatorsV3ResponseResultInnerValue
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStatusValidatorsV3ResponseResultInner) GetValueOk() (*ListStatusValidatorsV3ResponseResultInnerValue, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *ListStatusValidatorsV3ResponseResultInner) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given ListStatusValidatorsV3ResponseResultInnerValue and assigns it to the Value field.
func (o *ListStatusValidatorsV3ResponseResultInner) SetValue(v ListStatusValidatorsV3ResponseResultInnerValue) {
	o.Value = &v
}

func (o ListStatusValidatorsV3ResponseResultInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListStatusValidatorsV3ResponseResultInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Field) {
		toSerialize["field"] = o.Field
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableListStatusValidatorsV3ResponseResultInner struct {
	value *ListStatusValidatorsV3ResponseResultInner
	isSet bool
}

func (v NullableListStatusValidatorsV3ResponseResultInner) Get() *ListStatusValidatorsV3ResponseResultInner {
	return v.value
}

func (v *NullableListStatusValidatorsV3ResponseResultInner) Set(val *ListStatusValidatorsV3ResponseResultInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListStatusValidatorsV3ResponseResultInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListStatusValidatorsV3ResponseResultInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListStatusValidatorsV3ResponseResultInner(val *ListStatusValidatorsV3ResponseResultInner) *NullableListStatusValidatorsV3ResponseResultInner {
	return &NullableListStatusValidatorsV3ResponseResultInner{value: val, isSet: true}
}

func (v NullableListStatusValidatorsV3ResponseResultInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListStatusValidatorsV3ResponseResultInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


