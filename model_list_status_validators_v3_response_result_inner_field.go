/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListStatusValidatorsV3ResponseResultInnerField type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListStatusValidatorsV3ResponseResultInnerField{}

// ListStatusValidatorsV3ResponseResultInnerField 
type ListStatusValidatorsV3ResponseResultInnerField struct {
	// 字段类型，可能是note, dueDate, startDate, executorId, customfield。如果是customfield，则会有customfieldId
	FieldType *string `json:"fieldType,omitempty"`
	// 自定义字段Id
	CustomfieldId *string `json:"customfieldId,omitempty"`
}

// NewListStatusValidatorsV3ResponseResultInnerField instantiates a new ListStatusValidatorsV3ResponseResultInnerField object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListStatusValidatorsV3ResponseResultInnerField() *ListStatusValidatorsV3ResponseResultInnerField {
	this := ListStatusValidatorsV3ResponseResultInnerField{}
	return &this
}

// NewListStatusValidatorsV3ResponseResultInnerFieldWithDefaults instantiates a new ListStatusValidatorsV3ResponseResultInnerField object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListStatusValidatorsV3ResponseResultInnerFieldWithDefaults() *ListStatusValidatorsV3ResponseResultInnerField {
	this := ListStatusValidatorsV3ResponseResultInnerField{}
	return &this
}

// GetFieldType returns the FieldType field value if set, zero value otherwise.
func (o *ListStatusValidatorsV3ResponseResultInnerField) GetFieldType() string {
	if o == nil || IsNil(o.FieldType) {
		var ret string
		return ret
	}
	return *o.FieldType
}

// GetFieldTypeOk returns a tuple with the FieldType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStatusValidatorsV3ResponseResultInnerField) GetFieldTypeOk() (*string, bool) {
	if o == nil || IsNil(o.FieldType) {
		return nil, false
	}
	return o.FieldType, true
}

// HasFieldType returns a boolean if a field has been set.
func (o *ListStatusValidatorsV3ResponseResultInnerField) HasFieldType() bool {
	if o != nil && !IsNil(o.FieldType) {
		return true
	}

	return false
}

// SetFieldType gets a reference to the given string and assigns it to the FieldType field.
func (o *ListStatusValidatorsV3ResponseResultInnerField) SetFieldType(v string) {
	o.FieldType = &v
}

// GetCustomfieldId returns the CustomfieldId field value if set, zero value otherwise.
func (o *ListStatusValidatorsV3ResponseResultInnerField) GetCustomfieldId() string {
	if o == nil || IsNil(o.CustomfieldId) {
		var ret string
		return ret
	}
	return *o.CustomfieldId
}

// GetCustomfieldIdOk returns a tuple with the CustomfieldId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListStatusValidatorsV3ResponseResultInnerField) GetCustomfieldIdOk() (*string, bool) {
	if o == nil || IsNil(o.CustomfieldId) {
		return nil, false
	}
	return o.CustomfieldId, true
}

// HasCustomfieldId returns a boolean if a field has been set.
func (o *ListStatusValidatorsV3ResponseResultInnerField) HasCustomfieldId() bool {
	if o != nil && !IsNil(o.CustomfieldId) {
		return true
	}

	return false
}

// SetCustomfieldId gets a reference to the given string and assigns it to the CustomfieldId field.
func (o *ListStatusValidatorsV3ResponseResultInnerField) SetCustomfieldId(v string) {
	o.CustomfieldId = &v
}

func (o ListStatusValidatorsV3ResponseResultInnerField) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListStatusValidatorsV3ResponseResultInnerField) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FieldType) {
		toSerialize["fieldType"] = o.FieldType
	}
	if !IsNil(o.CustomfieldId) {
		toSerialize["customfieldId"] = o.CustomfieldId
	}
	return toSerialize, nil
}

type NullableListStatusValidatorsV3ResponseResultInnerField struct {
	value *ListStatusValidatorsV3ResponseResultInnerField
	isSet bool
}

func (v NullableListStatusValidatorsV3ResponseResultInnerField) Get() *ListStatusValidatorsV3ResponseResultInnerField {
	return v.value
}

func (v *NullableListStatusValidatorsV3ResponseResultInnerField) Set(val *ListStatusValidatorsV3ResponseResultInnerField) {
	v.value = val
	v.isSet = true
}

func (v NullableListStatusValidatorsV3ResponseResultInnerField) IsSet() bool {
	return v.isSet
}

func (v *NullableListStatusValidatorsV3ResponseResultInnerField) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListStatusValidatorsV3ResponseResultInnerField(val *ListStatusValidatorsV3ResponseResultInnerField) *NullableListStatusValidatorsV3ResponseResultInnerField {
	return &NullableListStatusValidatorsV3ResponseResultInnerField{value: val, isSet: true}
}

func (v NullableListStatusValidatorsV3ResponseResultInnerField) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListStatusValidatorsV3ResponseResultInnerField) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


