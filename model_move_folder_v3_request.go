/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MoveFolderV3Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MoveFolderV3Request{}

// MoveFolderV3Request struct for MoveFolderV3Request
type MoveFolderV3Request struct {
	// 目标项目ID
	ProjectId *string `json:"projectId,omitempty"`
	// 目标项目下的父文件夹 ID，不提供默认移动至顶级文件夹
	ParentId *string `json:"parentId,omitempty"`
}

// NewMoveFolderV3Request instantiates a new MoveFolderV3Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMoveFolderV3Request() *MoveFolderV3Request {
	this := MoveFolderV3Request{}
	return &this
}

// NewMoveFolderV3RequestWithDefaults instantiates a new MoveFolderV3Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMoveFolderV3RequestWithDefaults() *MoveFolderV3Request {
	this := MoveFolderV3Request{}
	return &this
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *MoveFolderV3Request) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId) {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoveFolderV3Request) GetProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *MoveFolderV3Request) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *MoveFolderV3Request) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *MoveFolderV3Request) GetParentId() string {
	if o == nil || IsNil(o.ParentId) {
		var ret string
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoveFolderV3Request) GetParentIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentId) {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *MoveFolderV3Request) HasParentId() bool {
	if o != nil && !IsNil(o.ParentId) {
		return true
	}

	return false
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *MoveFolderV3Request) SetParentId(v string) {
	o.ParentId = &v
}

func (o MoveFolderV3Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MoveFolderV3Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProjectId) {
		toSerialize["projectId"] = o.ProjectId
	}
	if !IsNil(o.ParentId) {
		toSerialize["parentId"] = o.ParentId
	}
	return toSerialize, nil
}

type NullableMoveFolderV3Request struct {
	value *MoveFolderV3Request
	isSet bool
}

func (v NullableMoveFolderV3Request) Get() *MoveFolderV3Request {
	return v.value
}

func (v *NullableMoveFolderV3Request) Set(val *MoveFolderV3Request) {
	v.value = val
	v.isSet = true
}

func (v NullableMoveFolderV3Request) IsSet() bool {
	return v.isSet
}

func (v *NullableMoveFolderV3Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMoveFolderV3Request(val *MoveFolderV3Request) *NullableMoveFolderV3Request {
	return &NullableMoveFolderV3Request{value: val, isSet: true}
}

func (v NullableMoveFolderV3Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMoveFolderV3Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


