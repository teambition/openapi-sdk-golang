/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MoveOrgTaskToProjectRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MoveOrgTaskToProjectRequest{}

// MoveOrgTaskToProjectRequest struct for MoveOrgTaskToProjectRequest
type MoveOrgTaskToProjectRequest struct {
	// 项目ID
	ProjectId *string `json:"projectId,omitempty"`
}

// NewMoveOrgTaskToProjectRequest instantiates a new MoveOrgTaskToProjectRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMoveOrgTaskToProjectRequest() *MoveOrgTaskToProjectRequest {
	this := MoveOrgTaskToProjectRequest{}
	return &this
}

// NewMoveOrgTaskToProjectRequestWithDefaults instantiates a new MoveOrgTaskToProjectRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMoveOrgTaskToProjectRequestWithDefaults() *MoveOrgTaskToProjectRequest {
	this := MoveOrgTaskToProjectRequest{}
	return &this
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *MoveOrgTaskToProjectRequest) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId) {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoveOrgTaskToProjectRequest) GetProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *MoveOrgTaskToProjectRequest) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *MoveOrgTaskToProjectRequest) SetProjectId(v string) {
	o.ProjectId = &v
}

func (o MoveOrgTaskToProjectRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MoveOrgTaskToProjectRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProjectId) {
		toSerialize["projectId"] = o.ProjectId
	}
	return toSerialize, nil
}

type NullableMoveOrgTaskToProjectRequest struct {
	value *MoveOrgTaskToProjectRequest
	isSet bool
}

func (v NullableMoveOrgTaskToProjectRequest) Get() *MoveOrgTaskToProjectRequest {
	return v.value
}

func (v *NullableMoveOrgTaskToProjectRequest) Set(val *MoveOrgTaskToProjectRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMoveOrgTaskToProjectRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMoveOrgTaskToProjectRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMoveOrgTaskToProjectRequest(val *MoveOrgTaskToProjectRequest) *NullableMoveOrgTaskToProjectRequest {
	return &NullableMoveOrgTaskToProjectRequest{value: val, isSet: true}
}

func (v NullableMoveOrgTaskToProjectRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMoveOrgTaskToProjectRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


