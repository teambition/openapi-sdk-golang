/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MoveTaskV3Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MoveTaskV3Request{}

// MoveTaskV3Request 跨项目移动参数方案 1. 仅传projectId,移动任务到项目默认 2. 指定移动任务到目标项目的完整参数(projectId/tfsId/sfcId/stageId/tasklistId)
type MoveTaskV3Request struct {
	// 项目ID
	ProjectId *string `json:"projectId,omitempty"`
	// 任务状态ID
	TfsId *string `json:"tfsId,omitempty"`
	// 任务类型ID
	SfcId *string `json:"sfcId,omitempty"`
	// 任务列表ID
	StageId *string `json:"stageId,omitempty"`
	// 任务分组ID
	TasklistId *string `json:"tasklistId,omitempty"`
}

// NewMoveTaskV3Request instantiates a new MoveTaskV3Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMoveTaskV3Request() *MoveTaskV3Request {
	this := MoveTaskV3Request{}
	return &this
}

// NewMoveTaskV3RequestWithDefaults instantiates a new MoveTaskV3Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMoveTaskV3RequestWithDefaults() *MoveTaskV3Request {
	this := MoveTaskV3Request{}
	return &this
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *MoveTaskV3Request) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId) {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoveTaskV3Request) GetProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *MoveTaskV3Request) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *MoveTaskV3Request) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetTfsId returns the TfsId field value if set, zero value otherwise.
func (o *MoveTaskV3Request) GetTfsId() string {
	if o == nil || IsNil(o.TfsId) {
		var ret string
		return ret
	}
	return *o.TfsId
}

// GetTfsIdOk returns a tuple with the TfsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoveTaskV3Request) GetTfsIdOk() (*string, bool) {
	if o == nil || IsNil(o.TfsId) {
		return nil, false
	}
	return o.TfsId, true
}

// HasTfsId returns a boolean if a field has been set.
func (o *MoveTaskV3Request) HasTfsId() bool {
	if o != nil && !IsNil(o.TfsId) {
		return true
	}

	return false
}

// SetTfsId gets a reference to the given string and assigns it to the TfsId field.
func (o *MoveTaskV3Request) SetTfsId(v string) {
	o.TfsId = &v
}

// GetSfcId returns the SfcId field value if set, zero value otherwise.
func (o *MoveTaskV3Request) GetSfcId() string {
	if o == nil || IsNil(o.SfcId) {
		var ret string
		return ret
	}
	return *o.SfcId
}

// GetSfcIdOk returns a tuple with the SfcId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoveTaskV3Request) GetSfcIdOk() (*string, bool) {
	if o == nil || IsNil(o.SfcId) {
		return nil, false
	}
	return o.SfcId, true
}

// HasSfcId returns a boolean if a field has been set.
func (o *MoveTaskV3Request) HasSfcId() bool {
	if o != nil && !IsNil(o.SfcId) {
		return true
	}

	return false
}

// SetSfcId gets a reference to the given string and assigns it to the SfcId field.
func (o *MoveTaskV3Request) SetSfcId(v string) {
	o.SfcId = &v
}

// GetStageId returns the StageId field value if set, zero value otherwise.
func (o *MoveTaskV3Request) GetStageId() string {
	if o == nil || IsNil(o.StageId) {
		var ret string
		return ret
	}
	return *o.StageId
}

// GetStageIdOk returns a tuple with the StageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoveTaskV3Request) GetStageIdOk() (*string, bool) {
	if o == nil || IsNil(o.StageId) {
		return nil, false
	}
	return o.StageId, true
}

// HasStageId returns a boolean if a field has been set.
func (o *MoveTaskV3Request) HasStageId() bool {
	if o != nil && !IsNil(o.StageId) {
		return true
	}

	return false
}

// SetStageId gets a reference to the given string and assigns it to the StageId field.
func (o *MoveTaskV3Request) SetStageId(v string) {
	o.StageId = &v
}

// GetTasklistId returns the TasklistId field value if set, zero value otherwise.
func (o *MoveTaskV3Request) GetTasklistId() string {
	if o == nil || IsNil(o.TasklistId) {
		var ret string
		return ret
	}
	return *o.TasklistId
}

// GetTasklistIdOk returns a tuple with the TasklistId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoveTaskV3Request) GetTasklistIdOk() (*string, bool) {
	if o == nil || IsNil(o.TasklistId) {
		return nil, false
	}
	return o.TasklistId, true
}

// HasTasklistId returns a boolean if a field has been set.
func (o *MoveTaskV3Request) HasTasklistId() bool {
	if o != nil && !IsNil(o.TasklistId) {
		return true
	}

	return false
}

// SetTasklistId gets a reference to the given string and assigns it to the TasklistId field.
func (o *MoveTaskV3Request) SetTasklistId(v string) {
	o.TasklistId = &v
}

func (o MoveTaskV3Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MoveTaskV3Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProjectId) {
		toSerialize["projectId"] = o.ProjectId
	}
	if !IsNil(o.TfsId) {
		toSerialize["tfsId"] = o.TfsId
	}
	if !IsNil(o.SfcId) {
		toSerialize["sfcId"] = o.SfcId
	}
	if !IsNil(o.StageId) {
		toSerialize["stageId"] = o.StageId
	}
	if !IsNil(o.TasklistId) {
		toSerialize["tasklistId"] = o.TasklistId
	}
	return toSerialize, nil
}

type NullableMoveTaskV3Request struct {
	value *MoveTaskV3Request
	isSet bool
}

func (v NullableMoveTaskV3Request) Get() *MoveTaskV3Request {
	return v.value
}

func (v *NullableMoveTaskV3Request) Set(val *MoveTaskV3Request) {
	v.value = val
	v.isSet = true
}

func (v NullableMoveTaskV3Request) IsSet() bool {
	return v.isSet
}

func (v *NullableMoveTaskV3Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMoveTaskV3Request(val *MoveTaskV3Request) *NullableMoveTaskV3Request {
	return &NullableMoveTaskV3Request{value: val, isSet: true}
}

func (v NullableMoveTaskV3Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMoveTaskV3Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


