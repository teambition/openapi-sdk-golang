/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the QueryProjectGroupsV3ResponseResultInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueryProjectGroupsV3ResponseResultInner{}

// QueryProjectGroupsV3ResponseResultInner 项目分组信息
type QueryProjectGroupsV3ResponseResultInner struct {
	// 项目分组ID
	Id *string `json:"id,omitempty"`
	// 祖先项目分组ID列表
	AncestorIds []string `json:"ancestorIds,omitempty"`
	// 项目分组名称
	Name *string `json:"name,omitempty"`
	// 项目分组图标
	Style *string `json:"style,omitempty"`
	// 创建时间
	Created *time.Time `json:"created,omitempty"`
	// 更新时间
	Updated *time.Time `json:"updated,omitempty"`
}

// NewQueryProjectGroupsV3ResponseResultInner instantiates a new QueryProjectGroupsV3ResponseResultInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryProjectGroupsV3ResponseResultInner() *QueryProjectGroupsV3ResponseResultInner {
	this := QueryProjectGroupsV3ResponseResultInner{}
	return &this
}

// NewQueryProjectGroupsV3ResponseResultInnerWithDefaults instantiates a new QueryProjectGroupsV3ResponseResultInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryProjectGroupsV3ResponseResultInnerWithDefaults() *QueryProjectGroupsV3ResponseResultInner {
	this := QueryProjectGroupsV3ResponseResultInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *QueryProjectGroupsV3ResponseResultInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryProjectGroupsV3ResponseResultInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *QueryProjectGroupsV3ResponseResultInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *QueryProjectGroupsV3ResponseResultInner) SetId(v string) {
	o.Id = &v
}

// GetAncestorIds returns the AncestorIds field value if set, zero value otherwise.
func (o *QueryProjectGroupsV3ResponseResultInner) GetAncestorIds() []string {
	if o == nil || IsNil(o.AncestorIds) {
		var ret []string
		return ret
	}
	return o.AncestorIds
}

// GetAncestorIdsOk returns a tuple with the AncestorIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryProjectGroupsV3ResponseResultInner) GetAncestorIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.AncestorIds) {
		return nil, false
	}
	return o.AncestorIds, true
}

// HasAncestorIds returns a boolean if a field has been set.
func (o *QueryProjectGroupsV3ResponseResultInner) HasAncestorIds() bool {
	if o != nil && !IsNil(o.AncestorIds) {
		return true
	}

	return false
}

// SetAncestorIds gets a reference to the given []string and assigns it to the AncestorIds field.
func (o *QueryProjectGroupsV3ResponseResultInner) SetAncestorIds(v []string) {
	o.AncestorIds = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *QueryProjectGroupsV3ResponseResultInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryProjectGroupsV3ResponseResultInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *QueryProjectGroupsV3ResponseResultInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *QueryProjectGroupsV3ResponseResultInner) SetName(v string) {
	o.Name = &v
}

// GetStyle returns the Style field value if set, zero value otherwise.
func (o *QueryProjectGroupsV3ResponseResultInner) GetStyle() string {
	if o == nil || IsNil(o.Style) {
		var ret string
		return ret
	}
	return *o.Style
}

// GetStyleOk returns a tuple with the Style field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryProjectGroupsV3ResponseResultInner) GetStyleOk() (*string, bool) {
	if o == nil || IsNil(o.Style) {
		return nil, false
	}
	return o.Style, true
}

// HasStyle returns a boolean if a field has been set.
func (o *QueryProjectGroupsV3ResponseResultInner) HasStyle() bool {
	if o != nil && !IsNil(o.Style) {
		return true
	}

	return false
}

// SetStyle gets a reference to the given string and assigns it to the Style field.
func (o *QueryProjectGroupsV3ResponseResultInner) SetStyle(v string) {
	o.Style = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *QueryProjectGroupsV3ResponseResultInner) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryProjectGroupsV3ResponseResultInner) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *QueryProjectGroupsV3ResponseResultInner) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *QueryProjectGroupsV3ResponseResultInner) SetCreated(v time.Time) {
	o.Created = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *QueryProjectGroupsV3ResponseResultInner) GetUpdated() time.Time {
	if o == nil || IsNil(o.Updated) {
		var ret time.Time
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryProjectGroupsV3ResponseResultInner) GetUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Updated) {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *QueryProjectGroupsV3ResponseResultInner) HasUpdated() bool {
	if o != nil && !IsNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given time.Time and assigns it to the Updated field.
func (o *QueryProjectGroupsV3ResponseResultInner) SetUpdated(v time.Time) {
	o.Updated = &v
}

func (o QueryProjectGroupsV3ResponseResultInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueryProjectGroupsV3ResponseResultInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.AncestorIds) {
		toSerialize["ancestorIds"] = o.AncestorIds
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Style) {
		toSerialize["style"] = o.Style
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.Updated) {
		toSerialize["updated"] = o.Updated
	}
	return toSerialize, nil
}

type NullableQueryProjectGroupsV3ResponseResultInner struct {
	value *QueryProjectGroupsV3ResponseResultInner
	isSet bool
}

func (v NullableQueryProjectGroupsV3ResponseResultInner) Get() *QueryProjectGroupsV3ResponseResultInner {
	return v.value
}

func (v *NullableQueryProjectGroupsV3ResponseResultInner) Set(val *QueryProjectGroupsV3ResponseResultInner) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryProjectGroupsV3ResponseResultInner) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryProjectGroupsV3ResponseResultInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryProjectGroupsV3ResponseResultInner(val *QueryProjectGroupsV3ResponseResultInner) *NullableQueryProjectGroupsV3ResponseResultInner {
	return &NullableQueryProjectGroupsV3ResponseResultInner{value: val, isSet: true}
}

func (v NullableQueryProjectGroupsV3ResponseResultInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryProjectGroupsV3ResponseResultInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


