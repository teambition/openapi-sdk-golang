/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the QueryProjectTestHubCasesV3ResponseResultInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueryProjectTestHubCasesV3ResponseResultInner{}

// QueryProjectTestHubCasesV3ResponseResultInner struct for QueryProjectTestHubCasesV3ResponseResultInner
type QueryProjectTestHubCasesV3ResponseResultInner struct {
	Commongroup *QueryProjectTestHubCasesV3ResponseResultInnerCommongroup `json:"commongroup,omitempty"`
	// 测试用例创建时间(UTC)
	Created *string `json:"created,omitempty"`
	// 创建者 ID
	CreatorId *string `json:"creatorId,omitempty"`
	// 测试用例 ID
	Id *string `json:"id,omitempty"`
	// 企业 ID
	OrganizationId *string `json:"organizationId,omitempty"`
	// 前置条件
	Precondition *string `json:"precondition,omitempty"`
	// 步骤列表
	Steps []CreateTestCaseV3RequestStepsInner `json:"steps,omitempty"`
	// 用例库 ID
	TesthubId *string `json:"testhubId,omitempty"`
	// 用例名称
	Title *string `json:"title,omitempty"`
	// 短ID
	UniqueId *int32 `json:"uniqueId,omitempty"`
	// 测试用例更新时间(UTC)
	Updated *string `json:"updated,omitempty"`
}

// NewQueryProjectTestHubCasesV3ResponseResultInner instantiates a new QueryProjectTestHubCasesV3ResponseResultInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryProjectTestHubCasesV3ResponseResultInner() *QueryProjectTestHubCasesV3ResponseResultInner {
	this := QueryProjectTestHubCasesV3ResponseResultInner{}
	return &this
}

// NewQueryProjectTestHubCasesV3ResponseResultInnerWithDefaults instantiates a new QueryProjectTestHubCasesV3ResponseResultInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryProjectTestHubCasesV3ResponseResultInnerWithDefaults() *QueryProjectTestHubCasesV3ResponseResultInner {
	this := QueryProjectTestHubCasesV3ResponseResultInner{}
	return &this
}

// GetCommongroup returns the Commongroup field value if set, zero value otherwise.
func (o *QueryProjectTestHubCasesV3ResponseResultInner) GetCommongroup() QueryProjectTestHubCasesV3ResponseResultInnerCommongroup {
	if o == nil || IsNil(o.Commongroup) {
		var ret QueryProjectTestHubCasesV3ResponseResultInnerCommongroup
		return ret
	}
	return *o.Commongroup
}

// GetCommongroupOk returns a tuple with the Commongroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryProjectTestHubCasesV3ResponseResultInner) GetCommongroupOk() (*QueryProjectTestHubCasesV3ResponseResultInnerCommongroup, bool) {
	if o == nil || IsNil(o.Commongroup) {
		return nil, false
	}
	return o.Commongroup, true
}

// HasCommongroup returns a boolean if a field has been set.
func (o *QueryProjectTestHubCasesV3ResponseResultInner) HasCommongroup() bool {
	if o != nil && !IsNil(o.Commongroup) {
		return true
	}

	return false
}

// SetCommongroup gets a reference to the given QueryProjectTestHubCasesV3ResponseResultInnerCommongroup and assigns it to the Commongroup field.
func (o *QueryProjectTestHubCasesV3ResponseResultInner) SetCommongroup(v QueryProjectTestHubCasesV3ResponseResultInnerCommongroup) {
	o.Commongroup = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *QueryProjectTestHubCasesV3ResponseResultInner) GetCreated() string {
	if o == nil || IsNil(o.Created) {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryProjectTestHubCasesV3ResponseResultInner) GetCreatedOk() (*string, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *QueryProjectTestHubCasesV3ResponseResultInner) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *QueryProjectTestHubCasesV3ResponseResultInner) SetCreated(v string) {
	o.Created = &v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise.
func (o *QueryProjectTestHubCasesV3ResponseResultInner) GetCreatorId() string {
	if o == nil || IsNil(o.CreatorId) {
		var ret string
		return ret
	}
	return *o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryProjectTestHubCasesV3ResponseResultInner) GetCreatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorId) {
		return nil, false
	}
	return o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *QueryProjectTestHubCasesV3ResponseResultInner) HasCreatorId() bool {
	if o != nil && !IsNil(o.CreatorId) {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given string and assigns it to the CreatorId field.
func (o *QueryProjectTestHubCasesV3ResponseResultInner) SetCreatorId(v string) {
	o.CreatorId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *QueryProjectTestHubCasesV3ResponseResultInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryProjectTestHubCasesV3ResponseResultInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *QueryProjectTestHubCasesV3ResponseResultInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *QueryProjectTestHubCasesV3ResponseResultInner) SetId(v string) {
	o.Id = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *QueryProjectTestHubCasesV3ResponseResultInner) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryProjectTestHubCasesV3ResponseResultInner) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *QueryProjectTestHubCasesV3ResponseResultInner) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *QueryProjectTestHubCasesV3ResponseResultInner) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetPrecondition returns the Precondition field value if set, zero value otherwise.
func (o *QueryProjectTestHubCasesV3ResponseResultInner) GetPrecondition() string {
	if o == nil || IsNil(o.Precondition) {
		var ret string
		return ret
	}
	return *o.Precondition
}

// GetPreconditionOk returns a tuple with the Precondition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryProjectTestHubCasesV3ResponseResultInner) GetPreconditionOk() (*string, bool) {
	if o == nil || IsNil(o.Precondition) {
		return nil, false
	}
	return o.Precondition, true
}

// HasPrecondition returns a boolean if a field has been set.
func (o *QueryProjectTestHubCasesV3ResponseResultInner) HasPrecondition() bool {
	if o != nil && !IsNil(o.Precondition) {
		return true
	}

	return false
}

// SetPrecondition gets a reference to the given string and assigns it to the Precondition field.
func (o *QueryProjectTestHubCasesV3ResponseResultInner) SetPrecondition(v string) {
	o.Precondition = &v
}

// GetSteps returns the Steps field value if set, zero value otherwise.
func (o *QueryProjectTestHubCasesV3ResponseResultInner) GetSteps() []CreateTestCaseV3RequestStepsInner {
	if o == nil || IsNil(o.Steps) {
		var ret []CreateTestCaseV3RequestStepsInner
		return ret
	}
	return o.Steps
}

// GetStepsOk returns a tuple with the Steps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryProjectTestHubCasesV3ResponseResultInner) GetStepsOk() ([]CreateTestCaseV3RequestStepsInner, bool) {
	if o == nil || IsNil(o.Steps) {
		return nil, false
	}
	return o.Steps, true
}

// HasSteps returns a boolean if a field has been set.
func (o *QueryProjectTestHubCasesV3ResponseResultInner) HasSteps() bool {
	if o != nil && !IsNil(o.Steps) {
		return true
	}

	return false
}

// SetSteps gets a reference to the given []CreateTestCaseV3RequestStepsInner and assigns it to the Steps field.
func (o *QueryProjectTestHubCasesV3ResponseResultInner) SetSteps(v []CreateTestCaseV3RequestStepsInner) {
	o.Steps = v
}

// GetTesthubId returns the TesthubId field value if set, zero value otherwise.
func (o *QueryProjectTestHubCasesV3ResponseResultInner) GetTesthubId() string {
	if o == nil || IsNil(o.TesthubId) {
		var ret string
		return ret
	}
	return *o.TesthubId
}

// GetTesthubIdOk returns a tuple with the TesthubId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryProjectTestHubCasesV3ResponseResultInner) GetTesthubIdOk() (*string, bool) {
	if o == nil || IsNil(o.TesthubId) {
		return nil, false
	}
	return o.TesthubId, true
}

// HasTesthubId returns a boolean if a field has been set.
func (o *QueryProjectTestHubCasesV3ResponseResultInner) HasTesthubId() bool {
	if o != nil && !IsNil(o.TesthubId) {
		return true
	}

	return false
}

// SetTesthubId gets a reference to the given string and assigns it to the TesthubId field.
func (o *QueryProjectTestHubCasesV3ResponseResultInner) SetTesthubId(v string) {
	o.TesthubId = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *QueryProjectTestHubCasesV3ResponseResultInner) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryProjectTestHubCasesV3ResponseResultInner) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *QueryProjectTestHubCasesV3ResponseResultInner) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *QueryProjectTestHubCasesV3ResponseResultInner) SetTitle(v string) {
	o.Title = &v
}

// GetUniqueId returns the UniqueId field value if set, zero value otherwise.
func (o *QueryProjectTestHubCasesV3ResponseResultInner) GetUniqueId() int32 {
	if o == nil || IsNil(o.UniqueId) {
		var ret int32
		return ret
	}
	return *o.UniqueId
}

// GetUniqueIdOk returns a tuple with the UniqueId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryProjectTestHubCasesV3ResponseResultInner) GetUniqueIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UniqueId) {
		return nil, false
	}
	return o.UniqueId, true
}

// HasUniqueId returns a boolean if a field has been set.
func (o *QueryProjectTestHubCasesV3ResponseResultInner) HasUniqueId() bool {
	if o != nil && !IsNil(o.UniqueId) {
		return true
	}

	return false
}

// SetUniqueId gets a reference to the given int32 and assigns it to the UniqueId field.
func (o *QueryProjectTestHubCasesV3ResponseResultInner) SetUniqueId(v int32) {
	o.UniqueId = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *QueryProjectTestHubCasesV3ResponseResultInner) GetUpdated() string {
	if o == nil || IsNil(o.Updated) {
		var ret string
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryProjectTestHubCasesV3ResponseResultInner) GetUpdatedOk() (*string, bool) {
	if o == nil || IsNil(o.Updated) {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *QueryProjectTestHubCasesV3ResponseResultInner) HasUpdated() bool {
	if o != nil && !IsNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given string and assigns it to the Updated field.
func (o *QueryProjectTestHubCasesV3ResponseResultInner) SetUpdated(v string) {
	o.Updated = &v
}

func (o QueryProjectTestHubCasesV3ResponseResultInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueryProjectTestHubCasesV3ResponseResultInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Commongroup) {
		toSerialize["commongroup"] = o.Commongroup
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.CreatorId) {
		toSerialize["creatorId"] = o.CreatorId
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if !IsNil(o.Precondition) {
		toSerialize["precondition"] = o.Precondition
	}
	if !IsNil(o.Steps) {
		toSerialize["steps"] = o.Steps
	}
	if !IsNil(o.TesthubId) {
		toSerialize["testhubId"] = o.TesthubId
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.UniqueId) {
		toSerialize["uniqueId"] = o.UniqueId
	}
	if !IsNil(o.Updated) {
		toSerialize["updated"] = o.Updated
	}
	return toSerialize, nil
}

type NullableQueryProjectTestHubCasesV3ResponseResultInner struct {
	value *QueryProjectTestHubCasesV3ResponseResultInner
	isSet bool
}

func (v NullableQueryProjectTestHubCasesV3ResponseResultInner) Get() *QueryProjectTestHubCasesV3ResponseResultInner {
	return v.value
}

func (v *NullableQueryProjectTestHubCasesV3ResponseResultInner) Set(val *QueryProjectTestHubCasesV3ResponseResultInner) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryProjectTestHubCasesV3ResponseResultInner) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryProjectTestHubCasesV3ResponseResultInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryProjectTestHubCasesV3ResponseResultInner(val *QueryProjectTestHubCasesV3ResponseResultInner) *NullableQueryProjectTestHubCasesV3ResponseResultInner {
	return &NullableQueryProjectTestHubCasesV3ResponseResultInner{value: val, isSet: true}
}

func (v NullableQueryProjectTestHubCasesV3ResponseResultInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryProjectTestHubCasesV3ResponseResultInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


