/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the QueryProjectsV3ResponseResultInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueryProjectsV3ResponseResultInner{}

// QueryProjectsV3ResponseResultInner 项目
type QueryProjectsV3ResponseResultInner struct {
	// 项目ID
	Id *string `json:"id,omitempty"`
	// 项目名称
	Name *string `json:"name,omitempty"`
	// 项目LOGO
	Logo *string `json:"logo,omitempty"`
	// 项目描述
	Description *string `json:"description,omitempty"`
	// 企业ID
	OrganizationId *string `json:"organizationId,omitempty"`
	// 可见性，project | organization
	Visibility *string `json:"visibility,omitempty"`
	// 是模板项目
	IsTemplate *bool `json:"isTemplate,omitempty"`
	// 创建人ID
	CreatorId *string `json:"creatorId,omitempty"`
	// 是否放入回收站
	IsArchived *bool `json:"isArchived,omitempty"`
	// 是否归档
	IsSuspended *bool `json:"isSuspended,omitempty"`
	// 归档时间
	SuspendedAt *time.Time `json:"suspendedAt,omitempty"`
	// 任务ID前缀
	UniqueIdPrefix *string `json:"uniqueIdPrefix,omitempty"`
	// 创建时间
	Created *time.Time `json:"created,omitempty"`
	// 更新时间
	Updated *time.Time `json:"updated,omitempty"`
	// 项目开始时间
	StartDate *time.Time `json:"startDate,omitempty"`
	// 项目结束时间
	EndDate *time.Time `json:"endDate,omitempty"`
	// 来源项目 ID
	SourceId *string `json:"sourceId,omitempty"`
	// 自定义字段值集合
	Customfields []CopyProjectV3ResponseResultCustomfieldsInner `json:"customfields,omitempty"`
}

// NewQueryProjectsV3ResponseResultInner instantiates a new QueryProjectsV3ResponseResultInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryProjectsV3ResponseResultInner() *QueryProjectsV3ResponseResultInner {
	this := QueryProjectsV3ResponseResultInner{}
	return &this
}

// NewQueryProjectsV3ResponseResultInnerWithDefaults instantiates a new QueryProjectsV3ResponseResultInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryProjectsV3ResponseResultInnerWithDefaults() *QueryProjectsV3ResponseResultInner {
	this := QueryProjectsV3ResponseResultInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *QueryProjectsV3ResponseResultInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryProjectsV3ResponseResultInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *QueryProjectsV3ResponseResultInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *QueryProjectsV3ResponseResultInner) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *QueryProjectsV3ResponseResultInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryProjectsV3ResponseResultInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *QueryProjectsV3ResponseResultInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *QueryProjectsV3ResponseResultInner) SetName(v string) {
	o.Name = &v
}

// GetLogo returns the Logo field value if set, zero value otherwise.
func (o *QueryProjectsV3ResponseResultInner) GetLogo() string {
	if o == nil || IsNil(o.Logo) {
		var ret string
		return ret
	}
	return *o.Logo
}

// GetLogoOk returns a tuple with the Logo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryProjectsV3ResponseResultInner) GetLogoOk() (*string, bool) {
	if o == nil || IsNil(o.Logo) {
		return nil, false
	}
	return o.Logo, true
}

// HasLogo returns a boolean if a field has been set.
func (o *QueryProjectsV3ResponseResultInner) HasLogo() bool {
	if o != nil && !IsNil(o.Logo) {
		return true
	}

	return false
}

// SetLogo gets a reference to the given string and assigns it to the Logo field.
func (o *QueryProjectsV3ResponseResultInner) SetLogo(v string) {
	o.Logo = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *QueryProjectsV3ResponseResultInner) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryProjectsV3ResponseResultInner) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *QueryProjectsV3ResponseResultInner) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *QueryProjectsV3ResponseResultInner) SetDescription(v string) {
	o.Description = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *QueryProjectsV3ResponseResultInner) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryProjectsV3ResponseResultInner) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *QueryProjectsV3ResponseResultInner) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *QueryProjectsV3ResponseResultInner) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *QueryProjectsV3ResponseResultInner) GetVisibility() string {
	if o == nil || IsNil(o.Visibility) {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryProjectsV3ResponseResultInner) GetVisibilityOk() (*string, bool) {
	if o == nil || IsNil(o.Visibility) {
		return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *QueryProjectsV3ResponseResultInner) HasVisibility() bool {
	if o != nil && !IsNil(o.Visibility) {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *QueryProjectsV3ResponseResultInner) SetVisibility(v string) {
	o.Visibility = &v
}

// GetIsTemplate returns the IsTemplate field value if set, zero value otherwise.
func (o *QueryProjectsV3ResponseResultInner) GetIsTemplate() bool {
	if o == nil || IsNil(o.IsTemplate) {
		var ret bool
		return ret
	}
	return *o.IsTemplate
}

// GetIsTemplateOk returns a tuple with the IsTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryProjectsV3ResponseResultInner) GetIsTemplateOk() (*bool, bool) {
	if o == nil || IsNil(o.IsTemplate) {
		return nil, false
	}
	return o.IsTemplate, true
}

// HasIsTemplate returns a boolean if a field has been set.
func (o *QueryProjectsV3ResponseResultInner) HasIsTemplate() bool {
	if o != nil && !IsNil(o.IsTemplate) {
		return true
	}

	return false
}

// SetIsTemplate gets a reference to the given bool and assigns it to the IsTemplate field.
func (o *QueryProjectsV3ResponseResultInner) SetIsTemplate(v bool) {
	o.IsTemplate = &v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise.
func (o *QueryProjectsV3ResponseResultInner) GetCreatorId() string {
	if o == nil || IsNil(o.CreatorId) {
		var ret string
		return ret
	}
	return *o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryProjectsV3ResponseResultInner) GetCreatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorId) {
		return nil, false
	}
	return o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *QueryProjectsV3ResponseResultInner) HasCreatorId() bool {
	if o != nil && !IsNil(o.CreatorId) {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given string and assigns it to the CreatorId field.
func (o *QueryProjectsV3ResponseResultInner) SetCreatorId(v string) {
	o.CreatorId = &v
}

// GetIsArchived returns the IsArchived field value if set, zero value otherwise.
func (o *QueryProjectsV3ResponseResultInner) GetIsArchived() bool {
	if o == nil || IsNil(o.IsArchived) {
		var ret bool
		return ret
	}
	return *o.IsArchived
}

// GetIsArchivedOk returns a tuple with the IsArchived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryProjectsV3ResponseResultInner) GetIsArchivedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsArchived) {
		return nil, false
	}
	return o.IsArchived, true
}

// HasIsArchived returns a boolean if a field has been set.
func (o *QueryProjectsV3ResponseResultInner) HasIsArchived() bool {
	if o != nil && !IsNil(o.IsArchived) {
		return true
	}

	return false
}

// SetIsArchived gets a reference to the given bool and assigns it to the IsArchived field.
func (o *QueryProjectsV3ResponseResultInner) SetIsArchived(v bool) {
	o.IsArchived = &v
}

// GetIsSuspended returns the IsSuspended field value if set, zero value otherwise.
func (o *QueryProjectsV3ResponseResultInner) GetIsSuspended() bool {
	if o == nil || IsNil(o.IsSuspended) {
		var ret bool
		return ret
	}
	return *o.IsSuspended
}

// GetIsSuspendedOk returns a tuple with the IsSuspended field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryProjectsV3ResponseResultInner) GetIsSuspendedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSuspended) {
		return nil, false
	}
	return o.IsSuspended, true
}

// HasIsSuspended returns a boolean if a field has been set.
func (o *QueryProjectsV3ResponseResultInner) HasIsSuspended() bool {
	if o != nil && !IsNil(o.IsSuspended) {
		return true
	}

	return false
}

// SetIsSuspended gets a reference to the given bool and assigns it to the IsSuspended field.
func (o *QueryProjectsV3ResponseResultInner) SetIsSuspended(v bool) {
	o.IsSuspended = &v
}

// GetSuspendedAt returns the SuspendedAt field value if set, zero value otherwise.
func (o *QueryProjectsV3ResponseResultInner) GetSuspendedAt() time.Time {
	if o == nil || IsNil(o.SuspendedAt) {
		var ret time.Time
		return ret
	}
	return *o.SuspendedAt
}

// GetSuspendedAtOk returns a tuple with the SuspendedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryProjectsV3ResponseResultInner) GetSuspendedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.SuspendedAt) {
		return nil, false
	}
	return o.SuspendedAt, true
}

// HasSuspendedAt returns a boolean if a field has been set.
func (o *QueryProjectsV3ResponseResultInner) HasSuspendedAt() bool {
	if o != nil && !IsNil(o.SuspendedAt) {
		return true
	}

	return false
}

// SetSuspendedAt gets a reference to the given time.Time and assigns it to the SuspendedAt field.
func (o *QueryProjectsV3ResponseResultInner) SetSuspendedAt(v time.Time) {
	o.SuspendedAt = &v
}

// GetUniqueIdPrefix returns the UniqueIdPrefix field value if set, zero value otherwise.
func (o *QueryProjectsV3ResponseResultInner) GetUniqueIdPrefix() string {
	if o == nil || IsNil(o.UniqueIdPrefix) {
		var ret string
		return ret
	}
	return *o.UniqueIdPrefix
}

// GetUniqueIdPrefixOk returns a tuple with the UniqueIdPrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryProjectsV3ResponseResultInner) GetUniqueIdPrefixOk() (*string, bool) {
	if o == nil || IsNil(o.UniqueIdPrefix) {
		return nil, false
	}
	return o.UniqueIdPrefix, true
}

// HasUniqueIdPrefix returns a boolean if a field has been set.
func (o *QueryProjectsV3ResponseResultInner) HasUniqueIdPrefix() bool {
	if o != nil && !IsNil(o.UniqueIdPrefix) {
		return true
	}

	return false
}

// SetUniqueIdPrefix gets a reference to the given string and assigns it to the UniqueIdPrefix field.
func (o *QueryProjectsV3ResponseResultInner) SetUniqueIdPrefix(v string) {
	o.UniqueIdPrefix = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *QueryProjectsV3ResponseResultInner) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryProjectsV3ResponseResultInner) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *QueryProjectsV3ResponseResultInner) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *QueryProjectsV3ResponseResultInner) SetCreated(v time.Time) {
	o.Created = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *QueryProjectsV3ResponseResultInner) GetUpdated() time.Time {
	if o == nil || IsNil(o.Updated) {
		var ret time.Time
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryProjectsV3ResponseResultInner) GetUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Updated) {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *QueryProjectsV3ResponseResultInner) HasUpdated() bool {
	if o != nil && !IsNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given time.Time and assigns it to the Updated field.
func (o *QueryProjectsV3ResponseResultInner) SetUpdated(v time.Time) {
	o.Updated = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *QueryProjectsV3ResponseResultInner) GetStartDate() time.Time {
	if o == nil || IsNil(o.StartDate) {
		var ret time.Time
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryProjectsV3ResponseResultInner) GetStartDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *QueryProjectsV3ResponseResultInner) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given time.Time and assigns it to the StartDate field.
func (o *QueryProjectsV3ResponseResultInner) SetStartDate(v time.Time) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *QueryProjectsV3ResponseResultInner) GetEndDate() time.Time {
	if o == nil || IsNil(o.EndDate) {
		var ret time.Time
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryProjectsV3ResponseResultInner) GetEndDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *QueryProjectsV3ResponseResultInner) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given time.Time and assigns it to the EndDate field.
func (o *QueryProjectsV3ResponseResultInner) SetEndDate(v time.Time) {
	o.EndDate = &v
}

// GetSourceId returns the SourceId field value if set, zero value otherwise.
func (o *QueryProjectsV3ResponseResultInner) GetSourceId() string {
	if o == nil || IsNil(o.SourceId) {
		var ret string
		return ret
	}
	return *o.SourceId
}

// GetSourceIdOk returns a tuple with the SourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryProjectsV3ResponseResultInner) GetSourceIdOk() (*string, bool) {
	if o == nil || IsNil(o.SourceId) {
		return nil, false
	}
	return o.SourceId, true
}

// HasSourceId returns a boolean if a field has been set.
func (o *QueryProjectsV3ResponseResultInner) HasSourceId() bool {
	if o != nil && !IsNil(o.SourceId) {
		return true
	}

	return false
}

// SetSourceId gets a reference to the given string and assigns it to the SourceId field.
func (o *QueryProjectsV3ResponseResultInner) SetSourceId(v string) {
	o.SourceId = &v
}

// GetCustomfields returns the Customfields field value if set, zero value otherwise.
func (o *QueryProjectsV3ResponseResultInner) GetCustomfields() []CopyProjectV3ResponseResultCustomfieldsInner {
	if o == nil || IsNil(o.Customfields) {
		var ret []CopyProjectV3ResponseResultCustomfieldsInner
		return ret
	}
	return o.Customfields
}

// GetCustomfieldsOk returns a tuple with the Customfields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryProjectsV3ResponseResultInner) GetCustomfieldsOk() ([]CopyProjectV3ResponseResultCustomfieldsInner, bool) {
	if o == nil || IsNil(o.Customfields) {
		return nil, false
	}
	return o.Customfields, true
}

// HasCustomfields returns a boolean if a field has been set.
func (o *QueryProjectsV3ResponseResultInner) HasCustomfields() bool {
	if o != nil && !IsNil(o.Customfields) {
		return true
	}

	return false
}

// SetCustomfields gets a reference to the given []CopyProjectV3ResponseResultCustomfieldsInner and assigns it to the Customfields field.
func (o *QueryProjectsV3ResponseResultInner) SetCustomfields(v []CopyProjectV3ResponseResultCustomfieldsInner) {
	o.Customfields = v
}

func (o QueryProjectsV3ResponseResultInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueryProjectsV3ResponseResultInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Logo) {
		toSerialize["logo"] = o.Logo
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if !IsNil(o.Visibility) {
		toSerialize["visibility"] = o.Visibility
	}
	if !IsNil(o.IsTemplate) {
		toSerialize["isTemplate"] = o.IsTemplate
	}
	if !IsNil(o.CreatorId) {
		toSerialize["creatorId"] = o.CreatorId
	}
	if !IsNil(o.IsArchived) {
		toSerialize["isArchived"] = o.IsArchived
	}
	if !IsNil(o.IsSuspended) {
		toSerialize["isSuspended"] = o.IsSuspended
	}
	if !IsNil(o.SuspendedAt) {
		toSerialize["suspendedAt"] = o.SuspendedAt
	}
	if !IsNil(o.UniqueIdPrefix) {
		toSerialize["uniqueIdPrefix"] = o.UniqueIdPrefix
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.Updated) {
		toSerialize["updated"] = o.Updated
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !IsNil(o.SourceId) {
		toSerialize["sourceId"] = o.SourceId
	}
	if !IsNil(o.Customfields) {
		toSerialize["customfields"] = o.Customfields
	}
	return toSerialize, nil
}

type NullableQueryProjectsV3ResponseResultInner struct {
	value *QueryProjectsV3ResponseResultInner
	isSet bool
}

func (v NullableQueryProjectsV3ResponseResultInner) Get() *QueryProjectsV3ResponseResultInner {
	return v.value
}

func (v *NullableQueryProjectsV3ResponseResultInner) Set(val *QueryProjectsV3ResponseResultInner) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryProjectsV3ResponseResultInner) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryProjectsV3ResponseResultInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryProjectsV3ResponseResultInner(val *QueryProjectsV3ResponseResultInner) *NullableQueryProjectsV3ResponseResultInner {
	return &NullableQueryProjectsV3ResponseResultInner{value: val, isSet: true}
}

func (v NullableQueryProjectsV3ResponseResultInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryProjectsV3ResponseResultInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


