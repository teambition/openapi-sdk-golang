/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the QueryTestCasesV3ResponseResultInnerCustomfieldsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueryTestCasesV3ResponseResultInnerCustomfieldsInner{}

// QueryTestCasesV3ResponseResultInnerCustomfieldsInner 自定义字段值
type QueryTestCasesV3ResponseResultInnerCustomfieldsInner struct {
	// 自定义字段ID
	CfId *string `json:"cfId,omitempty"`
	// 自定义字段类型
	Type *string `json:"type,omitempty"`
	// 字段值集合
	Value []CreateTestCaseV3ResponseResultCustomfieldsInnerValueInner `json:"value,omitempty"`
}

// NewQueryTestCasesV3ResponseResultInnerCustomfieldsInner instantiates a new QueryTestCasesV3ResponseResultInnerCustomfieldsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryTestCasesV3ResponseResultInnerCustomfieldsInner() *QueryTestCasesV3ResponseResultInnerCustomfieldsInner {
	this := QueryTestCasesV3ResponseResultInnerCustomfieldsInner{}
	return &this
}

// NewQueryTestCasesV3ResponseResultInnerCustomfieldsInnerWithDefaults instantiates a new QueryTestCasesV3ResponseResultInnerCustomfieldsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryTestCasesV3ResponseResultInnerCustomfieldsInnerWithDefaults() *QueryTestCasesV3ResponseResultInnerCustomfieldsInner {
	this := QueryTestCasesV3ResponseResultInnerCustomfieldsInner{}
	return &this
}

// GetCfId returns the CfId field value if set, zero value otherwise.
func (o *QueryTestCasesV3ResponseResultInnerCustomfieldsInner) GetCfId() string {
	if o == nil || IsNil(o.CfId) {
		var ret string
		return ret
	}
	return *o.CfId
}

// GetCfIdOk returns a tuple with the CfId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryTestCasesV3ResponseResultInnerCustomfieldsInner) GetCfIdOk() (*string, bool) {
	if o == nil || IsNil(o.CfId) {
		return nil, false
	}
	return o.CfId, true
}

// HasCfId returns a boolean if a field has been set.
func (o *QueryTestCasesV3ResponseResultInnerCustomfieldsInner) HasCfId() bool {
	if o != nil && !IsNil(o.CfId) {
		return true
	}

	return false
}

// SetCfId gets a reference to the given string and assigns it to the CfId field.
func (o *QueryTestCasesV3ResponseResultInnerCustomfieldsInner) SetCfId(v string) {
	o.CfId = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *QueryTestCasesV3ResponseResultInnerCustomfieldsInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryTestCasesV3ResponseResultInnerCustomfieldsInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *QueryTestCasesV3ResponseResultInnerCustomfieldsInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *QueryTestCasesV3ResponseResultInnerCustomfieldsInner) SetType(v string) {
	o.Type = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *QueryTestCasesV3ResponseResultInnerCustomfieldsInner) GetValue() []CreateTestCaseV3ResponseResultCustomfieldsInnerValueInner {
	if o == nil || IsNil(o.Value) {
		var ret []CreateTestCaseV3ResponseResultCustomfieldsInnerValueInner
		return ret
	}
	return o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryTestCasesV3ResponseResultInnerCustomfieldsInner) GetValueOk() ([]CreateTestCaseV3ResponseResultCustomfieldsInnerValueInner, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *QueryTestCasesV3ResponseResultInnerCustomfieldsInner) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given []CreateTestCaseV3ResponseResultCustomfieldsInnerValueInner and assigns it to the Value field.
func (o *QueryTestCasesV3ResponseResultInnerCustomfieldsInner) SetValue(v []CreateTestCaseV3ResponseResultCustomfieldsInnerValueInner) {
	o.Value = v
}

func (o QueryTestCasesV3ResponseResultInnerCustomfieldsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueryTestCasesV3ResponseResultInnerCustomfieldsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CfId) {
		toSerialize["cfId"] = o.CfId
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableQueryTestCasesV3ResponseResultInnerCustomfieldsInner struct {
	value *QueryTestCasesV3ResponseResultInnerCustomfieldsInner
	isSet bool
}

func (v NullableQueryTestCasesV3ResponseResultInnerCustomfieldsInner) Get() *QueryTestCasesV3ResponseResultInnerCustomfieldsInner {
	return v.value
}

func (v *NullableQueryTestCasesV3ResponseResultInnerCustomfieldsInner) Set(val *QueryTestCasesV3ResponseResultInnerCustomfieldsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryTestCasesV3ResponseResultInnerCustomfieldsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryTestCasesV3ResponseResultInnerCustomfieldsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryTestCasesV3ResponseResultInnerCustomfieldsInner(val *QueryTestCasesV3ResponseResultInnerCustomfieldsInner) *NullableQueryTestCasesV3ResponseResultInnerCustomfieldsInner {
	return &NullableQueryTestCasesV3ResponseResultInnerCustomfieldsInner{value: val, isSet: true}
}

func (v NullableQueryTestCasesV3ResponseResultInnerCustomfieldsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryTestCasesV3ResponseResultInnerCustomfieldsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


