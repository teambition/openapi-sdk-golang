/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the QueryTestGroupsV3Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueryTestGroupsV3Request{}

// QueryTestGroupsV3Request struct for QueryTestGroupsV3Request
type QueryTestGroupsV3Request struct {
	// 分组ID 列表
	GroupIds []string `json:"groupIds,omitempty"`
	// 企业用例库用例传organization,项目用例库与执行用例传project
	ResourceType *string `json:"resourceType,omitempty"`
}

// NewQueryTestGroupsV3Request instantiates a new QueryTestGroupsV3Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryTestGroupsV3Request() *QueryTestGroupsV3Request {
	this := QueryTestGroupsV3Request{}
	return &this
}

// NewQueryTestGroupsV3RequestWithDefaults instantiates a new QueryTestGroupsV3Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryTestGroupsV3RequestWithDefaults() *QueryTestGroupsV3Request {
	this := QueryTestGroupsV3Request{}
	return &this
}

// GetGroupIds returns the GroupIds field value if set, zero value otherwise.
func (o *QueryTestGroupsV3Request) GetGroupIds() []string {
	if o == nil || IsNil(o.GroupIds) {
		var ret []string
		return ret
	}
	return o.GroupIds
}

// GetGroupIdsOk returns a tuple with the GroupIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryTestGroupsV3Request) GetGroupIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.GroupIds) {
		return nil, false
	}
	return o.GroupIds, true
}

// HasGroupIds returns a boolean if a field has been set.
func (o *QueryTestGroupsV3Request) HasGroupIds() bool {
	if o != nil && !IsNil(o.GroupIds) {
		return true
	}

	return false
}

// SetGroupIds gets a reference to the given []string and assigns it to the GroupIds field.
func (o *QueryTestGroupsV3Request) SetGroupIds(v []string) {
	o.GroupIds = v
}

// GetResourceType returns the ResourceType field value if set, zero value otherwise.
func (o *QueryTestGroupsV3Request) GetResourceType() string {
	if o == nil || IsNil(o.ResourceType) {
		var ret string
		return ret
	}
	return *o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryTestGroupsV3Request) GetResourceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceType) {
		return nil, false
	}
	return o.ResourceType, true
}

// HasResourceType returns a boolean if a field has been set.
func (o *QueryTestGroupsV3Request) HasResourceType() bool {
	if o != nil && !IsNil(o.ResourceType) {
		return true
	}

	return false
}

// SetResourceType gets a reference to the given string and assigns it to the ResourceType field.
func (o *QueryTestGroupsV3Request) SetResourceType(v string) {
	o.ResourceType = &v
}

func (o QueryTestGroupsV3Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueryTestGroupsV3Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GroupIds) {
		toSerialize["groupIds"] = o.GroupIds
	}
	if !IsNil(o.ResourceType) {
		toSerialize["resourceType"] = o.ResourceType
	}
	return toSerialize, nil
}

type NullableQueryTestGroupsV3Request struct {
	value *QueryTestGroupsV3Request
	isSet bool
}

func (v NullableQueryTestGroupsV3Request) Get() *QueryTestGroupsV3Request {
	return v.value
}

func (v *NullableQueryTestGroupsV3Request) Set(val *QueryTestGroupsV3Request) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryTestGroupsV3Request) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryTestGroupsV3Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryTestGroupsV3Request(val *QueryTestGroupsV3Request) *NullableQueryTestGroupsV3Request {
	return &NullableQueryTestGroupsV3Request{value: val, isSet: true}
}

func (v NullableQueryTestGroupsV3Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryTestGroupsV3Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


