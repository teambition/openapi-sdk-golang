/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the QueryTestGroupsV3ResponseResultInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueryTestGroupsV3ResponseResultInner{}

// QueryTestGroupsV3ResponseResultInner struct for QueryTestGroupsV3ResponseResultInner
type QueryTestGroupsV3ResponseResultInner struct {
	// 分组祖先 ID
	AncestorIds *string `json:"ancestorIds,omitempty"`
	// 测试用例创建时间(UTC)
	Created *string `json:"created,omitempty"`
	// 创建者 ID
	CreatorId *string `json:"creatorId,omitempty"`
	// 分组 ID
	Id *string `json:"id,omitempty"`
	// 分组名称
	Name *string `json:"name,omitempty"`
	// 测试用例更新时间(UTC)
	Updated *string `json:"updated,omitempty"`
}

// NewQueryTestGroupsV3ResponseResultInner instantiates a new QueryTestGroupsV3ResponseResultInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryTestGroupsV3ResponseResultInner() *QueryTestGroupsV3ResponseResultInner {
	this := QueryTestGroupsV3ResponseResultInner{}
	return &this
}

// NewQueryTestGroupsV3ResponseResultInnerWithDefaults instantiates a new QueryTestGroupsV3ResponseResultInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryTestGroupsV3ResponseResultInnerWithDefaults() *QueryTestGroupsV3ResponseResultInner {
	this := QueryTestGroupsV3ResponseResultInner{}
	return &this
}

// GetAncestorIds returns the AncestorIds field value if set, zero value otherwise.
func (o *QueryTestGroupsV3ResponseResultInner) GetAncestorIds() string {
	if o == nil || IsNil(o.AncestorIds) {
		var ret string
		return ret
	}
	return *o.AncestorIds
}

// GetAncestorIdsOk returns a tuple with the AncestorIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryTestGroupsV3ResponseResultInner) GetAncestorIdsOk() (*string, bool) {
	if o == nil || IsNil(o.AncestorIds) {
		return nil, false
	}
	return o.AncestorIds, true
}

// HasAncestorIds returns a boolean if a field has been set.
func (o *QueryTestGroupsV3ResponseResultInner) HasAncestorIds() bool {
	if o != nil && !IsNil(o.AncestorIds) {
		return true
	}

	return false
}

// SetAncestorIds gets a reference to the given string and assigns it to the AncestorIds field.
func (o *QueryTestGroupsV3ResponseResultInner) SetAncestorIds(v string) {
	o.AncestorIds = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *QueryTestGroupsV3ResponseResultInner) GetCreated() string {
	if o == nil || IsNil(o.Created) {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryTestGroupsV3ResponseResultInner) GetCreatedOk() (*string, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *QueryTestGroupsV3ResponseResultInner) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *QueryTestGroupsV3ResponseResultInner) SetCreated(v string) {
	o.Created = &v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise.
func (o *QueryTestGroupsV3ResponseResultInner) GetCreatorId() string {
	if o == nil || IsNil(o.CreatorId) {
		var ret string
		return ret
	}
	return *o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryTestGroupsV3ResponseResultInner) GetCreatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorId) {
		return nil, false
	}
	return o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *QueryTestGroupsV3ResponseResultInner) HasCreatorId() bool {
	if o != nil && !IsNil(o.CreatorId) {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given string and assigns it to the CreatorId field.
func (o *QueryTestGroupsV3ResponseResultInner) SetCreatorId(v string) {
	o.CreatorId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *QueryTestGroupsV3ResponseResultInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryTestGroupsV3ResponseResultInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *QueryTestGroupsV3ResponseResultInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *QueryTestGroupsV3ResponseResultInner) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *QueryTestGroupsV3ResponseResultInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryTestGroupsV3ResponseResultInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *QueryTestGroupsV3ResponseResultInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *QueryTestGroupsV3ResponseResultInner) SetName(v string) {
	o.Name = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *QueryTestGroupsV3ResponseResultInner) GetUpdated() string {
	if o == nil || IsNil(o.Updated) {
		var ret string
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryTestGroupsV3ResponseResultInner) GetUpdatedOk() (*string, bool) {
	if o == nil || IsNil(o.Updated) {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *QueryTestGroupsV3ResponseResultInner) HasUpdated() bool {
	if o != nil && !IsNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given string and assigns it to the Updated field.
func (o *QueryTestGroupsV3ResponseResultInner) SetUpdated(v string) {
	o.Updated = &v
}

func (o QueryTestGroupsV3ResponseResultInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueryTestGroupsV3ResponseResultInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AncestorIds) {
		toSerialize["ancestorIds"] = o.AncestorIds
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.CreatorId) {
		toSerialize["creatorId"] = o.CreatorId
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Updated) {
		toSerialize["updated"] = o.Updated
	}
	return toSerialize, nil
}

type NullableQueryTestGroupsV3ResponseResultInner struct {
	value *QueryTestGroupsV3ResponseResultInner
	isSet bool
}

func (v NullableQueryTestGroupsV3ResponseResultInner) Get() *QueryTestGroupsV3ResponseResultInner {
	return v.value
}

func (v *NullableQueryTestGroupsV3ResponseResultInner) Set(val *QueryTestGroupsV3ResponseResultInner) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryTestGroupsV3ResponseResultInner) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryTestGroupsV3ResponseResultInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryTestGroupsV3ResponseResultInner(val *QueryTestGroupsV3ResponseResultInner) *NullableQueryTestGroupsV3ResponseResultInner {
	return &NullableQueryTestGroupsV3ResponseResultInner{value: val, isSet: true}
}

func (v NullableQueryTestGroupsV3ResponseResultInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryTestGroupsV3ResponseResultInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


