/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RemoveGroupMemberRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RemoveGroupMemberRequest{}

// RemoveGroupMemberRequest struct for RemoveGroupMemberRequest
type RemoveGroupMemberRequest struct {
	// 操作人 ID
	OperatorId *string `json:"operatorId,omitempty"`
	// 群组 ID
	GroupId *string `json:"groupId,omitempty"`
	// 用户 ID
	UserId *string `json:"userId,omitempty"`
}

// NewRemoveGroupMemberRequest instantiates a new RemoveGroupMemberRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRemoveGroupMemberRequest() *RemoveGroupMemberRequest {
	this := RemoveGroupMemberRequest{}
	return &this
}

// NewRemoveGroupMemberRequestWithDefaults instantiates a new RemoveGroupMemberRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRemoveGroupMemberRequestWithDefaults() *RemoveGroupMemberRequest {
	this := RemoveGroupMemberRequest{}
	return &this
}

// GetOperatorId returns the OperatorId field value if set, zero value otherwise.
func (o *RemoveGroupMemberRequest) GetOperatorId() string {
	if o == nil || IsNil(o.OperatorId) {
		var ret string
		return ret
	}
	return *o.OperatorId
}

// GetOperatorIdOk returns a tuple with the OperatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoveGroupMemberRequest) GetOperatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.OperatorId) {
		return nil, false
	}
	return o.OperatorId, true
}

// HasOperatorId returns a boolean if a field has been set.
func (o *RemoveGroupMemberRequest) HasOperatorId() bool {
	if o != nil && !IsNil(o.OperatorId) {
		return true
	}

	return false
}

// SetOperatorId gets a reference to the given string and assigns it to the OperatorId field.
func (o *RemoveGroupMemberRequest) SetOperatorId(v string) {
	o.OperatorId = &v
}

// GetGroupId returns the GroupId field value if set, zero value otherwise.
func (o *RemoveGroupMemberRequest) GetGroupId() string {
	if o == nil || IsNil(o.GroupId) {
		var ret string
		return ret
	}
	return *o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoveGroupMemberRequest) GetGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.GroupId) {
		return nil, false
	}
	return o.GroupId, true
}

// HasGroupId returns a boolean if a field has been set.
func (o *RemoveGroupMemberRequest) HasGroupId() bool {
	if o != nil && !IsNil(o.GroupId) {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given string and assigns it to the GroupId field.
func (o *RemoveGroupMemberRequest) SetGroupId(v string) {
	o.GroupId = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *RemoveGroupMemberRequest) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoveGroupMemberRequest) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *RemoveGroupMemberRequest) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *RemoveGroupMemberRequest) SetUserId(v string) {
	o.UserId = &v
}

func (o RemoveGroupMemberRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RemoveGroupMemberRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OperatorId) {
		toSerialize["operatorId"] = o.OperatorId
	}
	if !IsNil(o.GroupId) {
		toSerialize["groupId"] = o.GroupId
	}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	return toSerialize, nil
}

type NullableRemoveGroupMemberRequest struct {
	value *RemoveGroupMemberRequest
	isSet bool
}

func (v NullableRemoveGroupMemberRequest) Get() *RemoveGroupMemberRequest {
	return v.value
}

func (v *NullableRemoveGroupMemberRequest) Set(val *RemoveGroupMemberRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRemoveGroupMemberRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRemoveGroupMemberRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRemoveGroupMemberRequest(val *RemoveGroupMemberRequest) *NullableRemoveGroupMemberRequest {
	return &NullableRemoveGroupMemberRequest{value: val, isSet: true}
}

func (v NullableRemoveGroupMemberRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRemoveGroupMemberRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


