/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RemoveProgramProjectV3ResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RemoveProgramProjectV3ResponseResult{}

// RemoveProgramProjectV3ResponseResult struct for RemoveProgramProjectV3ResponseResult
type RemoveProgramProjectV3ResponseResult struct {
	// 项目 ID
	ProjectId *string `json:"projectId,omitempty"`
}

// NewRemoveProgramProjectV3ResponseResult instantiates a new RemoveProgramProjectV3ResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRemoveProgramProjectV3ResponseResult() *RemoveProgramProjectV3ResponseResult {
	this := RemoveProgramProjectV3ResponseResult{}
	return &this
}

// NewRemoveProgramProjectV3ResponseResultWithDefaults instantiates a new RemoveProgramProjectV3ResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRemoveProgramProjectV3ResponseResultWithDefaults() *RemoveProgramProjectV3ResponseResult {
	this := RemoveProgramProjectV3ResponseResult{}
	return &this
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *RemoveProgramProjectV3ResponseResult) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId) {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoveProgramProjectV3ResponseResult) GetProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *RemoveProgramProjectV3ResponseResult) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *RemoveProgramProjectV3ResponseResult) SetProjectId(v string) {
	o.ProjectId = &v
}

func (o RemoveProgramProjectV3ResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RemoveProgramProjectV3ResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProjectId) {
		toSerialize["projectId"] = o.ProjectId
	}
	return toSerialize, nil
}

type NullableRemoveProgramProjectV3ResponseResult struct {
	value *RemoveProgramProjectV3ResponseResult
	isSet bool
}

func (v NullableRemoveProgramProjectV3ResponseResult) Get() *RemoveProgramProjectV3ResponseResult {
	return v.value
}

func (v *NullableRemoveProgramProjectV3ResponseResult) Set(val *RemoveProgramProjectV3ResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableRemoveProgramProjectV3ResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableRemoveProgramProjectV3ResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRemoveProgramProjectV3ResponseResult(val *RemoveProgramProjectV3ResponseResult) *NullableRemoveProgramProjectV3ResponseResult {
	return &NullableRemoveProgramProjectV3ResponseResult{value: val, isSet: true}
}

func (v NullableRemoveProgramProjectV3ResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRemoveProgramProjectV3ResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


