/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RemoveProjectGroupMemberV3ResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RemoveProjectGroupMemberV3ResponseResult{}

// RemoveProjectGroupMemberV3ResponseResult struct for RemoveProjectGroupMemberV3ResponseResult
type RemoveProjectGroupMemberV3ResponseResult struct {
	// 项目分组 ID
	ProjecttagId *string `json:"projecttagId,omitempty"`
	// 项目分组成员类型，如 organizationMember, organizationTeam, organizationGroup
	SubjectType *string `json:"subjectType,omitempty"`
	// 项目分组成员类型对应的类型ID，当 subjectType 为 organizationMember，本字段值为企业成员对应的 userId; organizationTeam 对应的是 teamId，以此类推
	SubjectId *string `json:"subjectId,omitempty"`
}

// NewRemoveProjectGroupMemberV3ResponseResult instantiates a new RemoveProjectGroupMemberV3ResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRemoveProjectGroupMemberV3ResponseResult() *RemoveProjectGroupMemberV3ResponseResult {
	this := RemoveProjectGroupMemberV3ResponseResult{}
	return &this
}

// NewRemoveProjectGroupMemberV3ResponseResultWithDefaults instantiates a new RemoveProjectGroupMemberV3ResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRemoveProjectGroupMemberV3ResponseResultWithDefaults() *RemoveProjectGroupMemberV3ResponseResult {
	this := RemoveProjectGroupMemberV3ResponseResult{}
	return &this
}

// GetProjecttagId returns the ProjecttagId field value if set, zero value otherwise.
func (o *RemoveProjectGroupMemberV3ResponseResult) GetProjecttagId() string {
	if o == nil || IsNil(o.ProjecttagId) {
		var ret string
		return ret
	}
	return *o.ProjecttagId
}

// GetProjecttagIdOk returns a tuple with the ProjecttagId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoveProjectGroupMemberV3ResponseResult) GetProjecttagIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjecttagId) {
		return nil, false
	}
	return o.ProjecttagId, true
}

// HasProjecttagId returns a boolean if a field has been set.
func (o *RemoveProjectGroupMemberV3ResponseResult) HasProjecttagId() bool {
	if o != nil && !IsNil(o.ProjecttagId) {
		return true
	}

	return false
}

// SetProjecttagId gets a reference to the given string and assigns it to the ProjecttagId field.
func (o *RemoveProjectGroupMemberV3ResponseResult) SetProjecttagId(v string) {
	o.ProjecttagId = &v
}

// GetSubjectType returns the SubjectType field value if set, zero value otherwise.
func (o *RemoveProjectGroupMemberV3ResponseResult) GetSubjectType() string {
	if o == nil || IsNil(o.SubjectType) {
		var ret string
		return ret
	}
	return *o.SubjectType
}

// GetSubjectTypeOk returns a tuple with the SubjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoveProjectGroupMemberV3ResponseResult) GetSubjectTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SubjectType) {
		return nil, false
	}
	return o.SubjectType, true
}

// HasSubjectType returns a boolean if a field has been set.
func (o *RemoveProjectGroupMemberV3ResponseResult) HasSubjectType() bool {
	if o != nil && !IsNil(o.SubjectType) {
		return true
	}

	return false
}

// SetSubjectType gets a reference to the given string and assigns it to the SubjectType field.
func (o *RemoveProjectGroupMemberV3ResponseResult) SetSubjectType(v string) {
	o.SubjectType = &v
}

// GetSubjectId returns the SubjectId field value if set, zero value otherwise.
func (o *RemoveProjectGroupMemberV3ResponseResult) GetSubjectId() string {
	if o == nil || IsNil(o.SubjectId) {
		var ret string
		return ret
	}
	return *o.SubjectId
}

// GetSubjectIdOk returns a tuple with the SubjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoveProjectGroupMemberV3ResponseResult) GetSubjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubjectId) {
		return nil, false
	}
	return o.SubjectId, true
}

// HasSubjectId returns a boolean if a field has been set.
func (o *RemoveProjectGroupMemberV3ResponseResult) HasSubjectId() bool {
	if o != nil && !IsNil(o.SubjectId) {
		return true
	}

	return false
}

// SetSubjectId gets a reference to the given string and assigns it to the SubjectId field.
func (o *RemoveProjectGroupMemberV3ResponseResult) SetSubjectId(v string) {
	o.SubjectId = &v
}

func (o RemoveProjectGroupMemberV3ResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RemoveProjectGroupMemberV3ResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProjecttagId) {
		toSerialize["projecttagId"] = o.ProjecttagId
	}
	if !IsNil(o.SubjectType) {
		toSerialize["subjectType"] = o.SubjectType
	}
	if !IsNil(o.SubjectId) {
		toSerialize["subjectId"] = o.SubjectId
	}
	return toSerialize, nil
}

type NullableRemoveProjectGroupMemberV3ResponseResult struct {
	value *RemoveProjectGroupMemberV3ResponseResult
	isSet bool
}

func (v NullableRemoveProjectGroupMemberV3ResponseResult) Get() *RemoveProjectGroupMemberV3ResponseResult {
	return v.value
}

func (v *NullableRemoveProjectGroupMemberV3ResponseResult) Set(val *RemoveProjectGroupMemberV3ResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableRemoveProjectGroupMemberV3ResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableRemoveProjectGroupMemberV3ResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRemoveProjectGroupMemberV3ResponseResult(val *RemoveProjectGroupMemberV3ResponseResult) *NullableRemoveProjectGroupMemberV3ResponseResult {
	return &NullableRemoveProjectGroupMemberV3ResponseResult{value: val, isSet: true}
}

func (v NullableRemoveProjectGroupMemberV3ResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRemoveProjectGroupMemberV3ResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


