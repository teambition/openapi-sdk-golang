/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SearchFormRecordProcessNodesV3ResponseResultInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchFormRecordProcessNodesV3ResponseResultInner{}

// SearchFormRecordProcessNodesV3ResponseResultInner struct for SearchFormRecordProcessNodesV3ResponseResultInner
type SearchFormRecordProcessNodesV3ResponseResultInner struct {
	// 节点ID
	Id *string `json:"id,omitempty"`
	// 节点名称
	Name *string `json:"name,omitempty"`
	// 前置节点ID列表
	PrevIds []string `json:"prevIds,omitempty"`
	// 节点完成类型:  oneAssignee - 一人完成（或签） allAssignee - 所有人完成（会签） allAssigneeDoneAsOrder - 所有审批人按顺序完成（串签） 
	DoneType *string `json:"doneType,omitempty"`
	// 节点审批人列表
	AssigneeIds []string `json:"assigneeIds,omitempty"`
	// 节点当前状态 - ready 未开始 - begin 进行中 - finish 已结束 
	Status *string `json:"status,omitempty"`
	// 节点是否自动完成
	IsAutoFinish *bool `json:"isAutoFinish,omitempty"`
	// 节点操作相关权限
	Permissions []SearchFormRecordProcessNodesV3ResponseResultInnerPermissionsInner `json:"permissions,omitempty"`
	// 节点审批人设置规则
	AssigneeRules []SearchFormRecordProcessNodesV3ResponseResultInnerAssigneeRulesInner `json:"assigneeRules,omitempty"`
	// 节点类型 - start 开始节点 - end 结束节点 - userTask 审批节点 - exclusiveGateway 排他条件节点 - parallelGateway 并行条件节点 - inclusiveGateway 包容条件节点 
	Type *string `json:"type,omitempty"`
	// 表单ID
	TaskId *string `json:"taskId,omitempty"`
	// 开始时间
	Started *string `json:"started,omitempty"`
	// 结束时间
	Accomplished *string `json:"accomplished,omitempty"`
	DoneOpinions []SearchFormRecordProcessNodesV3ResponseResultInnerDoneOpinionsInner `json:"doneOpinions,omitempty"`
}

// NewSearchFormRecordProcessNodesV3ResponseResultInner instantiates a new SearchFormRecordProcessNodesV3ResponseResultInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchFormRecordProcessNodesV3ResponseResultInner() *SearchFormRecordProcessNodesV3ResponseResultInner {
	this := SearchFormRecordProcessNodesV3ResponseResultInner{}
	return &this
}

// NewSearchFormRecordProcessNodesV3ResponseResultInnerWithDefaults instantiates a new SearchFormRecordProcessNodesV3ResponseResultInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchFormRecordProcessNodesV3ResponseResultInnerWithDefaults() *SearchFormRecordProcessNodesV3ResponseResultInner {
	this := SearchFormRecordProcessNodesV3ResponseResultInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) SetName(v string) {
	o.Name = &v
}

// GetPrevIds returns the PrevIds field value if set, zero value otherwise.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) GetPrevIds() []string {
	if o == nil || IsNil(o.PrevIds) {
		var ret []string
		return ret
	}
	return o.PrevIds
}

// GetPrevIdsOk returns a tuple with the PrevIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) GetPrevIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.PrevIds) {
		return nil, false
	}
	return o.PrevIds, true
}

// HasPrevIds returns a boolean if a field has been set.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) HasPrevIds() bool {
	if o != nil && !IsNil(o.PrevIds) {
		return true
	}

	return false
}

// SetPrevIds gets a reference to the given []string and assigns it to the PrevIds field.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) SetPrevIds(v []string) {
	o.PrevIds = v
}

// GetDoneType returns the DoneType field value if set, zero value otherwise.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) GetDoneType() string {
	if o == nil || IsNil(o.DoneType) {
		var ret string
		return ret
	}
	return *o.DoneType
}

// GetDoneTypeOk returns a tuple with the DoneType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) GetDoneTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DoneType) {
		return nil, false
	}
	return o.DoneType, true
}

// HasDoneType returns a boolean if a field has been set.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) HasDoneType() bool {
	if o != nil && !IsNil(o.DoneType) {
		return true
	}

	return false
}

// SetDoneType gets a reference to the given string and assigns it to the DoneType field.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) SetDoneType(v string) {
	o.DoneType = &v
}

// GetAssigneeIds returns the AssigneeIds field value if set, zero value otherwise.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) GetAssigneeIds() []string {
	if o == nil || IsNil(o.AssigneeIds) {
		var ret []string
		return ret
	}
	return o.AssigneeIds
}

// GetAssigneeIdsOk returns a tuple with the AssigneeIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) GetAssigneeIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.AssigneeIds) {
		return nil, false
	}
	return o.AssigneeIds, true
}

// HasAssigneeIds returns a boolean if a field has been set.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) HasAssigneeIds() bool {
	if o != nil && !IsNil(o.AssigneeIds) {
		return true
	}

	return false
}

// SetAssigneeIds gets a reference to the given []string and assigns it to the AssigneeIds field.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) SetAssigneeIds(v []string) {
	o.AssigneeIds = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) SetStatus(v string) {
	o.Status = &v
}

// GetIsAutoFinish returns the IsAutoFinish field value if set, zero value otherwise.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) GetIsAutoFinish() bool {
	if o == nil || IsNil(o.IsAutoFinish) {
		var ret bool
		return ret
	}
	return *o.IsAutoFinish
}

// GetIsAutoFinishOk returns a tuple with the IsAutoFinish field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) GetIsAutoFinishOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAutoFinish) {
		return nil, false
	}
	return o.IsAutoFinish, true
}

// HasIsAutoFinish returns a boolean if a field has been set.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) HasIsAutoFinish() bool {
	if o != nil && !IsNil(o.IsAutoFinish) {
		return true
	}

	return false
}

// SetIsAutoFinish gets a reference to the given bool and assigns it to the IsAutoFinish field.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) SetIsAutoFinish(v bool) {
	o.IsAutoFinish = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) GetPermissions() []SearchFormRecordProcessNodesV3ResponseResultInnerPermissionsInner {
	if o == nil || IsNil(o.Permissions) {
		var ret []SearchFormRecordProcessNodesV3ResponseResultInnerPermissionsInner
		return ret
	}
	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) GetPermissionsOk() ([]SearchFormRecordProcessNodesV3ResponseResultInnerPermissionsInner, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) HasPermissions() bool {
	if o != nil && !IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []SearchFormRecordProcessNodesV3ResponseResultInnerPermissionsInner and assigns it to the Permissions field.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) SetPermissions(v []SearchFormRecordProcessNodesV3ResponseResultInnerPermissionsInner) {
	o.Permissions = v
}

// GetAssigneeRules returns the AssigneeRules field value if set, zero value otherwise.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) GetAssigneeRules() []SearchFormRecordProcessNodesV3ResponseResultInnerAssigneeRulesInner {
	if o == nil || IsNil(o.AssigneeRules) {
		var ret []SearchFormRecordProcessNodesV3ResponseResultInnerAssigneeRulesInner
		return ret
	}
	return o.AssigneeRules
}

// GetAssigneeRulesOk returns a tuple with the AssigneeRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) GetAssigneeRulesOk() ([]SearchFormRecordProcessNodesV3ResponseResultInnerAssigneeRulesInner, bool) {
	if o == nil || IsNil(o.AssigneeRules) {
		return nil, false
	}
	return o.AssigneeRules, true
}

// HasAssigneeRules returns a boolean if a field has been set.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) HasAssigneeRules() bool {
	if o != nil && !IsNil(o.AssigneeRules) {
		return true
	}

	return false
}

// SetAssigneeRules gets a reference to the given []SearchFormRecordProcessNodesV3ResponseResultInnerAssigneeRulesInner and assigns it to the AssigneeRules field.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) SetAssigneeRules(v []SearchFormRecordProcessNodesV3ResponseResultInnerAssigneeRulesInner) {
	o.AssigneeRules = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) SetType(v string) {
	o.Type = &v
}

// GetTaskId returns the TaskId field value if set, zero value otherwise.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) GetTaskId() string {
	if o == nil || IsNil(o.TaskId) {
		var ret string
		return ret
	}
	return *o.TaskId
}

// GetTaskIdOk returns a tuple with the TaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) GetTaskIdOk() (*string, bool) {
	if o == nil || IsNil(o.TaskId) {
		return nil, false
	}
	return o.TaskId, true
}

// HasTaskId returns a boolean if a field has been set.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) HasTaskId() bool {
	if o != nil && !IsNil(o.TaskId) {
		return true
	}

	return false
}

// SetTaskId gets a reference to the given string and assigns it to the TaskId field.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) SetTaskId(v string) {
	o.TaskId = &v
}

// GetStarted returns the Started field value if set, zero value otherwise.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) GetStarted() string {
	if o == nil || IsNil(o.Started) {
		var ret string
		return ret
	}
	return *o.Started
}

// GetStartedOk returns a tuple with the Started field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) GetStartedOk() (*string, bool) {
	if o == nil || IsNil(o.Started) {
		return nil, false
	}
	return o.Started, true
}

// HasStarted returns a boolean if a field has been set.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) HasStarted() bool {
	if o != nil && !IsNil(o.Started) {
		return true
	}

	return false
}

// SetStarted gets a reference to the given string and assigns it to the Started field.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) SetStarted(v string) {
	o.Started = &v
}

// GetAccomplished returns the Accomplished field value if set, zero value otherwise.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) GetAccomplished() string {
	if o == nil || IsNil(o.Accomplished) {
		var ret string
		return ret
	}
	return *o.Accomplished
}

// GetAccomplishedOk returns a tuple with the Accomplished field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) GetAccomplishedOk() (*string, bool) {
	if o == nil || IsNil(o.Accomplished) {
		return nil, false
	}
	return o.Accomplished, true
}

// HasAccomplished returns a boolean if a field has been set.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) HasAccomplished() bool {
	if o != nil && !IsNil(o.Accomplished) {
		return true
	}

	return false
}

// SetAccomplished gets a reference to the given string and assigns it to the Accomplished field.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) SetAccomplished(v string) {
	o.Accomplished = &v
}

// GetDoneOpinions returns the DoneOpinions field value if set, zero value otherwise.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) GetDoneOpinions() []SearchFormRecordProcessNodesV3ResponseResultInnerDoneOpinionsInner {
	if o == nil || IsNil(o.DoneOpinions) {
		var ret []SearchFormRecordProcessNodesV3ResponseResultInnerDoneOpinionsInner
		return ret
	}
	return o.DoneOpinions
}

// GetDoneOpinionsOk returns a tuple with the DoneOpinions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) GetDoneOpinionsOk() ([]SearchFormRecordProcessNodesV3ResponseResultInnerDoneOpinionsInner, bool) {
	if o == nil || IsNil(o.DoneOpinions) {
		return nil, false
	}
	return o.DoneOpinions, true
}

// HasDoneOpinions returns a boolean if a field has been set.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) HasDoneOpinions() bool {
	if o != nil && !IsNil(o.DoneOpinions) {
		return true
	}

	return false
}

// SetDoneOpinions gets a reference to the given []SearchFormRecordProcessNodesV3ResponseResultInnerDoneOpinionsInner and assigns it to the DoneOpinions field.
func (o *SearchFormRecordProcessNodesV3ResponseResultInner) SetDoneOpinions(v []SearchFormRecordProcessNodesV3ResponseResultInnerDoneOpinionsInner) {
	o.DoneOpinions = v
}

func (o SearchFormRecordProcessNodesV3ResponseResultInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchFormRecordProcessNodesV3ResponseResultInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.PrevIds) {
		toSerialize["prevIds"] = o.PrevIds
	}
	if !IsNil(o.DoneType) {
		toSerialize["doneType"] = o.DoneType
	}
	if !IsNil(o.AssigneeIds) {
		toSerialize["assigneeIds"] = o.AssigneeIds
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.IsAutoFinish) {
		toSerialize["isAutoFinish"] = o.IsAutoFinish
	}
	if !IsNil(o.Permissions) {
		toSerialize["permissions"] = o.Permissions
	}
	if !IsNil(o.AssigneeRules) {
		toSerialize["assigneeRules"] = o.AssigneeRules
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.TaskId) {
		toSerialize["taskId"] = o.TaskId
	}
	if !IsNil(o.Started) {
		toSerialize["started"] = o.Started
	}
	if !IsNil(o.Accomplished) {
		toSerialize["accomplished"] = o.Accomplished
	}
	if !IsNil(o.DoneOpinions) {
		toSerialize["doneOpinions"] = o.DoneOpinions
	}
	return toSerialize, nil
}

type NullableSearchFormRecordProcessNodesV3ResponseResultInner struct {
	value *SearchFormRecordProcessNodesV3ResponseResultInner
	isSet bool
}

func (v NullableSearchFormRecordProcessNodesV3ResponseResultInner) Get() *SearchFormRecordProcessNodesV3ResponseResultInner {
	return v.value
}

func (v *NullableSearchFormRecordProcessNodesV3ResponseResultInner) Set(val *SearchFormRecordProcessNodesV3ResponseResultInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchFormRecordProcessNodesV3ResponseResultInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchFormRecordProcessNodesV3ResponseResultInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchFormRecordProcessNodesV3ResponseResultInner(val *SearchFormRecordProcessNodesV3ResponseResultInner) *NullableSearchFormRecordProcessNodesV3ResponseResultInner {
	return &NullableSearchFormRecordProcessNodesV3ResponseResultInner{value: val, isSet: true}
}

func (v NullableSearchFormRecordProcessNodesV3ResponseResultInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchFormRecordProcessNodesV3ResponseResultInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


