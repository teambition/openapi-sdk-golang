/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SearchUserTasksV3ResponseResultInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchUserTasksV3ResponseResultInner{}

// SearchUserTasksV3ResponseResultInner 任务详情
type SearchUserTasksV3ResponseResultInner struct {
	// 任务ID
	Id *string `json:"id,omitempty"`
	// 任务ID
	TaskId *string `json:"taskId,omitempty"`
	// 任务标题
	Content *string `json:"content,omitempty"`
	// 任务备注
	Note *string `json:"note,omitempty"`
	// 项目ID
	ProjectId *string `json:"projectId,omitempty"`
	// 祖先任务ID列表
	AncestorIds []string `json:"ancestorIds,omitempty"`
	// 父任务ID
	ParentTaskId *string `json:"parentTaskId,omitempty"`
	// 任务状态ID
	TfsId *string `json:"tfsId,omitempty"`
	// 任务分组ID
	TasklistId *string `json:"tasklistId,omitempty"`
	// 任务列ID
	StageId *string `json:"stageId,omitempty"`
	// 标签ID集合
	TagIds []string `json:"tagIds,omitempty"`
	// 创建人ID
	CreatorId *string `json:"creatorId,omitempty"`
	// 执行人ID
	ExecutorId *string `json:"executorId,omitempty"`
	// 参与者ID集合
	InvolveMembers []string `json:"involveMembers,omitempty"`
	// 任务优先级
	Priority *int32 `json:"priority,omitempty"`
	// StoryPoint
	StoryPoint *string `json:"storyPoint,omitempty"`
	// 重复规则列表
	Recurrence []string `json:"recurrence,omitempty"`
	// 是否任务已完成
	IsDone *bool `json:"isDone,omitempty"`
	// 是否任务放入回收站
	IsArchived *bool `json:"isArchived,omitempty"`
	// 任务隐私性，'involves'表达仅参与者可见; 'members'表达项目成员可见
	Visible *string `json:"visible,omitempty"`
	// 任务数字ID
	UniqueId *string `json:"uniqueId,omitempty"`
	// 任务开始时间(UTC)
	StartDate *string `json:"startDate,omitempty"`
	// 任务截止时间(UTC)
	DueDate *string `json:"dueDate,omitempty"`
	// 任务完成时间(UTC)
	AccomplishTime *string `json:"accomplishTime,omitempty"`
	// 创建时间(UTC)
	Created *string `json:"created,omitempty"`
	// 更新时间(UTC)
	Updated *string `json:"updated,omitempty"`
	// 任务类型ID
	SfcId *string `json:"sfcId,omitempty"`
	// 迭代ID
	SprintId *string `json:"sprintId,omitempty"`
	// 自定义字段值集合
	Customfields []SearchUserTasksV3ResponseResultInnerCustomfieldsInner `json:"customfields,omitempty"`
}

// NewSearchUserTasksV3ResponseResultInner instantiates a new SearchUserTasksV3ResponseResultInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchUserTasksV3ResponseResultInner() *SearchUserTasksV3ResponseResultInner {
	this := SearchUserTasksV3ResponseResultInner{}
	return &this
}

// NewSearchUserTasksV3ResponseResultInnerWithDefaults instantiates a new SearchUserTasksV3ResponseResultInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchUserTasksV3ResponseResultInnerWithDefaults() *SearchUserTasksV3ResponseResultInner {
	this := SearchUserTasksV3ResponseResultInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SearchUserTasksV3ResponseResultInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchUserTasksV3ResponseResultInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SearchUserTasksV3ResponseResultInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SearchUserTasksV3ResponseResultInner) SetId(v string) {
	o.Id = &v
}

// GetTaskId returns the TaskId field value if set, zero value otherwise.
func (o *SearchUserTasksV3ResponseResultInner) GetTaskId() string {
	if o == nil || IsNil(o.TaskId) {
		var ret string
		return ret
	}
	return *o.TaskId
}

// GetTaskIdOk returns a tuple with the TaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchUserTasksV3ResponseResultInner) GetTaskIdOk() (*string, bool) {
	if o == nil || IsNil(o.TaskId) {
		return nil, false
	}
	return o.TaskId, true
}

// HasTaskId returns a boolean if a field has been set.
func (o *SearchUserTasksV3ResponseResultInner) HasTaskId() bool {
	if o != nil && !IsNil(o.TaskId) {
		return true
	}

	return false
}

// SetTaskId gets a reference to the given string and assigns it to the TaskId field.
func (o *SearchUserTasksV3ResponseResultInner) SetTaskId(v string) {
	o.TaskId = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *SearchUserTasksV3ResponseResultInner) GetContent() string {
	if o == nil || IsNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchUserTasksV3ResponseResultInner) GetContentOk() (*string, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *SearchUserTasksV3ResponseResultInner) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *SearchUserTasksV3ResponseResultInner) SetContent(v string) {
	o.Content = &v
}

// GetNote returns the Note field value if set, zero value otherwise.
func (o *SearchUserTasksV3ResponseResultInner) GetNote() string {
	if o == nil || IsNil(o.Note) {
		var ret string
		return ret
	}
	return *o.Note
}

// GetNoteOk returns a tuple with the Note field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchUserTasksV3ResponseResultInner) GetNoteOk() (*string, bool) {
	if o == nil || IsNil(o.Note) {
		return nil, false
	}
	return o.Note, true
}

// HasNote returns a boolean if a field has been set.
func (o *SearchUserTasksV3ResponseResultInner) HasNote() bool {
	if o != nil && !IsNil(o.Note) {
		return true
	}

	return false
}

// SetNote gets a reference to the given string and assigns it to the Note field.
func (o *SearchUserTasksV3ResponseResultInner) SetNote(v string) {
	o.Note = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *SearchUserTasksV3ResponseResultInner) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId) {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchUserTasksV3ResponseResultInner) GetProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *SearchUserTasksV3ResponseResultInner) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *SearchUserTasksV3ResponseResultInner) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetAncestorIds returns the AncestorIds field value if set, zero value otherwise.
func (o *SearchUserTasksV3ResponseResultInner) GetAncestorIds() []string {
	if o == nil || IsNil(o.AncestorIds) {
		var ret []string
		return ret
	}
	return o.AncestorIds
}

// GetAncestorIdsOk returns a tuple with the AncestorIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchUserTasksV3ResponseResultInner) GetAncestorIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.AncestorIds) {
		return nil, false
	}
	return o.AncestorIds, true
}

// HasAncestorIds returns a boolean if a field has been set.
func (o *SearchUserTasksV3ResponseResultInner) HasAncestorIds() bool {
	if o != nil && !IsNil(o.AncestorIds) {
		return true
	}

	return false
}

// SetAncestorIds gets a reference to the given []string and assigns it to the AncestorIds field.
func (o *SearchUserTasksV3ResponseResultInner) SetAncestorIds(v []string) {
	o.AncestorIds = v
}

// GetParentTaskId returns the ParentTaskId field value if set, zero value otherwise.
func (o *SearchUserTasksV3ResponseResultInner) GetParentTaskId() string {
	if o == nil || IsNil(o.ParentTaskId) {
		var ret string
		return ret
	}
	return *o.ParentTaskId
}

// GetParentTaskIdOk returns a tuple with the ParentTaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchUserTasksV3ResponseResultInner) GetParentTaskIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentTaskId) {
		return nil, false
	}
	return o.ParentTaskId, true
}

// HasParentTaskId returns a boolean if a field has been set.
func (o *SearchUserTasksV3ResponseResultInner) HasParentTaskId() bool {
	if o != nil && !IsNil(o.ParentTaskId) {
		return true
	}

	return false
}

// SetParentTaskId gets a reference to the given string and assigns it to the ParentTaskId field.
func (o *SearchUserTasksV3ResponseResultInner) SetParentTaskId(v string) {
	o.ParentTaskId = &v
}

// GetTfsId returns the TfsId field value if set, zero value otherwise.
func (o *SearchUserTasksV3ResponseResultInner) GetTfsId() string {
	if o == nil || IsNil(o.TfsId) {
		var ret string
		return ret
	}
	return *o.TfsId
}

// GetTfsIdOk returns a tuple with the TfsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchUserTasksV3ResponseResultInner) GetTfsIdOk() (*string, bool) {
	if o == nil || IsNil(o.TfsId) {
		return nil, false
	}
	return o.TfsId, true
}

// HasTfsId returns a boolean if a field has been set.
func (o *SearchUserTasksV3ResponseResultInner) HasTfsId() bool {
	if o != nil && !IsNil(o.TfsId) {
		return true
	}

	return false
}

// SetTfsId gets a reference to the given string and assigns it to the TfsId field.
func (o *SearchUserTasksV3ResponseResultInner) SetTfsId(v string) {
	o.TfsId = &v
}

// GetTasklistId returns the TasklistId field value if set, zero value otherwise.
func (o *SearchUserTasksV3ResponseResultInner) GetTasklistId() string {
	if o == nil || IsNil(o.TasklistId) {
		var ret string
		return ret
	}
	return *o.TasklistId
}

// GetTasklistIdOk returns a tuple with the TasklistId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchUserTasksV3ResponseResultInner) GetTasklistIdOk() (*string, bool) {
	if o == nil || IsNil(o.TasklistId) {
		return nil, false
	}
	return o.TasklistId, true
}

// HasTasklistId returns a boolean if a field has been set.
func (o *SearchUserTasksV3ResponseResultInner) HasTasklistId() bool {
	if o != nil && !IsNil(o.TasklistId) {
		return true
	}

	return false
}

// SetTasklistId gets a reference to the given string and assigns it to the TasklistId field.
func (o *SearchUserTasksV3ResponseResultInner) SetTasklistId(v string) {
	o.TasklistId = &v
}

// GetStageId returns the StageId field value if set, zero value otherwise.
func (o *SearchUserTasksV3ResponseResultInner) GetStageId() string {
	if o == nil || IsNil(o.StageId) {
		var ret string
		return ret
	}
	return *o.StageId
}

// GetStageIdOk returns a tuple with the StageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchUserTasksV3ResponseResultInner) GetStageIdOk() (*string, bool) {
	if o == nil || IsNil(o.StageId) {
		return nil, false
	}
	return o.StageId, true
}

// HasStageId returns a boolean if a field has been set.
func (o *SearchUserTasksV3ResponseResultInner) HasStageId() bool {
	if o != nil && !IsNil(o.StageId) {
		return true
	}

	return false
}

// SetStageId gets a reference to the given string and assigns it to the StageId field.
func (o *SearchUserTasksV3ResponseResultInner) SetStageId(v string) {
	o.StageId = &v
}

// GetTagIds returns the TagIds field value if set, zero value otherwise.
func (o *SearchUserTasksV3ResponseResultInner) GetTagIds() []string {
	if o == nil || IsNil(o.TagIds) {
		var ret []string
		return ret
	}
	return o.TagIds
}

// GetTagIdsOk returns a tuple with the TagIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchUserTasksV3ResponseResultInner) GetTagIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.TagIds) {
		return nil, false
	}
	return o.TagIds, true
}

// HasTagIds returns a boolean if a field has been set.
func (o *SearchUserTasksV3ResponseResultInner) HasTagIds() bool {
	if o != nil && !IsNil(o.TagIds) {
		return true
	}

	return false
}

// SetTagIds gets a reference to the given []string and assigns it to the TagIds field.
func (o *SearchUserTasksV3ResponseResultInner) SetTagIds(v []string) {
	o.TagIds = v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise.
func (o *SearchUserTasksV3ResponseResultInner) GetCreatorId() string {
	if o == nil || IsNil(o.CreatorId) {
		var ret string
		return ret
	}
	return *o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchUserTasksV3ResponseResultInner) GetCreatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorId) {
		return nil, false
	}
	return o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *SearchUserTasksV3ResponseResultInner) HasCreatorId() bool {
	if o != nil && !IsNil(o.CreatorId) {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given string and assigns it to the CreatorId field.
func (o *SearchUserTasksV3ResponseResultInner) SetCreatorId(v string) {
	o.CreatorId = &v
}

// GetExecutorId returns the ExecutorId field value if set, zero value otherwise.
func (o *SearchUserTasksV3ResponseResultInner) GetExecutorId() string {
	if o == nil || IsNil(o.ExecutorId) {
		var ret string
		return ret
	}
	return *o.ExecutorId
}

// GetExecutorIdOk returns a tuple with the ExecutorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchUserTasksV3ResponseResultInner) GetExecutorIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExecutorId) {
		return nil, false
	}
	return o.ExecutorId, true
}

// HasExecutorId returns a boolean if a field has been set.
func (o *SearchUserTasksV3ResponseResultInner) HasExecutorId() bool {
	if o != nil && !IsNil(o.ExecutorId) {
		return true
	}

	return false
}

// SetExecutorId gets a reference to the given string and assigns it to the ExecutorId field.
func (o *SearchUserTasksV3ResponseResultInner) SetExecutorId(v string) {
	o.ExecutorId = &v
}

// GetInvolveMembers returns the InvolveMembers field value if set, zero value otherwise.
func (o *SearchUserTasksV3ResponseResultInner) GetInvolveMembers() []string {
	if o == nil || IsNil(o.InvolveMembers) {
		var ret []string
		return ret
	}
	return o.InvolveMembers
}

// GetInvolveMembersOk returns a tuple with the InvolveMembers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchUserTasksV3ResponseResultInner) GetInvolveMembersOk() ([]string, bool) {
	if o == nil || IsNil(o.InvolveMembers) {
		return nil, false
	}
	return o.InvolveMembers, true
}

// HasInvolveMembers returns a boolean if a field has been set.
func (o *SearchUserTasksV3ResponseResultInner) HasInvolveMembers() bool {
	if o != nil && !IsNil(o.InvolveMembers) {
		return true
	}

	return false
}

// SetInvolveMembers gets a reference to the given []string and assigns it to the InvolveMembers field.
func (o *SearchUserTasksV3ResponseResultInner) SetInvolveMembers(v []string) {
	o.InvolveMembers = v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *SearchUserTasksV3ResponseResultInner) GetPriority() int32 {
	if o == nil || IsNil(o.Priority) {
		var ret int32
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchUserTasksV3ResponseResultInner) GetPriorityOk() (*int32, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *SearchUserTasksV3ResponseResultInner) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given int32 and assigns it to the Priority field.
func (o *SearchUserTasksV3ResponseResultInner) SetPriority(v int32) {
	o.Priority = &v
}

// GetStoryPoint returns the StoryPoint field value if set, zero value otherwise.
func (o *SearchUserTasksV3ResponseResultInner) GetStoryPoint() string {
	if o == nil || IsNil(o.StoryPoint) {
		var ret string
		return ret
	}
	return *o.StoryPoint
}

// GetStoryPointOk returns a tuple with the StoryPoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchUserTasksV3ResponseResultInner) GetStoryPointOk() (*string, bool) {
	if o == nil || IsNil(o.StoryPoint) {
		return nil, false
	}
	return o.StoryPoint, true
}

// HasStoryPoint returns a boolean if a field has been set.
func (o *SearchUserTasksV3ResponseResultInner) HasStoryPoint() bool {
	if o != nil && !IsNil(o.StoryPoint) {
		return true
	}

	return false
}

// SetStoryPoint gets a reference to the given string and assigns it to the StoryPoint field.
func (o *SearchUserTasksV3ResponseResultInner) SetStoryPoint(v string) {
	o.StoryPoint = &v
}

// GetRecurrence returns the Recurrence field value if set, zero value otherwise.
func (o *SearchUserTasksV3ResponseResultInner) GetRecurrence() []string {
	if o == nil || IsNil(o.Recurrence) {
		var ret []string
		return ret
	}
	return o.Recurrence
}

// GetRecurrenceOk returns a tuple with the Recurrence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchUserTasksV3ResponseResultInner) GetRecurrenceOk() ([]string, bool) {
	if o == nil || IsNil(o.Recurrence) {
		return nil, false
	}
	return o.Recurrence, true
}

// HasRecurrence returns a boolean if a field has been set.
func (o *SearchUserTasksV3ResponseResultInner) HasRecurrence() bool {
	if o != nil && !IsNil(o.Recurrence) {
		return true
	}

	return false
}

// SetRecurrence gets a reference to the given []string and assigns it to the Recurrence field.
func (o *SearchUserTasksV3ResponseResultInner) SetRecurrence(v []string) {
	o.Recurrence = v
}

// GetIsDone returns the IsDone field value if set, zero value otherwise.
func (o *SearchUserTasksV3ResponseResultInner) GetIsDone() bool {
	if o == nil || IsNil(o.IsDone) {
		var ret bool
		return ret
	}
	return *o.IsDone
}

// GetIsDoneOk returns a tuple with the IsDone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchUserTasksV3ResponseResultInner) GetIsDoneOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDone) {
		return nil, false
	}
	return o.IsDone, true
}

// HasIsDone returns a boolean if a field has been set.
func (o *SearchUserTasksV3ResponseResultInner) HasIsDone() bool {
	if o != nil && !IsNil(o.IsDone) {
		return true
	}

	return false
}

// SetIsDone gets a reference to the given bool and assigns it to the IsDone field.
func (o *SearchUserTasksV3ResponseResultInner) SetIsDone(v bool) {
	o.IsDone = &v
}

// GetIsArchived returns the IsArchived field value if set, zero value otherwise.
func (o *SearchUserTasksV3ResponseResultInner) GetIsArchived() bool {
	if o == nil || IsNil(o.IsArchived) {
		var ret bool
		return ret
	}
	return *o.IsArchived
}

// GetIsArchivedOk returns a tuple with the IsArchived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchUserTasksV3ResponseResultInner) GetIsArchivedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsArchived) {
		return nil, false
	}
	return o.IsArchived, true
}

// HasIsArchived returns a boolean if a field has been set.
func (o *SearchUserTasksV3ResponseResultInner) HasIsArchived() bool {
	if o != nil && !IsNil(o.IsArchived) {
		return true
	}

	return false
}

// SetIsArchived gets a reference to the given bool and assigns it to the IsArchived field.
func (o *SearchUserTasksV3ResponseResultInner) SetIsArchived(v bool) {
	o.IsArchived = &v
}

// GetVisible returns the Visible field value if set, zero value otherwise.
func (o *SearchUserTasksV3ResponseResultInner) GetVisible() string {
	if o == nil || IsNil(o.Visible) {
		var ret string
		return ret
	}
	return *o.Visible
}

// GetVisibleOk returns a tuple with the Visible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchUserTasksV3ResponseResultInner) GetVisibleOk() (*string, bool) {
	if o == nil || IsNil(o.Visible) {
		return nil, false
	}
	return o.Visible, true
}

// HasVisible returns a boolean if a field has been set.
func (o *SearchUserTasksV3ResponseResultInner) HasVisible() bool {
	if o != nil && !IsNil(o.Visible) {
		return true
	}

	return false
}

// SetVisible gets a reference to the given string and assigns it to the Visible field.
func (o *SearchUserTasksV3ResponseResultInner) SetVisible(v string) {
	o.Visible = &v
}

// GetUniqueId returns the UniqueId field value if set, zero value otherwise.
func (o *SearchUserTasksV3ResponseResultInner) GetUniqueId() string {
	if o == nil || IsNil(o.UniqueId) {
		var ret string
		return ret
	}
	return *o.UniqueId
}

// GetUniqueIdOk returns a tuple with the UniqueId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchUserTasksV3ResponseResultInner) GetUniqueIdOk() (*string, bool) {
	if o == nil || IsNil(o.UniqueId) {
		return nil, false
	}
	return o.UniqueId, true
}

// HasUniqueId returns a boolean if a field has been set.
func (o *SearchUserTasksV3ResponseResultInner) HasUniqueId() bool {
	if o != nil && !IsNil(o.UniqueId) {
		return true
	}

	return false
}

// SetUniqueId gets a reference to the given string and assigns it to the UniqueId field.
func (o *SearchUserTasksV3ResponseResultInner) SetUniqueId(v string) {
	o.UniqueId = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *SearchUserTasksV3ResponseResultInner) GetStartDate() string {
	if o == nil || IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchUserTasksV3ResponseResultInner) GetStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *SearchUserTasksV3ResponseResultInner) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *SearchUserTasksV3ResponseResultInner) SetStartDate(v string) {
	o.StartDate = &v
}

// GetDueDate returns the DueDate field value if set, zero value otherwise.
func (o *SearchUserTasksV3ResponseResultInner) GetDueDate() string {
	if o == nil || IsNil(o.DueDate) {
		var ret string
		return ret
	}
	return *o.DueDate
}

// GetDueDateOk returns a tuple with the DueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchUserTasksV3ResponseResultInner) GetDueDateOk() (*string, bool) {
	if o == nil || IsNil(o.DueDate) {
		return nil, false
	}
	return o.DueDate, true
}

// HasDueDate returns a boolean if a field has been set.
func (o *SearchUserTasksV3ResponseResultInner) HasDueDate() bool {
	if o != nil && !IsNil(o.DueDate) {
		return true
	}

	return false
}

// SetDueDate gets a reference to the given string and assigns it to the DueDate field.
func (o *SearchUserTasksV3ResponseResultInner) SetDueDate(v string) {
	o.DueDate = &v
}

// GetAccomplishTime returns the AccomplishTime field value if set, zero value otherwise.
func (o *SearchUserTasksV3ResponseResultInner) GetAccomplishTime() string {
	if o == nil || IsNil(o.AccomplishTime) {
		var ret string
		return ret
	}
	return *o.AccomplishTime
}

// GetAccomplishTimeOk returns a tuple with the AccomplishTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchUserTasksV3ResponseResultInner) GetAccomplishTimeOk() (*string, bool) {
	if o == nil || IsNil(o.AccomplishTime) {
		return nil, false
	}
	return o.AccomplishTime, true
}

// HasAccomplishTime returns a boolean if a field has been set.
func (o *SearchUserTasksV3ResponseResultInner) HasAccomplishTime() bool {
	if o != nil && !IsNil(o.AccomplishTime) {
		return true
	}

	return false
}

// SetAccomplishTime gets a reference to the given string and assigns it to the AccomplishTime field.
func (o *SearchUserTasksV3ResponseResultInner) SetAccomplishTime(v string) {
	o.AccomplishTime = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *SearchUserTasksV3ResponseResultInner) GetCreated() string {
	if o == nil || IsNil(o.Created) {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchUserTasksV3ResponseResultInner) GetCreatedOk() (*string, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *SearchUserTasksV3ResponseResultInner) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *SearchUserTasksV3ResponseResultInner) SetCreated(v string) {
	o.Created = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *SearchUserTasksV3ResponseResultInner) GetUpdated() string {
	if o == nil || IsNil(o.Updated) {
		var ret string
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchUserTasksV3ResponseResultInner) GetUpdatedOk() (*string, bool) {
	if o == nil || IsNil(o.Updated) {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *SearchUserTasksV3ResponseResultInner) HasUpdated() bool {
	if o != nil && !IsNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given string and assigns it to the Updated field.
func (o *SearchUserTasksV3ResponseResultInner) SetUpdated(v string) {
	o.Updated = &v
}

// GetSfcId returns the SfcId field value if set, zero value otherwise.
func (o *SearchUserTasksV3ResponseResultInner) GetSfcId() string {
	if o == nil || IsNil(o.SfcId) {
		var ret string
		return ret
	}
	return *o.SfcId
}

// GetSfcIdOk returns a tuple with the SfcId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchUserTasksV3ResponseResultInner) GetSfcIdOk() (*string, bool) {
	if o == nil || IsNil(o.SfcId) {
		return nil, false
	}
	return o.SfcId, true
}

// HasSfcId returns a boolean if a field has been set.
func (o *SearchUserTasksV3ResponseResultInner) HasSfcId() bool {
	if o != nil && !IsNil(o.SfcId) {
		return true
	}

	return false
}

// SetSfcId gets a reference to the given string and assigns it to the SfcId field.
func (o *SearchUserTasksV3ResponseResultInner) SetSfcId(v string) {
	o.SfcId = &v
}

// GetSprintId returns the SprintId field value if set, zero value otherwise.
func (o *SearchUserTasksV3ResponseResultInner) GetSprintId() string {
	if o == nil || IsNil(o.SprintId) {
		var ret string
		return ret
	}
	return *o.SprintId
}

// GetSprintIdOk returns a tuple with the SprintId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchUserTasksV3ResponseResultInner) GetSprintIdOk() (*string, bool) {
	if o == nil || IsNil(o.SprintId) {
		return nil, false
	}
	return o.SprintId, true
}

// HasSprintId returns a boolean if a field has been set.
func (o *SearchUserTasksV3ResponseResultInner) HasSprintId() bool {
	if o != nil && !IsNil(o.SprintId) {
		return true
	}

	return false
}

// SetSprintId gets a reference to the given string and assigns it to the SprintId field.
func (o *SearchUserTasksV3ResponseResultInner) SetSprintId(v string) {
	o.SprintId = &v
}

// GetCustomfields returns the Customfields field value if set, zero value otherwise.
func (o *SearchUserTasksV3ResponseResultInner) GetCustomfields() []SearchUserTasksV3ResponseResultInnerCustomfieldsInner {
	if o == nil || IsNil(o.Customfields) {
		var ret []SearchUserTasksV3ResponseResultInnerCustomfieldsInner
		return ret
	}
	return o.Customfields
}

// GetCustomfieldsOk returns a tuple with the Customfields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchUserTasksV3ResponseResultInner) GetCustomfieldsOk() ([]SearchUserTasksV3ResponseResultInnerCustomfieldsInner, bool) {
	if o == nil || IsNil(o.Customfields) {
		return nil, false
	}
	return o.Customfields, true
}

// HasCustomfields returns a boolean if a field has been set.
func (o *SearchUserTasksV3ResponseResultInner) HasCustomfields() bool {
	if o != nil && !IsNil(o.Customfields) {
		return true
	}

	return false
}

// SetCustomfields gets a reference to the given []SearchUserTasksV3ResponseResultInnerCustomfieldsInner and assigns it to the Customfields field.
func (o *SearchUserTasksV3ResponseResultInner) SetCustomfields(v []SearchUserTasksV3ResponseResultInnerCustomfieldsInner) {
	o.Customfields = v
}

func (o SearchUserTasksV3ResponseResultInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchUserTasksV3ResponseResultInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.TaskId) {
		toSerialize["taskId"] = o.TaskId
	}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !IsNil(o.Note) {
		toSerialize["note"] = o.Note
	}
	if !IsNil(o.ProjectId) {
		toSerialize["projectId"] = o.ProjectId
	}
	if !IsNil(o.AncestorIds) {
		toSerialize["ancestorIds"] = o.AncestorIds
	}
	if !IsNil(o.ParentTaskId) {
		toSerialize["parentTaskId"] = o.ParentTaskId
	}
	if !IsNil(o.TfsId) {
		toSerialize["tfsId"] = o.TfsId
	}
	if !IsNil(o.TasklistId) {
		toSerialize["tasklistId"] = o.TasklistId
	}
	if !IsNil(o.StageId) {
		toSerialize["stageId"] = o.StageId
	}
	if !IsNil(o.TagIds) {
		toSerialize["tagIds"] = o.TagIds
	}
	if !IsNil(o.CreatorId) {
		toSerialize["creatorId"] = o.CreatorId
	}
	if !IsNil(o.ExecutorId) {
		toSerialize["executorId"] = o.ExecutorId
	}
	if !IsNil(o.InvolveMembers) {
		toSerialize["involveMembers"] = o.InvolveMembers
	}
	if !IsNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}
	if !IsNil(o.StoryPoint) {
		toSerialize["storyPoint"] = o.StoryPoint
	}
	if !IsNil(o.Recurrence) {
		toSerialize["recurrence"] = o.Recurrence
	}
	if !IsNil(o.IsDone) {
		toSerialize["isDone"] = o.IsDone
	}
	if !IsNil(o.IsArchived) {
		toSerialize["isArchived"] = o.IsArchived
	}
	if !IsNil(o.Visible) {
		toSerialize["visible"] = o.Visible
	}
	if !IsNil(o.UniqueId) {
		toSerialize["uniqueId"] = o.UniqueId
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.DueDate) {
		toSerialize["dueDate"] = o.DueDate
	}
	if !IsNil(o.AccomplishTime) {
		toSerialize["accomplishTime"] = o.AccomplishTime
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.Updated) {
		toSerialize["updated"] = o.Updated
	}
	if !IsNil(o.SfcId) {
		toSerialize["sfcId"] = o.SfcId
	}
	if !IsNil(o.SprintId) {
		toSerialize["sprintId"] = o.SprintId
	}
	if !IsNil(o.Customfields) {
		toSerialize["customfields"] = o.Customfields
	}
	return toSerialize, nil
}

type NullableSearchUserTasksV3ResponseResultInner struct {
	value *SearchUserTasksV3ResponseResultInner
	isSet bool
}

func (v NullableSearchUserTasksV3ResponseResultInner) Get() *SearchUserTasksV3ResponseResultInner {
	return v.value
}

func (v *NullableSearchUserTasksV3ResponseResultInner) Set(val *SearchUserTasksV3ResponseResultInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchUserTasksV3ResponseResultInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchUserTasksV3ResponseResultInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchUserTasksV3ResponseResultInner(val *SearchUserTasksV3ResponseResultInner) *NullableSearchUserTasksV3ResponseResultInner {
	return &NullableSearchUserTasksV3ResponseResultInner{value: val, isSet: true}
}

func (v NullableSearchUserTasksV3ResponseResultInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchUserTasksV3ResponseResultInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


