/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the StarProjectResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StarProjectResponseResult{}

// StarProjectResponseResult 创建用户星标响应
type StarProjectResponseResult struct {
	// 项目 ID
	ProjectId *string `json:"projectId,omitempty"`
	// 创建人 ID
	CreatorId *string `json:"creatorId,omitempty"`
	// 归属企业 ID
	OrganizationId *string `json:"organizationId,omitempty"`
	// 创建时间
	Created *time.Time `json:"created,omitempty"`
	// 更新时间
	Updated *time.Time `json:"updated,omitempty"`
}

// NewStarProjectResponseResult instantiates a new StarProjectResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStarProjectResponseResult() *StarProjectResponseResult {
	this := StarProjectResponseResult{}
	return &this
}

// NewStarProjectResponseResultWithDefaults instantiates a new StarProjectResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStarProjectResponseResultWithDefaults() *StarProjectResponseResult {
	this := StarProjectResponseResult{}
	return &this
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *StarProjectResponseResult) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId) {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StarProjectResponseResult) GetProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *StarProjectResponseResult) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *StarProjectResponseResult) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise.
func (o *StarProjectResponseResult) GetCreatorId() string {
	if o == nil || IsNil(o.CreatorId) {
		var ret string
		return ret
	}
	return *o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StarProjectResponseResult) GetCreatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorId) {
		return nil, false
	}
	return o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *StarProjectResponseResult) HasCreatorId() bool {
	if o != nil && !IsNil(o.CreatorId) {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given string and assigns it to the CreatorId field.
func (o *StarProjectResponseResult) SetCreatorId(v string) {
	o.CreatorId = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *StarProjectResponseResult) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StarProjectResponseResult) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *StarProjectResponseResult) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *StarProjectResponseResult) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *StarProjectResponseResult) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StarProjectResponseResult) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *StarProjectResponseResult) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *StarProjectResponseResult) SetCreated(v time.Time) {
	o.Created = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *StarProjectResponseResult) GetUpdated() time.Time {
	if o == nil || IsNil(o.Updated) {
		var ret time.Time
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StarProjectResponseResult) GetUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Updated) {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *StarProjectResponseResult) HasUpdated() bool {
	if o != nil && !IsNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given time.Time and assigns it to the Updated field.
func (o *StarProjectResponseResult) SetUpdated(v time.Time) {
	o.Updated = &v
}

func (o StarProjectResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StarProjectResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProjectId) {
		toSerialize["projectId"] = o.ProjectId
	}
	if !IsNil(o.CreatorId) {
		toSerialize["creatorId"] = o.CreatorId
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.Updated) {
		toSerialize["updated"] = o.Updated
	}
	return toSerialize, nil
}

type NullableStarProjectResponseResult struct {
	value *StarProjectResponseResult
	isSet bool
}

func (v NullableStarProjectResponseResult) Get() *StarProjectResponseResult {
	return v.value
}

func (v *NullableStarProjectResponseResult) Set(val *StarProjectResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableStarProjectResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableStarProjectResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStarProjectResponseResult(val *StarProjectResponseResult) *NullableStarProjectResponseResult {
	return &NullableStarProjectResponseResult{value: val, isSet: true}
}

func (v NullableStarProjectResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStarProjectResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


