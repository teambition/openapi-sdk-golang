/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SumProjectWorkTimeRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SumProjectWorkTimeRequest{}

// SumProjectWorkTimeRequest struct for SumProjectWorkTimeRequest
type SumProjectWorkTimeRequest struct {
	// 汇总类型，必须是 worktime 和 plantime
	Type *string `json:"type,omitempty"`
	// 开始时间，格式必须是 yyyy-mm-dd
	StartDate *string `json:"startDate,omitempty"`
	// 结束时间，格式必须是 yyyy-mm-dd
	EndDate *string `json:"endDate,omitempty"`
}

// NewSumProjectWorkTimeRequest instantiates a new SumProjectWorkTimeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSumProjectWorkTimeRequest() *SumProjectWorkTimeRequest {
	this := SumProjectWorkTimeRequest{}
	return &this
}

// NewSumProjectWorkTimeRequestWithDefaults instantiates a new SumProjectWorkTimeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSumProjectWorkTimeRequestWithDefaults() *SumProjectWorkTimeRequest {
	this := SumProjectWorkTimeRequest{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *SumProjectWorkTimeRequest) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SumProjectWorkTimeRequest) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *SumProjectWorkTimeRequest) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *SumProjectWorkTimeRequest) SetType(v string) {
	o.Type = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *SumProjectWorkTimeRequest) GetStartDate() string {
	if o == nil || IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SumProjectWorkTimeRequest) GetStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *SumProjectWorkTimeRequest) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *SumProjectWorkTimeRequest) SetStartDate(v string) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *SumProjectWorkTimeRequest) GetEndDate() string {
	if o == nil || IsNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SumProjectWorkTimeRequest) GetEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *SumProjectWorkTimeRequest) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *SumProjectWorkTimeRequest) SetEndDate(v string) {
	o.EndDate = &v
}

func (o SumProjectWorkTimeRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SumProjectWorkTimeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	return toSerialize, nil
}

type NullableSumProjectWorkTimeRequest struct {
	value *SumProjectWorkTimeRequest
	isSet bool
}

func (v NullableSumProjectWorkTimeRequest) Get() *SumProjectWorkTimeRequest {
	return v.value
}

func (v *NullableSumProjectWorkTimeRequest) Set(val *SumProjectWorkTimeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSumProjectWorkTimeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSumProjectWorkTimeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSumProjectWorkTimeRequest(val *SumProjectWorkTimeRequest) *NullableSumProjectWorkTimeRequest {
	return &NullableSumProjectWorkTimeRequest{value: val, isSet: true}
}

func (v NullableSumProjectWorkTimeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSumProjectWorkTimeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


