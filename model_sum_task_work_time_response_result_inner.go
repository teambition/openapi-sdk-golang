/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SumTaskWorkTimeResponseResultInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SumTaskWorkTimeResponseResultInner{}

// SumTaskWorkTimeResponseResultInner struct for SumTaskWorkTimeResponseResultInner
type SumTaskWorkTimeResponseResultInner struct {
	// 工时关联的数据 ID
	ObjectId *string `json:"objectId,omitempty"`
	// 工时关联的数据类型
	ObjectType *string `json:"objectType,omitempty"`
	// 总计工时时间(单位:毫秒)
	Worktime *float32 `json:"worktime,omitempty"`
	// 计划工时记录数量
	Count *float32 `json:"count,omitempty"`
	// 工时记录信息
	Objects []SumTaskWorkTimeResponseResultInnerObjectsInner `json:"objects,omitempty"`
	ObjectIds []string `json:"objectIds,omitempty"`
	SubmitterIds []string `json:"submitterIds,omitempty"`
	UserIds []string `json:"userIds,omitempty"`
	Dates []string `json:"dates,omitempty"`
}

// NewSumTaskWorkTimeResponseResultInner instantiates a new SumTaskWorkTimeResponseResultInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSumTaskWorkTimeResponseResultInner() *SumTaskWorkTimeResponseResultInner {
	this := SumTaskWorkTimeResponseResultInner{}
	return &this
}

// NewSumTaskWorkTimeResponseResultInnerWithDefaults instantiates a new SumTaskWorkTimeResponseResultInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSumTaskWorkTimeResponseResultInnerWithDefaults() *SumTaskWorkTimeResponseResultInner {
	this := SumTaskWorkTimeResponseResultInner{}
	return &this
}

// GetObjectId returns the ObjectId field value if set, zero value otherwise.
func (o *SumTaskWorkTimeResponseResultInner) GetObjectId() string {
	if o == nil || IsNil(o.ObjectId) {
		var ret string
		return ret
	}
	return *o.ObjectId
}

// GetObjectIdOk returns a tuple with the ObjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SumTaskWorkTimeResponseResultInner) GetObjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ObjectId) {
		return nil, false
	}
	return o.ObjectId, true
}

// HasObjectId returns a boolean if a field has been set.
func (o *SumTaskWorkTimeResponseResultInner) HasObjectId() bool {
	if o != nil && !IsNil(o.ObjectId) {
		return true
	}

	return false
}

// SetObjectId gets a reference to the given string and assigns it to the ObjectId field.
func (o *SumTaskWorkTimeResponseResultInner) SetObjectId(v string) {
	o.ObjectId = &v
}

// GetObjectType returns the ObjectType field value if set, zero value otherwise.
func (o *SumTaskWorkTimeResponseResultInner) GetObjectType() string {
	if o == nil || IsNil(o.ObjectType) {
		var ret string
		return ret
	}
	return *o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SumTaskWorkTimeResponseResultInner) GetObjectTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ObjectType) {
		return nil, false
	}
	return o.ObjectType, true
}

// HasObjectType returns a boolean if a field has been set.
func (o *SumTaskWorkTimeResponseResultInner) HasObjectType() bool {
	if o != nil && !IsNil(o.ObjectType) {
		return true
	}

	return false
}

// SetObjectType gets a reference to the given string and assigns it to the ObjectType field.
func (o *SumTaskWorkTimeResponseResultInner) SetObjectType(v string) {
	o.ObjectType = &v
}

// GetWorktime returns the Worktime field value if set, zero value otherwise.
func (o *SumTaskWorkTimeResponseResultInner) GetWorktime() float32 {
	if o == nil || IsNil(o.Worktime) {
		var ret float32
		return ret
	}
	return *o.Worktime
}

// GetWorktimeOk returns a tuple with the Worktime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SumTaskWorkTimeResponseResultInner) GetWorktimeOk() (*float32, bool) {
	if o == nil || IsNil(o.Worktime) {
		return nil, false
	}
	return o.Worktime, true
}

// HasWorktime returns a boolean if a field has been set.
func (o *SumTaskWorkTimeResponseResultInner) HasWorktime() bool {
	if o != nil && !IsNil(o.Worktime) {
		return true
	}

	return false
}

// SetWorktime gets a reference to the given float32 and assigns it to the Worktime field.
func (o *SumTaskWorkTimeResponseResultInner) SetWorktime(v float32) {
	o.Worktime = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *SumTaskWorkTimeResponseResultInner) GetCount() float32 {
	if o == nil || IsNil(o.Count) {
		var ret float32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SumTaskWorkTimeResponseResultInner) GetCountOk() (*float32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *SumTaskWorkTimeResponseResultInner) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given float32 and assigns it to the Count field.
func (o *SumTaskWorkTimeResponseResultInner) SetCount(v float32) {
	o.Count = &v
}

// GetObjects returns the Objects field value if set, zero value otherwise.
func (o *SumTaskWorkTimeResponseResultInner) GetObjects() []SumTaskWorkTimeResponseResultInnerObjectsInner {
	if o == nil || IsNil(o.Objects) {
		var ret []SumTaskWorkTimeResponseResultInnerObjectsInner
		return ret
	}
	return o.Objects
}

// GetObjectsOk returns a tuple with the Objects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SumTaskWorkTimeResponseResultInner) GetObjectsOk() ([]SumTaskWorkTimeResponseResultInnerObjectsInner, bool) {
	if o == nil || IsNil(o.Objects) {
		return nil, false
	}
	return o.Objects, true
}

// HasObjects returns a boolean if a field has been set.
func (o *SumTaskWorkTimeResponseResultInner) HasObjects() bool {
	if o != nil && !IsNil(o.Objects) {
		return true
	}

	return false
}

// SetObjects gets a reference to the given []SumTaskWorkTimeResponseResultInnerObjectsInner and assigns it to the Objects field.
func (o *SumTaskWorkTimeResponseResultInner) SetObjects(v []SumTaskWorkTimeResponseResultInnerObjectsInner) {
	o.Objects = v
}

// GetObjectIds returns the ObjectIds field value if set, zero value otherwise.
func (o *SumTaskWorkTimeResponseResultInner) GetObjectIds() []string {
	if o == nil || IsNil(o.ObjectIds) {
		var ret []string
		return ret
	}
	return o.ObjectIds
}

// GetObjectIdsOk returns a tuple with the ObjectIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SumTaskWorkTimeResponseResultInner) GetObjectIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ObjectIds) {
		return nil, false
	}
	return o.ObjectIds, true
}

// HasObjectIds returns a boolean if a field has been set.
func (o *SumTaskWorkTimeResponseResultInner) HasObjectIds() bool {
	if o != nil && !IsNil(o.ObjectIds) {
		return true
	}

	return false
}

// SetObjectIds gets a reference to the given []string and assigns it to the ObjectIds field.
func (o *SumTaskWorkTimeResponseResultInner) SetObjectIds(v []string) {
	o.ObjectIds = v
}

// GetSubmitterIds returns the SubmitterIds field value if set, zero value otherwise.
func (o *SumTaskWorkTimeResponseResultInner) GetSubmitterIds() []string {
	if o == nil || IsNil(o.SubmitterIds) {
		var ret []string
		return ret
	}
	return o.SubmitterIds
}

// GetSubmitterIdsOk returns a tuple with the SubmitterIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SumTaskWorkTimeResponseResultInner) GetSubmitterIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.SubmitterIds) {
		return nil, false
	}
	return o.SubmitterIds, true
}

// HasSubmitterIds returns a boolean if a field has been set.
func (o *SumTaskWorkTimeResponseResultInner) HasSubmitterIds() bool {
	if o != nil && !IsNil(o.SubmitterIds) {
		return true
	}

	return false
}

// SetSubmitterIds gets a reference to the given []string and assigns it to the SubmitterIds field.
func (o *SumTaskWorkTimeResponseResultInner) SetSubmitterIds(v []string) {
	o.SubmitterIds = v
}

// GetUserIds returns the UserIds field value if set, zero value otherwise.
func (o *SumTaskWorkTimeResponseResultInner) GetUserIds() []string {
	if o == nil || IsNil(o.UserIds) {
		var ret []string
		return ret
	}
	return o.UserIds
}

// GetUserIdsOk returns a tuple with the UserIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SumTaskWorkTimeResponseResultInner) GetUserIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.UserIds) {
		return nil, false
	}
	return o.UserIds, true
}

// HasUserIds returns a boolean if a field has been set.
func (o *SumTaskWorkTimeResponseResultInner) HasUserIds() bool {
	if o != nil && !IsNil(o.UserIds) {
		return true
	}

	return false
}

// SetUserIds gets a reference to the given []string and assigns it to the UserIds field.
func (o *SumTaskWorkTimeResponseResultInner) SetUserIds(v []string) {
	o.UserIds = v
}

// GetDates returns the Dates field value if set, zero value otherwise.
func (o *SumTaskWorkTimeResponseResultInner) GetDates() []string {
	if o == nil || IsNil(o.Dates) {
		var ret []string
		return ret
	}
	return o.Dates
}

// GetDatesOk returns a tuple with the Dates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SumTaskWorkTimeResponseResultInner) GetDatesOk() ([]string, bool) {
	if o == nil || IsNil(o.Dates) {
		return nil, false
	}
	return o.Dates, true
}

// HasDates returns a boolean if a field has been set.
func (o *SumTaskWorkTimeResponseResultInner) HasDates() bool {
	if o != nil && !IsNil(o.Dates) {
		return true
	}

	return false
}

// SetDates gets a reference to the given []string and assigns it to the Dates field.
func (o *SumTaskWorkTimeResponseResultInner) SetDates(v []string) {
	o.Dates = v
}

func (o SumTaskWorkTimeResponseResultInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SumTaskWorkTimeResponseResultInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ObjectId) {
		toSerialize["objectId"] = o.ObjectId
	}
	if !IsNil(o.ObjectType) {
		toSerialize["objectType"] = o.ObjectType
	}
	if !IsNil(o.Worktime) {
		toSerialize["worktime"] = o.Worktime
	}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.Objects) {
		toSerialize["objects"] = o.Objects
	}
	if !IsNil(o.ObjectIds) {
		toSerialize["objectIds"] = o.ObjectIds
	}
	if !IsNil(o.SubmitterIds) {
		toSerialize["submitterIds"] = o.SubmitterIds
	}
	if !IsNil(o.UserIds) {
		toSerialize["userIds"] = o.UserIds
	}
	if !IsNil(o.Dates) {
		toSerialize["dates"] = o.Dates
	}
	return toSerialize, nil
}

type NullableSumTaskWorkTimeResponseResultInner struct {
	value *SumTaskWorkTimeResponseResultInner
	isSet bool
}

func (v NullableSumTaskWorkTimeResponseResultInner) Get() *SumTaskWorkTimeResponseResultInner {
	return v.value
}

func (v *NullableSumTaskWorkTimeResponseResultInner) Set(val *SumTaskWorkTimeResponseResultInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSumTaskWorkTimeResponseResultInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSumTaskWorkTimeResponseResultInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSumTaskWorkTimeResponseResultInner(val *SumTaskWorkTimeResponseResultInner) *NullableSumTaskWorkTimeResponseResultInner {
	return &NullableSumTaskWorkTimeResponseResultInner{value: val, isSet: true}
}

func (v NullableSumTaskWorkTimeResponseResultInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSumTaskWorkTimeResponseResultInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


