/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SumTaskWorkTimeResponseResultInnerObjectsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SumTaskWorkTimeResponseResultInnerObjectsInner{}

// SumTaskWorkTimeResponseResultInnerObjectsInner struct for SumTaskWorkTimeResponseResultInnerObjectsInner
type SumTaskWorkTimeResponseResultInnerObjectsInner struct {
	// 工时 ID
	WorktimeId *string `json:"worktimeId,omitempty"`
	// 工时关联的数据类型
	ObjectType *string `json:"objectType,omitempty"`
	// 工时关联的数据 ID
	ObjectId *string `json:"objectId,omitempty"`
	// 工时时间(单位:毫秒)
	Worktime *float32 `json:"worktime,omitempty"`
	// 工时提交者 ID
	SubmitterId *string `json:"submitterId,omitempty"`
}

// NewSumTaskWorkTimeResponseResultInnerObjectsInner instantiates a new SumTaskWorkTimeResponseResultInnerObjectsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSumTaskWorkTimeResponseResultInnerObjectsInner() *SumTaskWorkTimeResponseResultInnerObjectsInner {
	this := SumTaskWorkTimeResponseResultInnerObjectsInner{}
	return &this
}

// NewSumTaskWorkTimeResponseResultInnerObjectsInnerWithDefaults instantiates a new SumTaskWorkTimeResponseResultInnerObjectsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSumTaskWorkTimeResponseResultInnerObjectsInnerWithDefaults() *SumTaskWorkTimeResponseResultInnerObjectsInner {
	this := SumTaskWorkTimeResponseResultInnerObjectsInner{}
	return &this
}

// GetWorktimeId returns the WorktimeId field value if set, zero value otherwise.
func (o *SumTaskWorkTimeResponseResultInnerObjectsInner) GetWorktimeId() string {
	if o == nil || IsNil(o.WorktimeId) {
		var ret string
		return ret
	}
	return *o.WorktimeId
}

// GetWorktimeIdOk returns a tuple with the WorktimeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SumTaskWorkTimeResponseResultInnerObjectsInner) GetWorktimeIdOk() (*string, bool) {
	if o == nil || IsNil(o.WorktimeId) {
		return nil, false
	}
	return o.WorktimeId, true
}

// HasWorktimeId returns a boolean if a field has been set.
func (o *SumTaskWorkTimeResponseResultInnerObjectsInner) HasWorktimeId() bool {
	if o != nil && !IsNil(o.WorktimeId) {
		return true
	}

	return false
}

// SetWorktimeId gets a reference to the given string and assigns it to the WorktimeId field.
func (o *SumTaskWorkTimeResponseResultInnerObjectsInner) SetWorktimeId(v string) {
	o.WorktimeId = &v
}

// GetObjectType returns the ObjectType field value if set, zero value otherwise.
func (o *SumTaskWorkTimeResponseResultInnerObjectsInner) GetObjectType() string {
	if o == nil || IsNil(o.ObjectType) {
		var ret string
		return ret
	}
	return *o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SumTaskWorkTimeResponseResultInnerObjectsInner) GetObjectTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ObjectType) {
		return nil, false
	}
	return o.ObjectType, true
}

// HasObjectType returns a boolean if a field has been set.
func (o *SumTaskWorkTimeResponseResultInnerObjectsInner) HasObjectType() bool {
	if o != nil && !IsNil(o.ObjectType) {
		return true
	}

	return false
}

// SetObjectType gets a reference to the given string and assigns it to the ObjectType field.
func (o *SumTaskWorkTimeResponseResultInnerObjectsInner) SetObjectType(v string) {
	o.ObjectType = &v
}

// GetObjectId returns the ObjectId field value if set, zero value otherwise.
func (o *SumTaskWorkTimeResponseResultInnerObjectsInner) GetObjectId() string {
	if o == nil || IsNil(o.ObjectId) {
		var ret string
		return ret
	}
	return *o.ObjectId
}

// GetObjectIdOk returns a tuple with the ObjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SumTaskWorkTimeResponseResultInnerObjectsInner) GetObjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ObjectId) {
		return nil, false
	}
	return o.ObjectId, true
}

// HasObjectId returns a boolean if a field has been set.
func (o *SumTaskWorkTimeResponseResultInnerObjectsInner) HasObjectId() bool {
	if o != nil && !IsNil(o.ObjectId) {
		return true
	}

	return false
}

// SetObjectId gets a reference to the given string and assigns it to the ObjectId field.
func (o *SumTaskWorkTimeResponseResultInnerObjectsInner) SetObjectId(v string) {
	o.ObjectId = &v
}

// GetWorktime returns the Worktime field value if set, zero value otherwise.
func (o *SumTaskWorkTimeResponseResultInnerObjectsInner) GetWorktime() float32 {
	if o == nil || IsNil(o.Worktime) {
		var ret float32
		return ret
	}
	return *o.Worktime
}

// GetWorktimeOk returns a tuple with the Worktime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SumTaskWorkTimeResponseResultInnerObjectsInner) GetWorktimeOk() (*float32, bool) {
	if o == nil || IsNil(o.Worktime) {
		return nil, false
	}
	return o.Worktime, true
}

// HasWorktime returns a boolean if a field has been set.
func (o *SumTaskWorkTimeResponseResultInnerObjectsInner) HasWorktime() bool {
	if o != nil && !IsNil(o.Worktime) {
		return true
	}

	return false
}

// SetWorktime gets a reference to the given float32 and assigns it to the Worktime field.
func (o *SumTaskWorkTimeResponseResultInnerObjectsInner) SetWorktime(v float32) {
	o.Worktime = &v
}

// GetSubmitterId returns the SubmitterId field value if set, zero value otherwise.
func (o *SumTaskWorkTimeResponseResultInnerObjectsInner) GetSubmitterId() string {
	if o == nil || IsNil(o.SubmitterId) {
		var ret string
		return ret
	}
	return *o.SubmitterId
}

// GetSubmitterIdOk returns a tuple with the SubmitterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SumTaskWorkTimeResponseResultInnerObjectsInner) GetSubmitterIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubmitterId) {
		return nil, false
	}
	return o.SubmitterId, true
}

// HasSubmitterId returns a boolean if a field has been set.
func (o *SumTaskWorkTimeResponseResultInnerObjectsInner) HasSubmitterId() bool {
	if o != nil && !IsNil(o.SubmitterId) {
		return true
	}

	return false
}

// SetSubmitterId gets a reference to the given string and assigns it to the SubmitterId field.
func (o *SumTaskWorkTimeResponseResultInnerObjectsInner) SetSubmitterId(v string) {
	o.SubmitterId = &v
}

func (o SumTaskWorkTimeResponseResultInnerObjectsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SumTaskWorkTimeResponseResultInnerObjectsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.WorktimeId) {
		toSerialize["worktimeId"] = o.WorktimeId
	}
	if !IsNil(o.ObjectType) {
		toSerialize["objectType"] = o.ObjectType
	}
	if !IsNil(o.ObjectId) {
		toSerialize["objectId"] = o.ObjectId
	}
	if !IsNil(o.Worktime) {
		toSerialize["worktime"] = o.Worktime
	}
	if !IsNil(o.SubmitterId) {
		toSerialize["submitterId"] = o.SubmitterId
	}
	return toSerialize, nil
}

type NullableSumTaskWorkTimeResponseResultInnerObjectsInner struct {
	value *SumTaskWorkTimeResponseResultInnerObjectsInner
	isSet bool
}

func (v NullableSumTaskWorkTimeResponseResultInnerObjectsInner) Get() *SumTaskWorkTimeResponseResultInnerObjectsInner {
	return v.value
}

func (v *NullableSumTaskWorkTimeResponseResultInnerObjectsInner) Set(val *SumTaskWorkTimeResponseResultInnerObjectsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSumTaskWorkTimeResponseResultInnerObjectsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSumTaskWorkTimeResponseResultInnerObjectsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSumTaskWorkTimeResponseResultInnerObjectsInner(val *SumTaskWorkTimeResponseResultInnerObjectsInner) *NullableSumTaskWorkTimeResponseResultInnerObjectsInner {
	return &NullableSumTaskWorkTimeResponseResultInnerObjectsInner{value: val, isSet: true}
}

func (v NullableSumTaskWorkTimeResponseResultInnerObjectsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSumTaskWorkTimeResponseResultInnerObjectsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


