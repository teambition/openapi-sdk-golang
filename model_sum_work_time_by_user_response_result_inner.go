/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SumWorkTimeByUserResponseResultInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SumWorkTimeByUserResponseResultInner{}

// SumWorkTimeByUserResponseResultInner struct for SumWorkTimeByUserResponseResultInner
type SumWorkTimeByUserResponseResultInner struct {
	// 用户id
	UserId *string `json:"userId,omitempty"`
	// 总计工时时间(单位:毫秒)
	Data *float32 `json:"data,omitempty"`
}

// NewSumWorkTimeByUserResponseResultInner instantiates a new SumWorkTimeByUserResponseResultInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSumWorkTimeByUserResponseResultInner() *SumWorkTimeByUserResponseResultInner {
	this := SumWorkTimeByUserResponseResultInner{}
	return &this
}

// NewSumWorkTimeByUserResponseResultInnerWithDefaults instantiates a new SumWorkTimeByUserResponseResultInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSumWorkTimeByUserResponseResultInnerWithDefaults() *SumWorkTimeByUserResponseResultInner {
	this := SumWorkTimeByUserResponseResultInner{}
	return &this
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *SumWorkTimeByUserResponseResultInner) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SumWorkTimeByUserResponseResultInner) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *SumWorkTimeByUserResponseResultInner) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *SumWorkTimeByUserResponseResultInner) SetUserId(v string) {
	o.UserId = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *SumWorkTimeByUserResponseResultInner) GetData() float32 {
	if o == nil || IsNil(o.Data) {
		var ret float32
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SumWorkTimeByUserResponseResultInner) GetDataOk() (*float32, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *SumWorkTimeByUserResponseResultInner) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given float32 and assigns it to the Data field.
func (o *SumWorkTimeByUserResponseResultInner) SetData(v float32) {
	o.Data = &v
}

func (o SumWorkTimeByUserResponseResultInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SumWorkTimeByUserResponseResultInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableSumWorkTimeByUserResponseResultInner struct {
	value *SumWorkTimeByUserResponseResultInner
	isSet bool
}

func (v NullableSumWorkTimeByUserResponseResultInner) Get() *SumWorkTimeByUserResponseResultInner {
	return v.value
}

func (v *NullableSumWorkTimeByUserResponseResultInner) Set(val *SumWorkTimeByUserResponseResultInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSumWorkTimeByUserResponseResultInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSumWorkTimeByUserResponseResultInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSumWorkTimeByUserResponseResultInner(val *SumWorkTimeByUserResponseResultInner) *NullableSumWorkTimeByUserResponseResultInner {
	return &NullableSumWorkTimeByUserResponseResultInner{value: val, isSet: true}
}

func (v NullableSumWorkTimeByUserResponseResultInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSumWorkTimeByUserResponseResultInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


