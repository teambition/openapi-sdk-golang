/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SyncBuildsResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SyncBuildsResponseResult{}

// SyncBuildsResponseResult struct for SyncBuildsResponseResult
type SyncBuildsResponseResult struct {
	Cause *SyncBuildsRequestBuildCause `json:"cause,omitempty"`
	Repo *SyncBuildsResponseResultRepo `json:"repo,omitempty"`
	Id *string `json:"id,omitempty"`
	// 构建code，在流水线内唯一，为空时默认使用number
	Code *string `json:"code,omitempty"`
	// 企业id
	OrganizationId *string `json:"organizationId,omitempty"`
	// 流水线id
	PipelineId *string `json:"pipelineId,omitempty"`
	Version *string `json:"version,omitempty"`
	// 构建序号
	Number *float32 `json:"number,omitempty"`
	// 构建状态，目前支持运行中(running)、通过(passed)、不稳定(unstable)、中止(aborted)、失败(failed)、未知状态(unKnown)
	Status *string `json:"status,omitempty"`
	// 创建时间
	CreatedAt *string `json:"createdAt,omitempty"`
	// 更新时间
	UpdatedAt *string `json:"updatedAt,omitempty"`
	// 构建时长，单位毫秒
	Duration *float32 `json:"duration,omitempty"`
	// 构建开始的时间戳
	Timestamp *float32 `json:"timestamp,omitempty"`
	// 构建地址
	Url *string `json:"url,omitempty"`
	// 构建日志
	Log *string `json:"log,omitempty"`
	// 变更信息
	ChangeSetIds []string `json:"changeSetIds,omitempty"`
	// 阶段信息（流水线类型必填）
	Stages []SyncBuildsResponseResultStagesInner `json:"stages,omitempty"`
	Counts *SyncBuildsResponseResultCounts `json:"counts,omitempty"`
}

// NewSyncBuildsResponseResult instantiates a new SyncBuildsResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSyncBuildsResponseResult() *SyncBuildsResponseResult {
	this := SyncBuildsResponseResult{}
	return &this
}

// NewSyncBuildsResponseResultWithDefaults instantiates a new SyncBuildsResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSyncBuildsResponseResultWithDefaults() *SyncBuildsResponseResult {
	this := SyncBuildsResponseResult{}
	return &this
}

// GetCause returns the Cause field value if set, zero value otherwise.
func (o *SyncBuildsResponseResult) GetCause() SyncBuildsRequestBuildCause {
	if o == nil || IsNil(o.Cause) {
		var ret SyncBuildsRequestBuildCause
		return ret
	}
	return *o.Cause
}

// GetCauseOk returns a tuple with the Cause field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyncBuildsResponseResult) GetCauseOk() (*SyncBuildsRequestBuildCause, bool) {
	if o == nil || IsNil(o.Cause) {
		return nil, false
	}
	return o.Cause, true
}

// HasCause returns a boolean if a field has been set.
func (o *SyncBuildsResponseResult) HasCause() bool {
	if o != nil && !IsNil(o.Cause) {
		return true
	}

	return false
}

// SetCause gets a reference to the given SyncBuildsRequestBuildCause and assigns it to the Cause field.
func (o *SyncBuildsResponseResult) SetCause(v SyncBuildsRequestBuildCause) {
	o.Cause = &v
}

// GetRepo returns the Repo field value if set, zero value otherwise.
func (o *SyncBuildsResponseResult) GetRepo() SyncBuildsResponseResultRepo {
	if o == nil || IsNil(o.Repo) {
		var ret SyncBuildsResponseResultRepo
		return ret
	}
	return *o.Repo
}

// GetRepoOk returns a tuple with the Repo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyncBuildsResponseResult) GetRepoOk() (*SyncBuildsResponseResultRepo, bool) {
	if o == nil || IsNil(o.Repo) {
		return nil, false
	}
	return o.Repo, true
}

// HasRepo returns a boolean if a field has been set.
func (o *SyncBuildsResponseResult) HasRepo() bool {
	if o != nil && !IsNil(o.Repo) {
		return true
	}

	return false
}

// SetRepo gets a reference to the given SyncBuildsResponseResultRepo and assigns it to the Repo field.
func (o *SyncBuildsResponseResult) SetRepo(v SyncBuildsResponseResultRepo) {
	o.Repo = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SyncBuildsResponseResult) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyncBuildsResponseResult) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SyncBuildsResponseResult) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SyncBuildsResponseResult) SetId(v string) {
	o.Id = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *SyncBuildsResponseResult) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyncBuildsResponseResult) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *SyncBuildsResponseResult) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *SyncBuildsResponseResult) SetCode(v string) {
	o.Code = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *SyncBuildsResponseResult) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyncBuildsResponseResult) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *SyncBuildsResponseResult) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *SyncBuildsResponseResult) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetPipelineId returns the PipelineId field value if set, zero value otherwise.
func (o *SyncBuildsResponseResult) GetPipelineId() string {
	if o == nil || IsNil(o.PipelineId) {
		var ret string
		return ret
	}
	return *o.PipelineId
}

// GetPipelineIdOk returns a tuple with the PipelineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyncBuildsResponseResult) GetPipelineIdOk() (*string, bool) {
	if o == nil || IsNil(o.PipelineId) {
		return nil, false
	}
	return o.PipelineId, true
}

// HasPipelineId returns a boolean if a field has been set.
func (o *SyncBuildsResponseResult) HasPipelineId() bool {
	if o != nil && !IsNil(o.PipelineId) {
		return true
	}

	return false
}

// SetPipelineId gets a reference to the given string and assigns it to the PipelineId field.
func (o *SyncBuildsResponseResult) SetPipelineId(v string) {
	o.PipelineId = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *SyncBuildsResponseResult) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyncBuildsResponseResult) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *SyncBuildsResponseResult) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *SyncBuildsResponseResult) SetVersion(v string) {
	o.Version = &v
}

// GetNumber returns the Number field value if set, zero value otherwise.
func (o *SyncBuildsResponseResult) GetNumber() float32 {
	if o == nil || IsNil(o.Number) {
		var ret float32
		return ret
	}
	return *o.Number
}

// GetNumberOk returns a tuple with the Number field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyncBuildsResponseResult) GetNumberOk() (*float32, bool) {
	if o == nil || IsNil(o.Number) {
		return nil, false
	}
	return o.Number, true
}

// HasNumber returns a boolean if a field has been set.
func (o *SyncBuildsResponseResult) HasNumber() bool {
	if o != nil && !IsNil(o.Number) {
		return true
	}

	return false
}

// SetNumber gets a reference to the given float32 and assigns it to the Number field.
func (o *SyncBuildsResponseResult) SetNumber(v float32) {
	o.Number = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *SyncBuildsResponseResult) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyncBuildsResponseResult) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *SyncBuildsResponseResult) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *SyncBuildsResponseResult) SetStatus(v string) {
	o.Status = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *SyncBuildsResponseResult) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyncBuildsResponseResult) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *SyncBuildsResponseResult) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *SyncBuildsResponseResult) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *SyncBuildsResponseResult) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyncBuildsResponseResult) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *SyncBuildsResponseResult) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *SyncBuildsResponseResult) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *SyncBuildsResponseResult) GetDuration() float32 {
	if o == nil || IsNil(o.Duration) {
		var ret float32
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyncBuildsResponseResult) GetDurationOk() (*float32, bool) {
	if o == nil || IsNil(o.Duration) {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *SyncBuildsResponseResult) HasDuration() bool {
	if o != nil && !IsNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given float32 and assigns it to the Duration field.
func (o *SyncBuildsResponseResult) SetDuration(v float32) {
	o.Duration = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *SyncBuildsResponseResult) GetTimestamp() float32 {
	if o == nil || IsNil(o.Timestamp) {
		var ret float32
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyncBuildsResponseResult) GetTimestampOk() (*float32, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *SyncBuildsResponseResult) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given float32 and assigns it to the Timestamp field.
func (o *SyncBuildsResponseResult) SetTimestamp(v float32) {
	o.Timestamp = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *SyncBuildsResponseResult) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyncBuildsResponseResult) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *SyncBuildsResponseResult) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *SyncBuildsResponseResult) SetUrl(v string) {
	o.Url = &v
}

// GetLog returns the Log field value if set, zero value otherwise.
func (o *SyncBuildsResponseResult) GetLog() string {
	if o == nil || IsNil(o.Log) {
		var ret string
		return ret
	}
	return *o.Log
}

// GetLogOk returns a tuple with the Log field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyncBuildsResponseResult) GetLogOk() (*string, bool) {
	if o == nil || IsNil(o.Log) {
		return nil, false
	}
	return o.Log, true
}

// HasLog returns a boolean if a field has been set.
func (o *SyncBuildsResponseResult) HasLog() bool {
	if o != nil && !IsNil(o.Log) {
		return true
	}

	return false
}

// SetLog gets a reference to the given string and assigns it to the Log field.
func (o *SyncBuildsResponseResult) SetLog(v string) {
	o.Log = &v
}

// GetChangeSetIds returns the ChangeSetIds field value if set, zero value otherwise.
func (o *SyncBuildsResponseResult) GetChangeSetIds() []string {
	if o == nil || IsNil(o.ChangeSetIds) {
		var ret []string
		return ret
	}
	return o.ChangeSetIds
}

// GetChangeSetIdsOk returns a tuple with the ChangeSetIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyncBuildsResponseResult) GetChangeSetIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ChangeSetIds) {
		return nil, false
	}
	return o.ChangeSetIds, true
}

// HasChangeSetIds returns a boolean if a field has been set.
func (o *SyncBuildsResponseResult) HasChangeSetIds() bool {
	if o != nil && !IsNil(o.ChangeSetIds) {
		return true
	}

	return false
}

// SetChangeSetIds gets a reference to the given []string and assigns it to the ChangeSetIds field.
func (o *SyncBuildsResponseResult) SetChangeSetIds(v []string) {
	o.ChangeSetIds = v
}

// GetStages returns the Stages field value if set, zero value otherwise.
func (o *SyncBuildsResponseResult) GetStages() []SyncBuildsResponseResultStagesInner {
	if o == nil || IsNil(o.Stages) {
		var ret []SyncBuildsResponseResultStagesInner
		return ret
	}
	return o.Stages
}

// GetStagesOk returns a tuple with the Stages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyncBuildsResponseResult) GetStagesOk() ([]SyncBuildsResponseResultStagesInner, bool) {
	if o == nil || IsNil(o.Stages) {
		return nil, false
	}
	return o.Stages, true
}

// HasStages returns a boolean if a field has been set.
func (o *SyncBuildsResponseResult) HasStages() bool {
	if o != nil && !IsNil(o.Stages) {
		return true
	}

	return false
}

// SetStages gets a reference to the given []SyncBuildsResponseResultStagesInner and assigns it to the Stages field.
func (o *SyncBuildsResponseResult) SetStages(v []SyncBuildsResponseResultStagesInner) {
	o.Stages = v
}

// GetCounts returns the Counts field value if set, zero value otherwise.
func (o *SyncBuildsResponseResult) GetCounts() SyncBuildsResponseResultCounts {
	if o == nil || IsNil(o.Counts) {
		var ret SyncBuildsResponseResultCounts
		return ret
	}
	return *o.Counts
}

// GetCountsOk returns a tuple with the Counts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyncBuildsResponseResult) GetCountsOk() (*SyncBuildsResponseResultCounts, bool) {
	if o == nil || IsNil(o.Counts) {
		return nil, false
	}
	return o.Counts, true
}

// HasCounts returns a boolean if a field has been set.
func (o *SyncBuildsResponseResult) HasCounts() bool {
	if o != nil && !IsNil(o.Counts) {
		return true
	}

	return false
}

// SetCounts gets a reference to the given SyncBuildsResponseResultCounts and assigns it to the Counts field.
func (o *SyncBuildsResponseResult) SetCounts(v SyncBuildsResponseResultCounts) {
	o.Counts = &v
}

func (o SyncBuildsResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SyncBuildsResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cause) {
		toSerialize["cause"] = o.Cause
	}
	if !IsNil(o.Repo) {
		toSerialize["repo"] = o.Repo
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if !IsNil(o.PipelineId) {
		toSerialize["pipelineId"] = o.PipelineId
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.Number) {
		toSerialize["number"] = o.Number
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if !IsNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Log) {
		toSerialize["log"] = o.Log
	}
	if !IsNil(o.ChangeSetIds) {
		toSerialize["changeSetIds"] = o.ChangeSetIds
	}
	if !IsNil(o.Stages) {
		toSerialize["stages"] = o.Stages
	}
	if !IsNil(o.Counts) {
		toSerialize["counts"] = o.Counts
	}
	return toSerialize, nil
}

type NullableSyncBuildsResponseResult struct {
	value *SyncBuildsResponseResult
	isSet bool
}

func (v NullableSyncBuildsResponseResult) Get() *SyncBuildsResponseResult {
	return v.value
}

func (v *NullableSyncBuildsResponseResult) Set(val *SyncBuildsResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableSyncBuildsResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableSyncBuildsResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSyncBuildsResponseResult(val *SyncBuildsResponseResult) *NullableSyncBuildsResponseResult {
	return &NullableSyncBuildsResponseResult{value: val, isSet: true}
}

func (v NullableSyncBuildsResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSyncBuildsResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


