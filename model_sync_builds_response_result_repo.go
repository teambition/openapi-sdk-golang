/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SyncBuildsResponseResultRepo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SyncBuildsResponseResultRepo{}

// SyncBuildsResponseResultRepo 代码仓库信息
type SyncBuildsResponseResultRepo struct {
	// 代码仓类型，目前支持：git
	Type *string `json:"type,omitempty"`
	// 代码仓库地址
	RemoteUrl *string `json:"remoteUrl,omitempty"`
	Branch *SyncBuildsResponseResultRepoBranch `json:"branch,omitempty"`
}

// NewSyncBuildsResponseResultRepo instantiates a new SyncBuildsResponseResultRepo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSyncBuildsResponseResultRepo() *SyncBuildsResponseResultRepo {
	this := SyncBuildsResponseResultRepo{}
	return &this
}

// NewSyncBuildsResponseResultRepoWithDefaults instantiates a new SyncBuildsResponseResultRepo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSyncBuildsResponseResultRepoWithDefaults() *SyncBuildsResponseResultRepo {
	this := SyncBuildsResponseResultRepo{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *SyncBuildsResponseResultRepo) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyncBuildsResponseResultRepo) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *SyncBuildsResponseResultRepo) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *SyncBuildsResponseResultRepo) SetType(v string) {
	o.Type = &v
}

// GetRemoteUrl returns the RemoteUrl field value if set, zero value otherwise.
func (o *SyncBuildsResponseResultRepo) GetRemoteUrl() string {
	if o == nil || IsNil(o.RemoteUrl) {
		var ret string
		return ret
	}
	return *o.RemoteUrl
}

// GetRemoteUrlOk returns a tuple with the RemoteUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyncBuildsResponseResultRepo) GetRemoteUrlOk() (*string, bool) {
	if o == nil || IsNil(o.RemoteUrl) {
		return nil, false
	}
	return o.RemoteUrl, true
}

// HasRemoteUrl returns a boolean if a field has been set.
func (o *SyncBuildsResponseResultRepo) HasRemoteUrl() bool {
	if o != nil && !IsNil(o.RemoteUrl) {
		return true
	}

	return false
}

// SetRemoteUrl gets a reference to the given string and assigns it to the RemoteUrl field.
func (o *SyncBuildsResponseResultRepo) SetRemoteUrl(v string) {
	o.RemoteUrl = &v
}

// GetBranch returns the Branch field value if set, zero value otherwise.
func (o *SyncBuildsResponseResultRepo) GetBranch() SyncBuildsResponseResultRepoBranch {
	if o == nil || IsNil(o.Branch) {
		var ret SyncBuildsResponseResultRepoBranch
		return ret
	}
	return *o.Branch
}

// GetBranchOk returns a tuple with the Branch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyncBuildsResponseResultRepo) GetBranchOk() (*SyncBuildsResponseResultRepoBranch, bool) {
	if o == nil || IsNil(o.Branch) {
		return nil, false
	}
	return o.Branch, true
}

// HasBranch returns a boolean if a field has been set.
func (o *SyncBuildsResponseResultRepo) HasBranch() bool {
	if o != nil && !IsNil(o.Branch) {
		return true
	}

	return false
}

// SetBranch gets a reference to the given SyncBuildsResponseResultRepoBranch and assigns it to the Branch field.
func (o *SyncBuildsResponseResultRepo) SetBranch(v SyncBuildsResponseResultRepoBranch) {
	o.Branch = &v
}

func (o SyncBuildsResponseResultRepo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SyncBuildsResponseResultRepo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.RemoteUrl) {
		toSerialize["remoteUrl"] = o.RemoteUrl
	}
	if !IsNil(o.Branch) {
		toSerialize["branch"] = o.Branch
	}
	return toSerialize, nil
}

type NullableSyncBuildsResponseResultRepo struct {
	value *SyncBuildsResponseResultRepo
	isSet bool
}

func (v NullableSyncBuildsResponseResultRepo) Get() *SyncBuildsResponseResultRepo {
	return v.value
}

func (v *NullableSyncBuildsResponseResultRepo) Set(val *SyncBuildsResponseResultRepo) {
	v.value = val
	v.isSet = true
}

func (v NullableSyncBuildsResponseResultRepo) IsSet() bool {
	return v.isSet
}

func (v *NullableSyncBuildsResponseResultRepo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSyncBuildsResponseResultRepo(val *SyncBuildsResponseResultRepo) *NullableSyncBuildsResponseResultRepo {
	return &NullableSyncBuildsResponseResultRepo{value: val, isSet: true}
}

func (v NullableSyncBuildsResponseResultRepo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSyncBuildsResponseResultRepo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


