/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SyncPipelinesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SyncPipelinesRequest{}

// SyncPipelinesRequest struct for SyncPipelinesRequest
type SyncPipelinesRequest struct {
	Pipeline *SyncPipelinesRequestPipeline `json:"pipeline,omitempty"`
}

// NewSyncPipelinesRequest instantiates a new SyncPipelinesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSyncPipelinesRequest() *SyncPipelinesRequest {
	this := SyncPipelinesRequest{}
	return &this
}

// NewSyncPipelinesRequestWithDefaults instantiates a new SyncPipelinesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSyncPipelinesRequestWithDefaults() *SyncPipelinesRequest {
	this := SyncPipelinesRequest{}
	return &this
}

// GetPipeline returns the Pipeline field value if set, zero value otherwise.
func (o *SyncPipelinesRequest) GetPipeline() SyncPipelinesRequestPipeline {
	if o == nil || IsNil(o.Pipeline) {
		var ret SyncPipelinesRequestPipeline
		return ret
	}
	return *o.Pipeline
}

// GetPipelineOk returns a tuple with the Pipeline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyncPipelinesRequest) GetPipelineOk() (*SyncPipelinesRequestPipeline, bool) {
	if o == nil || IsNil(o.Pipeline) {
		return nil, false
	}
	return o.Pipeline, true
}

// HasPipeline returns a boolean if a field has been set.
func (o *SyncPipelinesRequest) HasPipeline() bool {
	if o != nil && !IsNil(o.Pipeline) {
		return true
	}

	return false
}

// SetPipeline gets a reference to the given SyncPipelinesRequestPipeline and assigns it to the Pipeline field.
func (o *SyncPipelinesRequest) SetPipeline(v SyncPipelinesRequestPipeline) {
	o.Pipeline = &v
}

func (o SyncPipelinesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SyncPipelinesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Pipeline) {
		toSerialize["pipeline"] = o.Pipeline
	}
	return toSerialize, nil
}

type NullableSyncPipelinesRequest struct {
	value *SyncPipelinesRequest
	isSet bool
}

func (v NullableSyncPipelinesRequest) Get() *SyncPipelinesRequest {
	return v.value
}

func (v *NullableSyncPipelinesRequest) Set(val *SyncPipelinesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSyncPipelinesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSyncPipelinesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSyncPipelinesRequest(val *SyncPipelinesRequest) *NullableSyncPipelinesRequest {
	return &NullableSyncPipelinesRequest{value: val, isSet: true}
}

func (v NullableSyncPipelinesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSyncPipelinesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


