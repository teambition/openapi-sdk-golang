/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateBaselineRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateBaselineRequest{}

// UpdateBaselineRequest struct for UpdateBaselineRequest
type UpdateBaselineRequest struct {
	// 基线ID
	GanttBaselineId *string `json:"ganttBaselineId,omitempty"`
	// 基线名称
	Title *string `json:"title,omitempty"`
	// 标签ID
	TagIds []string `json:"tagIds,omitempty"`
	Payload *UpdateBaselineRequestPayload `json:"payload,omitempty"`
}

// NewUpdateBaselineRequest instantiates a new UpdateBaselineRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateBaselineRequest() *UpdateBaselineRequest {
	this := UpdateBaselineRequest{}
	return &this
}

// NewUpdateBaselineRequestWithDefaults instantiates a new UpdateBaselineRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateBaselineRequestWithDefaults() *UpdateBaselineRequest {
	this := UpdateBaselineRequest{}
	return &this
}

// GetGanttBaselineId returns the GanttBaselineId field value if set, zero value otherwise.
func (o *UpdateBaselineRequest) GetGanttBaselineId() string {
	if o == nil || IsNil(o.GanttBaselineId) {
		var ret string
		return ret
	}
	return *o.GanttBaselineId
}

// GetGanttBaselineIdOk returns a tuple with the GanttBaselineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateBaselineRequest) GetGanttBaselineIdOk() (*string, bool) {
	if o == nil || IsNil(o.GanttBaselineId) {
		return nil, false
	}
	return o.GanttBaselineId, true
}

// HasGanttBaselineId returns a boolean if a field has been set.
func (o *UpdateBaselineRequest) HasGanttBaselineId() bool {
	if o != nil && !IsNil(o.GanttBaselineId) {
		return true
	}

	return false
}

// SetGanttBaselineId gets a reference to the given string and assigns it to the GanttBaselineId field.
func (o *UpdateBaselineRequest) SetGanttBaselineId(v string) {
	o.GanttBaselineId = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *UpdateBaselineRequest) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateBaselineRequest) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *UpdateBaselineRequest) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *UpdateBaselineRequest) SetTitle(v string) {
	o.Title = &v
}

// GetTagIds returns the TagIds field value if set, zero value otherwise.
func (o *UpdateBaselineRequest) GetTagIds() []string {
	if o == nil || IsNil(o.TagIds) {
		var ret []string
		return ret
	}
	return o.TagIds
}

// GetTagIdsOk returns a tuple with the TagIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateBaselineRequest) GetTagIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.TagIds) {
		return nil, false
	}
	return o.TagIds, true
}

// HasTagIds returns a boolean if a field has been set.
func (o *UpdateBaselineRequest) HasTagIds() bool {
	if o != nil && !IsNil(o.TagIds) {
		return true
	}

	return false
}

// SetTagIds gets a reference to the given []string and assigns it to the TagIds field.
func (o *UpdateBaselineRequest) SetTagIds(v []string) {
	o.TagIds = v
}

// GetPayload returns the Payload field value if set, zero value otherwise.
func (o *UpdateBaselineRequest) GetPayload() UpdateBaselineRequestPayload {
	if o == nil || IsNil(o.Payload) {
		var ret UpdateBaselineRequestPayload
		return ret
	}
	return *o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateBaselineRequest) GetPayloadOk() (*UpdateBaselineRequestPayload, bool) {
	if o == nil || IsNil(o.Payload) {
		return nil, false
	}
	return o.Payload, true
}

// HasPayload returns a boolean if a field has been set.
func (o *UpdateBaselineRequest) HasPayload() bool {
	if o != nil && !IsNil(o.Payload) {
		return true
	}

	return false
}

// SetPayload gets a reference to the given UpdateBaselineRequestPayload and assigns it to the Payload field.
func (o *UpdateBaselineRequest) SetPayload(v UpdateBaselineRequestPayload) {
	o.Payload = &v
}

func (o UpdateBaselineRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateBaselineRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GanttBaselineId) {
		toSerialize["ganttBaselineId"] = o.GanttBaselineId
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.TagIds) {
		toSerialize["tagIds"] = o.TagIds
	}
	if !IsNil(o.Payload) {
		toSerialize["payload"] = o.Payload
	}
	return toSerialize, nil
}

type NullableUpdateBaselineRequest struct {
	value *UpdateBaselineRequest
	isSet bool
}

func (v NullableUpdateBaselineRequest) Get() *UpdateBaselineRequest {
	return v.value
}

func (v *NullableUpdateBaselineRequest) Set(val *UpdateBaselineRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateBaselineRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateBaselineRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateBaselineRequest(val *UpdateBaselineRequest) *NullableUpdateBaselineRequest {
	return &NullableUpdateBaselineRequest{value: val, isSet: true}
}

func (v NullableUpdateBaselineRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateBaselineRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


