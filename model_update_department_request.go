/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateDepartmentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateDepartmentRequest{}

// UpdateDepartmentRequest struct for UpdateDepartmentRequest
type UpdateDepartmentRequest struct {
	// 企业 ID
	DeptId *string `json:"deptId,omitempty"`
	// 创建人 ID
	OperatorId *string `json:"operatorId,omitempty"`
	// 部门负责人 ID
	LeaderId *string `json:"leaderId,omitempty"`
	// 部门名称
	Name *string `json:"name,omitempty"`
}

// NewUpdateDepartmentRequest instantiates a new UpdateDepartmentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateDepartmentRequest() *UpdateDepartmentRequest {
	this := UpdateDepartmentRequest{}
	return &this
}

// NewUpdateDepartmentRequestWithDefaults instantiates a new UpdateDepartmentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateDepartmentRequestWithDefaults() *UpdateDepartmentRequest {
	this := UpdateDepartmentRequest{}
	return &this
}

// GetDeptId returns the DeptId field value if set, zero value otherwise.
func (o *UpdateDepartmentRequest) GetDeptId() string {
	if o == nil || IsNil(o.DeptId) {
		var ret string
		return ret
	}
	return *o.DeptId
}

// GetDeptIdOk returns a tuple with the DeptId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDepartmentRequest) GetDeptIdOk() (*string, bool) {
	if o == nil || IsNil(o.DeptId) {
		return nil, false
	}
	return o.DeptId, true
}

// HasDeptId returns a boolean if a field has been set.
func (o *UpdateDepartmentRequest) HasDeptId() bool {
	if o != nil && !IsNil(o.DeptId) {
		return true
	}

	return false
}

// SetDeptId gets a reference to the given string and assigns it to the DeptId field.
func (o *UpdateDepartmentRequest) SetDeptId(v string) {
	o.DeptId = &v
}

// GetOperatorId returns the OperatorId field value if set, zero value otherwise.
func (o *UpdateDepartmentRequest) GetOperatorId() string {
	if o == nil || IsNil(o.OperatorId) {
		var ret string
		return ret
	}
	return *o.OperatorId
}

// GetOperatorIdOk returns a tuple with the OperatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDepartmentRequest) GetOperatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.OperatorId) {
		return nil, false
	}
	return o.OperatorId, true
}

// HasOperatorId returns a boolean if a field has been set.
func (o *UpdateDepartmentRequest) HasOperatorId() bool {
	if o != nil && !IsNil(o.OperatorId) {
		return true
	}

	return false
}

// SetOperatorId gets a reference to the given string and assigns it to the OperatorId field.
func (o *UpdateDepartmentRequest) SetOperatorId(v string) {
	o.OperatorId = &v
}

// GetLeaderId returns the LeaderId field value if set, zero value otherwise.
func (o *UpdateDepartmentRequest) GetLeaderId() string {
	if o == nil || IsNil(o.LeaderId) {
		var ret string
		return ret
	}
	return *o.LeaderId
}

// GetLeaderIdOk returns a tuple with the LeaderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDepartmentRequest) GetLeaderIdOk() (*string, bool) {
	if o == nil || IsNil(o.LeaderId) {
		return nil, false
	}
	return o.LeaderId, true
}

// HasLeaderId returns a boolean if a field has been set.
func (o *UpdateDepartmentRequest) HasLeaderId() bool {
	if o != nil && !IsNil(o.LeaderId) {
		return true
	}

	return false
}

// SetLeaderId gets a reference to the given string and assigns it to the LeaderId field.
func (o *UpdateDepartmentRequest) SetLeaderId(v string) {
	o.LeaderId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateDepartmentRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDepartmentRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateDepartmentRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateDepartmentRequest) SetName(v string) {
	o.Name = &v
}

func (o UpdateDepartmentRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateDepartmentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeptId) {
		toSerialize["deptId"] = o.DeptId
	}
	if !IsNil(o.OperatorId) {
		toSerialize["operatorId"] = o.OperatorId
	}
	if !IsNil(o.LeaderId) {
		toSerialize["leaderId"] = o.LeaderId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableUpdateDepartmentRequest struct {
	value *UpdateDepartmentRequest
	isSet bool
}

func (v NullableUpdateDepartmentRequest) Get() *UpdateDepartmentRequest {
	return v.value
}

func (v *NullableUpdateDepartmentRequest) Set(val *UpdateDepartmentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateDepartmentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateDepartmentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateDepartmentRequest(val *UpdateDepartmentRequest) *NullableUpdateDepartmentRequest {
	return &NullableUpdateDepartmentRequest{value: val, isSet: true}
}

func (v NullableUpdateDepartmentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateDepartmentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


