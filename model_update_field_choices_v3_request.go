/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateFieldChoicesV3Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateFieldChoicesV3Request{}

// UpdateFieldChoicesV3Request struct for UpdateFieldChoicesV3Request
type UpdateFieldChoicesV3Request struct {
	// 新增的选项
	AddChoices []string `json:"addChoices,omitempty"`
	// 删除的选项
	RemoveChoices []string `json:"removeChoices,omitempty"`
}

// NewUpdateFieldChoicesV3Request instantiates a new UpdateFieldChoicesV3Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateFieldChoicesV3Request() *UpdateFieldChoicesV3Request {
	this := UpdateFieldChoicesV3Request{}
	return &this
}

// NewUpdateFieldChoicesV3RequestWithDefaults instantiates a new UpdateFieldChoicesV3Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateFieldChoicesV3RequestWithDefaults() *UpdateFieldChoicesV3Request {
	this := UpdateFieldChoicesV3Request{}
	return &this
}

// GetAddChoices returns the AddChoices field value if set, zero value otherwise.
func (o *UpdateFieldChoicesV3Request) GetAddChoices() []string {
	if o == nil || IsNil(o.AddChoices) {
		var ret []string
		return ret
	}
	return o.AddChoices
}

// GetAddChoicesOk returns a tuple with the AddChoices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateFieldChoicesV3Request) GetAddChoicesOk() ([]string, bool) {
	if o == nil || IsNil(o.AddChoices) {
		return nil, false
	}
	return o.AddChoices, true
}

// HasAddChoices returns a boolean if a field has been set.
func (o *UpdateFieldChoicesV3Request) HasAddChoices() bool {
	if o != nil && !IsNil(o.AddChoices) {
		return true
	}

	return false
}

// SetAddChoices gets a reference to the given []string and assigns it to the AddChoices field.
func (o *UpdateFieldChoicesV3Request) SetAddChoices(v []string) {
	o.AddChoices = v
}

// GetRemoveChoices returns the RemoveChoices field value if set, zero value otherwise.
func (o *UpdateFieldChoicesV3Request) GetRemoveChoices() []string {
	if o == nil || IsNil(o.RemoveChoices) {
		var ret []string
		return ret
	}
	return o.RemoveChoices
}

// GetRemoveChoicesOk returns a tuple with the RemoveChoices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateFieldChoicesV3Request) GetRemoveChoicesOk() ([]string, bool) {
	if o == nil || IsNil(o.RemoveChoices) {
		return nil, false
	}
	return o.RemoveChoices, true
}

// HasRemoveChoices returns a boolean if a field has been set.
func (o *UpdateFieldChoicesV3Request) HasRemoveChoices() bool {
	if o != nil && !IsNil(o.RemoveChoices) {
		return true
	}

	return false
}

// SetRemoveChoices gets a reference to the given []string and assigns it to the RemoveChoices field.
func (o *UpdateFieldChoicesV3Request) SetRemoveChoices(v []string) {
	o.RemoveChoices = v
}

func (o UpdateFieldChoicesV3Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateFieldChoicesV3Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AddChoices) {
		toSerialize["addChoices"] = o.AddChoices
	}
	if !IsNil(o.RemoveChoices) {
		toSerialize["removeChoices"] = o.RemoveChoices
	}
	return toSerialize, nil
}

type NullableUpdateFieldChoicesV3Request struct {
	value *UpdateFieldChoicesV3Request
	isSet bool
}

func (v NullableUpdateFieldChoicesV3Request) Get() *UpdateFieldChoicesV3Request {
	return v.value
}

func (v *NullableUpdateFieldChoicesV3Request) Set(val *UpdateFieldChoicesV3Request) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateFieldChoicesV3Request) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateFieldChoicesV3Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateFieldChoicesV3Request(val *UpdateFieldChoicesV3Request) *NullableUpdateFieldChoicesV3Request {
	return &NullableUpdateFieldChoicesV3Request{value: val, isSet: true}
}

func (v NullableUpdateFieldChoicesV3Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateFieldChoicesV3Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


