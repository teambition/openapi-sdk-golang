/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateFolderVisibilityRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateFolderVisibilityRequest{}

// UpdateFolderVisibilityRequest struct for UpdateFolderVisibilityRequest
type UpdateFolderVisibilityRequest struct {
	// 隐私性, members 是项目成员可访问, involves 是仅项目参与者可访问
	Visible *string `json:"visible,omitempty"`
	// 参与者用户ID集合
	MemberUserIds []string `json:"memberUserIds,omitempty"`
}

// NewUpdateFolderVisibilityRequest instantiates a new UpdateFolderVisibilityRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateFolderVisibilityRequest() *UpdateFolderVisibilityRequest {
	this := UpdateFolderVisibilityRequest{}
	return &this
}

// NewUpdateFolderVisibilityRequestWithDefaults instantiates a new UpdateFolderVisibilityRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateFolderVisibilityRequestWithDefaults() *UpdateFolderVisibilityRequest {
	this := UpdateFolderVisibilityRequest{}
	return &this
}

// GetVisible returns the Visible field value if set, zero value otherwise.
func (o *UpdateFolderVisibilityRequest) GetVisible() string {
	if o == nil || IsNil(o.Visible) {
		var ret string
		return ret
	}
	return *o.Visible
}

// GetVisibleOk returns a tuple with the Visible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateFolderVisibilityRequest) GetVisibleOk() (*string, bool) {
	if o == nil || IsNil(o.Visible) {
		return nil, false
	}
	return o.Visible, true
}

// HasVisible returns a boolean if a field has been set.
func (o *UpdateFolderVisibilityRequest) HasVisible() bool {
	if o != nil && !IsNil(o.Visible) {
		return true
	}

	return false
}

// SetVisible gets a reference to the given string and assigns it to the Visible field.
func (o *UpdateFolderVisibilityRequest) SetVisible(v string) {
	o.Visible = &v
}

// GetMemberUserIds returns the MemberUserIds field value if set, zero value otherwise.
func (o *UpdateFolderVisibilityRequest) GetMemberUserIds() []string {
	if o == nil || IsNil(o.MemberUserIds) {
		var ret []string
		return ret
	}
	return o.MemberUserIds
}

// GetMemberUserIdsOk returns a tuple with the MemberUserIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateFolderVisibilityRequest) GetMemberUserIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.MemberUserIds) {
		return nil, false
	}
	return o.MemberUserIds, true
}

// HasMemberUserIds returns a boolean if a field has been set.
func (o *UpdateFolderVisibilityRequest) HasMemberUserIds() bool {
	if o != nil && !IsNil(o.MemberUserIds) {
		return true
	}

	return false
}

// SetMemberUserIds gets a reference to the given []string and assigns it to the MemberUserIds field.
func (o *UpdateFolderVisibilityRequest) SetMemberUserIds(v []string) {
	o.MemberUserIds = v
}

func (o UpdateFolderVisibilityRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateFolderVisibilityRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Visible) {
		toSerialize["visible"] = o.Visible
	}
	if !IsNil(o.MemberUserIds) {
		toSerialize["memberUserIds"] = o.MemberUserIds
	}
	return toSerialize, nil
}

type NullableUpdateFolderVisibilityRequest struct {
	value *UpdateFolderVisibilityRequest
	isSet bool
}

func (v NullableUpdateFolderVisibilityRequest) Get() *UpdateFolderVisibilityRequest {
	return v.value
}

func (v *NullableUpdateFolderVisibilityRequest) Set(val *UpdateFolderVisibilityRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateFolderVisibilityRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateFolderVisibilityRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateFolderVisibilityRequest(val *UpdateFolderVisibilityRequest) *NullableUpdateFolderVisibilityRequest {
	return &NullableUpdateFolderVisibilityRequest{value: val, isSet: true}
}

func (v NullableUpdateFolderVisibilityRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateFolderVisibilityRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


