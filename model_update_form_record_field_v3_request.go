/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateFormRecordFieldV3Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateFormRecordFieldV3Request{}

// UpdateFormRecordFieldV3Request 修改自定义字段请求
type UpdateFormRecordFieldV3Request struct {
	// 自定义字段别名
	CustomfieldAlias *string `json:"customfieldAlias,omitempty"`
	// 自定义字段ID(如果提供自定义字段别名 则忽略)
	CustomfieldId *string `json:"customfieldId,omitempty"`
	// 字段值集合
	Value []UpdateFormRecordFieldV3RequestValueInner `json:"value,omitempty"`
}

// NewUpdateFormRecordFieldV3Request instantiates a new UpdateFormRecordFieldV3Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateFormRecordFieldV3Request() *UpdateFormRecordFieldV3Request {
	this := UpdateFormRecordFieldV3Request{}
	return &this
}

// NewUpdateFormRecordFieldV3RequestWithDefaults instantiates a new UpdateFormRecordFieldV3Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateFormRecordFieldV3RequestWithDefaults() *UpdateFormRecordFieldV3Request {
	this := UpdateFormRecordFieldV3Request{}
	return &this
}

// GetCustomfieldAlias returns the CustomfieldAlias field value if set, zero value otherwise.
func (o *UpdateFormRecordFieldV3Request) GetCustomfieldAlias() string {
	if o == nil || IsNil(o.CustomfieldAlias) {
		var ret string
		return ret
	}
	return *o.CustomfieldAlias
}

// GetCustomfieldAliasOk returns a tuple with the CustomfieldAlias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateFormRecordFieldV3Request) GetCustomfieldAliasOk() (*string, bool) {
	if o == nil || IsNil(o.CustomfieldAlias) {
		return nil, false
	}
	return o.CustomfieldAlias, true
}

// HasCustomfieldAlias returns a boolean if a field has been set.
func (o *UpdateFormRecordFieldV3Request) HasCustomfieldAlias() bool {
	if o != nil && !IsNil(o.CustomfieldAlias) {
		return true
	}

	return false
}

// SetCustomfieldAlias gets a reference to the given string and assigns it to the CustomfieldAlias field.
func (o *UpdateFormRecordFieldV3Request) SetCustomfieldAlias(v string) {
	o.CustomfieldAlias = &v
}

// GetCustomfieldId returns the CustomfieldId field value if set, zero value otherwise.
func (o *UpdateFormRecordFieldV3Request) GetCustomfieldId() string {
	if o == nil || IsNil(o.CustomfieldId) {
		var ret string
		return ret
	}
	return *o.CustomfieldId
}

// GetCustomfieldIdOk returns a tuple with the CustomfieldId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateFormRecordFieldV3Request) GetCustomfieldIdOk() (*string, bool) {
	if o == nil || IsNil(o.CustomfieldId) {
		return nil, false
	}
	return o.CustomfieldId, true
}

// HasCustomfieldId returns a boolean if a field has been set.
func (o *UpdateFormRecordFieldV3Request) HasCustomfieldId() bool {
	if o != nil && !IsNil(o.CustomfieldId) {
		return true
	}

	return false
}

// SetCustomfieldId gets a reference to the given string and assigns it to the CustomfieldId field.
func (o *UpdateFormRecordFieldV3Request) SetCustomfieldId(v string) {
	o.CustomfieldId = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *UpdateFormRecordFieldV3Request) GetValue() []UpdateFormRecordFieldV3RequestValueInner {
	if o == nil || IsNil(o.Value) {
		var ret []UpdateFormRecordFieldV3RequestValueInner
		return ret
	}
	return o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateFormRecordFieldV3Request) GetValueOk() ([]UpdateFormRecordFieldV3RequestValueInner, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *UpdateFormRecordFieldV3Request) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given []UpdateFormRecordFieldV3RequestValueInner and assigns it to the Value field.
func (o *UpdateFormRecordFieldV3Request) SetValue(v []UpdateFormRecordFieldV3RequestValueInner) {
	o.Value = v
}

func (o UpdateFormRecordFieldV3Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateFormRecordFieldV3Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CustomfieldAlias) {
		toSerialize["customfieldAlias"] = o.CustomfieldAlias
	}
	if !IsNil(o.CustomfieldId) {
		toSerialize["customfieldId"] = o.CustomfieldId
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableUpdateFormRecordFieldV3Request struct {
	value *UpdateFormRecordFieldV3Request
	isSet bool
}

func (v NullableUpdateFormRecordFieldV3Request) Get() *UpdateFormRecordFieldV3Request {
	return v.value
}

func (v *NullableUpdateFormRecordFieldV3Request) Set(val *UpdateFormRecordFieldV3Request) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateFormRecordFieldV3Request) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateFormRecordFieldV3Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateFormRecordFieldV3Request(val *UpdateFormRecordFieldV3Request) *NullableUpdateFormRecordFieldV3Request {
	return &NullableUpdateFormRecordFieldV3Request{value: val, isSet: true}
}

func (v NullableUpdateFormRecordFieldV3Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateFormRecordFieldV3Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


