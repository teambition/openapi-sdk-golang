/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateGroupRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateGroupRequest{}

// UpdateGroupRequest struct for UpdateGroupRequest
type UpdateGroupRequest struct {
	// 操作人 ID
	OperatorId *string `json:"operatorId,omitempty"`
	// 群组 ID
	GroupId *string `json:"groupId,omitempty"`
	// 群组名称
	Name *string `json:"name,omitempty"`
	// 群组 logo
	Logo *string `json:"logo,omitempty"`
}

// NewUpdateGroupRequest instantiates a new UpdateGroupRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateGroupRequest() *UpdateGroupRequest {
	this := UpdateGroupRequest{}
	return &this
}

// NewUpdateGroupRequestWithDefaults instantiates a new UpdateGroupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateGroupRequestWithDefaults() *UpdateGroupRequest {
	this := UpdateGroupRequest{}
	return &this
}

// GetOperatorId returns the OperatorId field value if set, zero value otherwise.
func (o *UpdateGroupRequest) GetOperatorId() string {
	if o == nil || IsNil(o.OperatorId) {
		var ret string
		return ret
	}
	return *o.OperatorId
}

// GetOperatorIdOk returns a tuple with the OperatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateGroupRequest) GetOperatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.OperatorId) {
		return nil, false
	}
	return o.OperatorId, true
}

// HasOperatorId returns a boolean if a field has been set.
func (o *UpdateGroupRequest) HasOperatorId() bool {
	if o != nil && !IsNil(o.OperatorId) {
		return true
	}

	return false
}

// SetOperatorId gets a reference to the given string and assigns it to the OperatorId field.
func (o *UpdateGroupRequest) SetOperatorId(v string) {
	o.OperatorId = &v
}

// GetGroupId returns the GroupId field value if set, zero value otherwise.
func (o *UpdateGroupRequest) GetGroupId() string {
	if o == nil || IsNil(o.GroupId) {
		var ret string
		return ret
	}
	return *o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateGroupRequest) GetGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.GroupId) {
		return nil, false
	}
	return o.GroupId, true
}

// HasGroupId returns a boolean if a field has been set.
func (o *UpdateGroupRequest) HasGroupId() bool {
	if o != nil && !IsNil(o.GroupId) {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given string and assigns it to the GroupId field.
func (o *UpdateGroupRequest) SetGroupId(v string) {
	o.GroupId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateGroupRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateGroupRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateGroupRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateGroupRequest) SetName(v string) {
	o.Name = &v
}

// GetLogo returns the Logo field value if set, zero value otherwise.
func (o *UpdateGroupRequest) GetLogo() string {
	if o == nil || IsNil(o.Logo) {
		var ret string
		return ret
	}
	return *o.Logo
}

// GetLogoOk returns a tuple with the Logo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateGroupRequest) GetLogoOk() (*string, bool) {
	if o == nil || IsNil(o.Logo) {
		return nil, false
	}
	return o.Logo, true
}

// HasLogo returns a boolean if a field has been set.
func (o *UpdateGroupRequest) HasLogo() bool {
	if o != nil && !IsNil(o.Logo) {
		return true
	}

	return false
}

// SetLogo gets a reference to the given string and assigns it to the Logo field.
func (o *UpdateGroupRequest) SetLogo(v string) {
	o.Logo = &v
}

func (o UpdateGroupRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateGroupRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OperatorId) {
		toSerialize["operatorId"] = o.OperatorId
	}
	if !IsNil(o.GroupId) {
		toSerialize["groupId"] = o.GroupId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Logo) {
		toSerialize["logo"] = o.Logo
	}
	return toSerialize, nil
}

type NullableUpdateGroupRequest struct {
	value *UpdateGroupRequest
	isSet bool
}

func (v NullableUpdateGroupRequest) Get() *UpdateGroupRequest {
	return v.value
}

func (v *NullableUpdateGroupRequest) Set(val *UpdateGroupRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateGroupRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateGroupRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateGroupRequest(val *UpdateGroupRequest) *NullableUpdateGroupRequest {
	return &NullableUpdateGroupRequest{value: val, isSet: true}
}

func (v NullableUpdateGroupRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateGroupRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


