/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateOrgMemberRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateOrgMemberRequest{}

// UpdateOrgMemberRequest struct for UpdateOrgMemberRequest
type UpdateOrgMemberRequest struct {
	// 操作人 ID
	OperatorId *string `json:"operatorId,omitempty"`
	Members []UpdateOrgMemberRequestMembersInner `json:"members,omitempty"`
}

// NewUpdateOrgMemberRequest instantiates a new UpdateOrgMemberRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateOrgMemberRequest() *UpdateOrgMemberRequest {
	this := UpdateOrgMemberRequest{}
	return &this
}

// NewUpdateOrgMemberRequestWithDefaults instantiates a new UpdateOrgMemberRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateOrgMemberRequestWithDefaults() *UpdateOrgMemberRequest {
	this := UpdateOrgMemberRequest{}
	return &this
}

// GetOperatorId returns the OperatorId field value if set, zero value otherwise.
func (o *UpdateOrgMemberRequest) GetOperatorId() string {
	if o == nil || IsNil(o.OperatorId) {
		var ret string
		return ret
	}
	return *o.OperatorId
}

// GetOperatorIdOk returns a tuple with the OperatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrgMemberRequest) GetOperatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.OperatorId) {
		return nil, false
	}
	return o.OperatorId, true
}

// HasOperatorId returns a boolean if a field has been set.
func (o *UpdateOrgMemberRequest) HasOperatorId() bool {
	if o != nil && !IsNil(o.OperatorId) {
		return true
	}

	return false
}

// SetOperatorId gets a reference to the given string and assigns it to the OperatorId field.
func (o *UpdateOrgMemberRequest) SetOperatorId(v string) {
	o.OperatorId = &v
}

// GetMembers returns the Members field value if set, zero value otherwise.
func (o *UpdateOrgMemberRequest) GetMembers() []UpdateOrgMemberRequestMembersInner {
	if o == nil || IsNil(o.Members) {
		var ret []UpdateOrgMemberRequestMembersInner
		return ret
	}
	return o.Members
}

// GetMembersOk returns a tuple with the Members field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrgMemberRequest) GetMembersOk() ([]UpdateOrgMemberRequestMembersInner, bool) {
	if o == nil || IsNil(o.Members) {
		return nil, false
	}
	return o.Members, true
}

// HasMembers returns a boolean if a field has been set.
func (o *UpdateOrgMemberRequest) HasMembers() bool {
	if o != nil && !IsNil(o.Members) {
		return true
	}

	return false
}

// SetMembers gets a reference to the given []UpdateOrgMemberRequestMembersInner and assigns it to the Members field.
func (o *UpdateOrgMemberRequest) SetMembers(v []UpdateOrgMemberRequestMembersInner) {
	o.Members = v
}

func (o UpdateOrgMemberRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateOrgMemberRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OperatorId) {
		toSerialize["operatorId"] = o.OperatorId
	}
	if !IsNil(o.Members) {
		toSerialize["members"] = o.Members
	}
	return toSerialize, nil
}

type NullableUpdateOrgMemberRequest struct {
	value *UpdateOrgMemberRequest
	isSet bool
}

func (v NullableUpdateOrgMemberRequest) Get() *UpdateOrgMemberRequest {
	return v.value
}

func (v *NullableUpdateOrgMemberRequest) Set(val *UpdateOrgMemberRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateOrgMemberRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateOrgMemberRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateOrgMemberRequest(val *UpdateOrgMemberRequest) *NullableUpdateOrgMemberRequest {
	return &NullableUpdateOrgMemberRequest{value: val, isSet: true}
}

func (v NullableUpdateOrgMemberRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateOrgMemberRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


