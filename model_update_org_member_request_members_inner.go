/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateOrgMemberRequestMembersInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateOrgMemberRequestMembersInner{}

// UpdateOrgMemberRequestMembersInner struct for UpdateOrgMemberRequestMembersInner
type UpdateOrgMemberRequestMembersInner struct {
	// 用户 ID
	UserId string `json:"userId"`
	// 成员角色，取值为：-1: 外部成员, 0: 成员, 1: 管理员, 2: 拥有者。建议使用 roleId 更新成员角色。如果不传递 roleId，则使用 role 对应的默认角色更新, 如果同时传递了 roleId，则此值会被 roleId 对应的 role 覆盖。
	Role *int32 `json:"role,omitempty"`
	// 企业成员角色 ID，通过 [获取企业角色列表](api.operationId=GetOrgRoles) 查询企业角色
	RoleId *string `json:"roleId,omitempty"`
	Profile *UpdateOrgMemberRequestMembersInnerProfile `json:"profile,omitempty"`
}

// NewUpdateOrgMemberRequestMembersInner instantiates a new UpdateOrgMemberRequestMembersInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateOrgMemberRequestMembersInner(userId string) *UpdateOrgMemberRequestMembersInner {
	this := UpdateOrgMemberRequestMembersInner{}
	this.UserId = userId
	return &this
}

// NewUpdateOrgMemberRequestMembersInnerWithDefaults instantiates a new UpdateOrgMemberRequestMembersInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateOrgMemberRequestMembersInnerWithDefaults() *UpdateOrgMemberRequestMembersInner {
	this := UpdateOrgMemberRequestMembersInner{}
	return &this
}

// GetUserId returns the UserId field value
func (o *UpdateOrgMemberRequestMembersInner) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *UpdateOrgMemberRequestMembersInner) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *UpdateOrgMemberRequestMembersInner) SetUserId(v string) {
	o.UserId = v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *UpdateOrgMemberRequestMembersInner) GetRole() int32 {
	if o == nil || IsNil(o.Role) {
		var ret int32
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrgMemberRequestMembersInner) GetRoleOk() (*int32, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *UpdateOrgMemberRequestMembersInner) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given int32 and assigns it to the Role field.
func (o *UpdateOrgMemberRequestMembersInner) SetRole(v int32) {
	o.Role = &v
}

// GetRoleId returns the RoleId field value if set, zero value otherwise.
func (o *UpdateOrgMemberRequestMembersInner) GetRoleId() string {
	if o == nil || IsNil(o.RoleId) {
		var ret string
		return ret
	}
	return *o.RoleId
}

// GetRoleIdOk returns a tuple with the RoleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrgMemberRequestMembersInner) GetRoleIdOk() (*string, bool) {
	if o == nil || IsNil(o.RoleId) {
		return nil, false
	}
	return o.RoleId, true
}

// HasRoleId returns a boolean if a field has been set.
func (o *UpdateOrgMemberRequestMembersInner) HasRoleId() bool {
	if o != nil && !IsNil(o.RoleId) {
		return true
	}

	return false
}

// SetRoleId gets a reference to the given string and assigns it to the RoleId field.
func (o *UpdateOrgMemberRequestMembersInner) SetRoleId(v string) {
	o.RoleId = &v
}

// GetProfile returns the Profile field value if set, zero value otherwise.
func (o *UpdateOrgMemberRequestMembersInner) GetProfile() UpdateOrgMemberRequestMembersInnerProfile {
	if o == nil || IsNil(o.Profile) {
		var ret UpdateOrgMemberRequestMembersInnerProfile
		return ret
	}
	return *o.Profile
}

// GetProfileOk returns a tuple with the Profile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrgMemberRequestMembersInner) GetProfileOk() (*UpdateOrgMemberRequestMembersInnerProfile, bool) {
	if o == nil || IsNil(o.Profile) {
		return nil, false
	}
	return o.Profile, true
}

// HasProfile returns a boolean if a field has been set.
func (o *UpdateOrgMemberRequestMembersInner) HasProfile() bool {
	if o != nil && !IsNil(o.Profile) {
		return true
	}

	return false
}

// SetProfile gets a reference to the given UpdateOrgMemberRequestMembersInnerProfile and assigns it to the Profile field.
func (o *UpdateOrgMemberRequestMembersInner) SetProfile(v UpdateOrgMemberRequestMembersInnerProfile) {
	o.Profile = &v
}

func (o UpdateOrgMemberRequestMembersInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateOrgMemberRequestMembersInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["userId"] = o.UserId
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	if !IsNil(o.RoleId) {
		toSerialize["roleId"] = o.RoleId
	}
	if !IsNil(o.Profile) {
		toSerialize["profile"] = o.Profile
	}
	return toSerialize, nil
}

type NullableUpdateOrgMemberRequestMembersInner struct {
	value *UpdateOrgMemberRequestMembersInner
	isSet bool
}

func (v NullableUpdateOrgMemberRequestMembersInner) Get() *UpdateOrgMemberRequestMembersInner {
	return v.value
}

func (v *NullableUpdateOrgMemberRequestMembersInner) Set(val *UpdateOrgMemberRequestMembersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateOrgMemberRequestMembersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateOrgMemberRequestMembersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateOrgMemberRequestMembersInner(val *UpdateOrgMemberRequestMembersInner) *NullableUpdateOrgMemberRequestMembersInner {
	return &NullableUpdateOrgMemberRequestMembersInner{value: val, isSet: true}
}

func (v NullableUpdateOrgMemberRequestMembersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateOrgMemberRequestMembersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


