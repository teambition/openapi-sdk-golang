/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateOrgProjectRoleV3Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateOrgProjectRoleV3Request{}

// UpdateOrgProjectRoleV3Request struct for UpdateOrgProjectRoleV3Request
type UpdateOrgProjectRoleV3Request struct {
	// 角色名称
	Name *string `json:"name,omitempty"`
	// 企业 ID
	OrganizationId *string `json:"organizationId,omitempty"`
	Permissions []string `json:"permissions,omitempty"`
}

// NewUpdateOrgProjectRoleV3Request instantiates a new UpdateOrgProjectRoleV3Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateOrgProjectRoleV3Request() *UpdateOrgProjectRoleV3Request {
	this := UpdateOrgProjectRoleV3Request{}
	return &this
}

// NewUpdateOrgProjectRoleV3RequestWithDefaults instantiates a new UpdateOrgProjectRoleV3Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateOrgProjectRoleV3RequestWithDefaults() *UpdateOrgProjectRoleV3Request {
	this := UpdateOrgProjectRoleV3Request{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateOrgProjectRoleV3Request) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrgProjectRoleV3Request) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateOrgProjectRoleV3Request) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateOrgProjectRoleV3Request) SetName(v string) {
	o.Name = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *UpdateOrgProjectRoleV3Request) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrgProjectRoleV3Request) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *UpdateOrgProjectRoleV3Request) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *UpdateOrgProjectRoleV3Request) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *UpdateOrgProjectRoleV3Request) GetPermissions() []string {
	if o == nil || IsNil(o.Permissions) {
		var ret []string
		return ret
	}
	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrgProjectRoleV3Request) GetPermissionsOk() ([]string, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *UpdateOrgProjectRoleV3Request) HasPermissions() bool {
	if o != nil && !IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []string and assigns it to the Permissions field.
func (o *UpdateOrgProjectRoleV3Request) SetPermissions(v []string) {
	o.Permissions = v
}

func (o UpdateOrgProjectRoleV3Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateOrgProjectRoleV3Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if !IsNil(o.Permissions) {
		toSerialize["permissions"] = o.Permissions
	}
	return toSerialize, nil
}

type NullableUpdateOrgProjectRoleV3Request struct {
	value *UpdateOrgProjectRoleV3Request
	isSet bool
}

func (v NullableUpdateOrgProjectRoleV3Request) Get() *UpdateOrgProjectRoleV3Request {
	return v.value
}

func (v *NullableUpdateOrgProjectRoleV3Request) Set(val *UpdateOrgProjectRoleV3Request) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateOrgProjectRoleV3Request) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateOrgProjectRoleV3Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateOrgProjectRoleV3Request(val *UpdateOrgProjectRoleV3Request) *NullableUpdateOrgProjectRoleV3Request {
	return &NullableUpdateOrgProjectRoleV3Request{value: val, isSet: true}
}

func (v NullableUpdateOrgProjectRoleV3Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateOrgProjectRoleV3Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


