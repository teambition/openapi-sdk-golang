/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateProjectCodeRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateProjectCodeRequest{}

// UpdateProjectCodeRequest struct for UpdateProjectCodeRequest
type UpdateProjectCodeRequest struct {
	// 项目编号
	UniqueIdPrefix *string `json:"uniqueIdPrefix,omitempty"`
	// 是否启用项目编号应用
	IsEnableTaskUniqueIdApp *bool `json:"isEnableTaskUniqueIdApp,omitempty"`
}

// NewUpdateProjectCodeRequest instantiates a new UpdateProjectCodeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateProjectCodeRequest() *UpdateProjectCodeRequest {
	this := UpdateProjectCodeRequest{}
	return &this
}

// NewUpdateProjectCodeRequestWithDefaults instantiates a new UpdateProjectCodeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateProjectCodeRequestWithDefaults() *UpdateProjectCodeRequest {
	this := UpdateProjectCodeRequest{}
	return &this
}

// GetUniqueIdPrefix returns the UniqueIdPrefix field value if set, zero value otherwise.
func (o *UpdateProjectCodeRequest) GetUniqueIdPrefix() string {
	if o == nil || IsNil(o.UniqueIdPrefix) {
		var ret string
		return ret
	}
	return *o.UniqueIdPrefix
}

// GetUniqueIdPrefixOk returns a tuple with the UniqueIdPrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProjectCodeRequest) GetUniqueIdPrefixOk() (*string, bool) {
	if o == nil || IsNil(o.UniqueIdPrefix) {
		return nil, false
	}
	return o.UniqueIdPrefix, true
}

// HasUniqueIdPrefix returns a boolean if a field has been set.
func (o *UpdateProjectCodeRequest) HasUniqueIdPrefix() bool {
	if o != nil && !IsNil(o.UniqueIdPrefix) {
		return true
	}

	return false
}

// SetUniqueIdPrefix gets a reference to the given string and assigns it to the UniqueIdPrefix field.
func (o *UpdateProjectCodeRequest) SetUniqueIdPrefix(v string) {
	o.UniqueIdPrefix = &v
}

// GetIsEnableTaskUniqueIdApp returns the IsEnableTaskUniqueIdApp field value if set, zero value otherwise.
func (o *UpdateProjectCodeRequest) GetIsEnableTaskUniqueIdApp() bool {
	if o == nil || IsNil(o.IsEnableTaskUniqueIdApp) {
		var ret bool
		return ret
	}
	return *o.IsEnableTaskUniqueIdApp
}

// GetIsEnableTaskUniqueIdAppOk returns a tuple with the IsEnableTaskUniqueIdApp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProjectCodeRequest) GetIsEnableTaskUniqueIdAppOk() (*bool, bool) {
	if o == nil || IsNil(o.IsEnableTaskUniqueIdApp) {
		return nil, false
	}
	return o.IsEnableTaskUniqueIdApp, true
}

// HasIsEnableTaskUniqueIdApp returns a boolean if a field has been set.
func (o *UpdateProjectCodeRequest) HasIsEnableTaskUniqueIdApp() bool {
	if o != nil && !IsNil(o.IsEnableTaskUniqueIdApp) {
		return true
	}

	return false
}

// SetIsEnableTaskUniqueIdApp gets a reference to the given bool and assigns it to the IsEnableTaskUniqueIdApp field.
func (o *UpdateProjectCodeRequest) SetIsEnableTaskUniqueIdApp(v bool) {
	o.IsEnableTaskUniqueIdApp = &v
}

func (o UpdateProjectCodeRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateProjectCodeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UniqueIdPrefix) {
		toSerialize["uniqueIdPrefix"] = o.UniqueIdPrefix
	}
	if !IsNil(o.IsEnableTaskUniqueIdApp) {
		toSerialize["isEnableTaskUniqueIdApp"] = o.IsEnableTaskUniqueIdApp
	}
	return toSerialize, nil
}

type NullableUpdateProjectCodeRequest struct {
	value *UpdateProjectCodeRequest
	isSet bool
}

func (v NullableUpdateProjectCodeRequest) Get() *UpdateProjectCodeRequest {
	return v.value
}

func (v *NullableUpdateProjectCodeRequest) Set(val *UpdateProjectCodeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateProjectCodeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateProjectCodeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateProjectCodeRequest(val *UpdateProjectCodeRequest) *NullableUpdateProjectCodeRequest {
	return &NullableUpdateProjectCodeRequest{value: val, isSet: true}
}

func (v NullableUpdateProjectCodeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateProjectCodeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


