/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the UpdateProjectCodeResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateProjectCodeResponseResult{}

// UpdateProjectCodeResponseResult 项目编号更新响应
type UpdateProjectCodeResponseResult struct {
	// 更新时间
	Updated *time.Time `json:"updated,omitempty"`
}

// NewUpdateProjectCodeResponseResult instantiates a new UpdateProjectCodeResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateProjectCodeResponseResult() *UpdateProjectCodeResponseResult {
	this := UpdateProjectCodeResponseResult{}
	return &this
}

// NewUpdateProjectCodeResponseResultWithDefaults instantiates a new UpdateProjectCodeResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateProjectCodeResponseResultWithDefaults() *UpdateProjectCodeResponseResult {
	this := UpdateProjectCodeResponseResult{}
	return &this
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *UpdateProjectCodeResponseResult) GetUpdated() time.Time {
	if o == nil || IsNil(o.Updated) {
		var ret time.Time
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProjectCodeResponseResult) GetUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Updated) {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *UpdateProjectCodeResponseResult) HasUpdated() bool {
	if o != nil && !IsNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given time.Time and assigns it to the Updated field.
func (o *UpdateProjectCodeResponseResult) SetUpdated(v time.Time) {
	o.Updated = &v
}

func (o UpdateProjectCodeResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateProjectCodeResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Updated) {
		toSerialize["updated"] = o.Updated
	}
	return toSerialize, nil
}

type NullableUpdateProjectCodeResponseResult struct {
	value *UpdateProjectCodeResponseResult
	isSet bool
}

func (v NullableUpdateProjectCodeResponseResult) Get() *UpdateProjectCodeResponseResult {
	return v.value
}

func (v *NullableUpdateProjectCodeResponseResult) Set(val *UpdateProjectCodeResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateProjectCodeResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateProjectCodeResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateProjectCodeResponseResult(val *UpdateProjectCodeResponseResult) *NullableUpdateProjectCodeResponseResult {
	return &NullableUpdateProjectCodeResponseResult{value: val, isSet: true}
}

func (v NullableUpdateProjectCodeResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateProjectCodeResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


