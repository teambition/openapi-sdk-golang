/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateProjectCustomFieldPositionResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateProjectCustomFieldPositionResponseResult{}

// UpdateProjectCustomFieldPositionResponseResult struct for UpdateProjectCustomFieldPositionResponseResult
type UpdateProjectCustomFieldPositionResponseResult struct {
	// 字段linkId
	Id *string `json:"_id,omitempty"`
	// 更新后的字段位置
	Pos *float32 `json:"pos,omitempty"`
	// 更新时间
	Updated *string `json:"updated,omitempty"`
}

// NewUpdateProjectCustomFieldPositionResponseResult instantiates a new UpdateProjectCustomFieldPositionResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateProjectCustomFieldPositionResponseResult() *UpdateProjectCustomFieldPositionResponseResult {
	this := UpdateProjectCustomFieldPositionResponseResult{}
	return &this
}

// NewUpdateProjectCustomFieldPositionResponseResultWithDefaults instantiates a new UpdateProjectCustomFieldPositionResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateProjectCustomFieldPositionResponseResultWithDefaults() *UpdateProjectCustomFieldPositionResponseResult {
	this := UpdateProjectCustomFieldPositionResponseResult{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *UpdateProjectCustomFieldPositionResponseResult) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProjectCustomFieldPositionResponseResult) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *UpdateProjectCustomFieldPositionResponseResult) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *UpdateProjectCustomFieldPositionResponseResult) SetId(v string) {
	o.Id = &v
}

// GetPos returns the Pos field value if set, zero value otherwise.
func (o *UpdateProjectCustomFieldPositionResponseResult) GetPos() float32 {
	if o == nil || IsNil(o.Pos) {
		var ret float32
		return ret
	}
	return *o.Pos
}

// GetPosOk returns a tuple with the Pos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProjectCustomFieldPositionResponseResult) GetPosOk() (*float32, bool) {
	if o == nil || IsNil(o.Pos) {
		return nil, false
	}
	return o.Pos, true
}

// HasPos returns a boolean if a field has been set.
func (o *UpdateProjectCustomFieldPositionResponseResult) HasPos() bool {
	if o != nil && !IsNil(o.Pos) {
		return true
	}

	return false
}

// SetPos gets a reference to the given float32 and assigns it to the Pos field.
func (o *UpdateProjectCustomFieldPositionResponseResult) SetPos(v float32) {
	o.Pos = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *UpdateProjectCustomFieldPositionResponseResult) GetUpdated() string {
	if o == nil || IsNil(o.Updated) {
		var ret string
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProjectCustomFieldPositionResponseResult) GetUpdatedOk() (*string, bool) {
	if o == nil || IsNil(o.Updated) {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *UpdateProjectCustomFieldPositionResponseResult) HasUpdated() bool {
	if o != nil && !IsNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given string and assigns it to the Updated field.
func (o *UpdateProjectCustomFieldPositionResponseResult) SetUpdated(v string) {
	o.Updated = &v
}

func (o UpdateProjectCustomFieldPositionResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateProjectCustomFieldPositionResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["_id"] = o.Id
	}
	if !IsNil(o.Pos) {
		toSerialize["pos"] = o.Pos
	}
	if !IsNil(o.Updated) {
		toSerialize["updated"] = o.Updated
	}
	return toSerialize, nil
}

type NullableUpdateProjectCustomFieldPositionResponseResult struct {
	value *UpdateProjectCustomFieldPositionResponseResult
	isSet bool
}

func (v NullableUpdateProjectCustomFieldPositionResponseResult) Get() *UpdateProjectCustomFieldPositionResponseResult {
	return v.value
}

func (v *NullableUpdateProjectCustomFieldPositionResponseResult) Set(val *UpdateProjectCustomFieldPositionResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateProjectCustomFieldPositionResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateProjectCustomFieldPositionResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateProjectCustomFieldPositionResponseResult(val *UpdateProjectCustomFieldPositionResponseResult) *NullableUpdateProjectCustomFieldPositionResponseResult {
	return &NullableUpdateProjectCustomFieldPositionResponseResult{value: val, isSet: true}
}

func (v NullableUpdateProjectCustomFieldPositionResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateProjectCustomFieldPositionResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


