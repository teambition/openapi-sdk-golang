/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateProjectGroupV3Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateProjectGroupV3Request{}

// UpdateProjectGroupV3Request struct for UpdateProjectGroupV3Request
type UpdateProjectGroupV3Request struct {
	Name *string `json:"name,omitempty"`
	// 项目分组可见性，involves 私有项目分组, organization 公开项目分组
	Visible *string `json:"visible,omitempty"`
}

// NewUpdateProjectGroupV3Request instantiates a new UpdateProjectGroupV3Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateProjectGroupV3Request() *UpdateProjectGroupV3Request {
	this := UpdateProjectGroupV3Request{}
	return &this
}

// NewUpdateProjectGroupV3RequestWithDefaults instantiates a new UpdateProjectGroupV3Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateProjectGroupV3RequestWithDefaults() *UpdateProjectGroupV3Request {
	this := UpdateProjectGroupV3Request{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateProjectGroupV3Request) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProjectGroupV3Request) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateProjectGroupV3Request) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateProjectGroupV3Request) SetName(v string) {
	o.Name = &v
}

// GetVisible returns the Visible field value if set, zero value otherwise.
func (o *UpdateProjectGroupV3Request) GetVisible() string {
	if o == nil || IsNil(o.Visible) {
		var ret string
		return ret
	}
	return *o.Visible
}

// GetVisibleOk returns a tuple with the Visible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProjectGroupV3Request) GetVisibleOk() (*string, bool) {
	if o == nil || IsNil(o.Visible) {
		return nil, false
	}
	return o.Visible, true
}

// HasVisible returns a boolean if a field has been set.
func (o *UpdateProjectGroupV3Request) HasVisible() bool {
	if o != nil && !IsNil(o.Visible) {
		return true
	}

	return false
}

// SetVisible gets a reference to the given string and assigns it to the Visible field.
func (o *UpdateProjectGroupV3Request) SetVisible(v string) {
	o.Visible = &v
}

func (o UpdateProjectGroupV3Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateProjectGroupV3Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Visible) {
		toSerialize["visible"] = o.Visible
	}
	return toSerialize, nil
}

type NullableUpdateProjectGroupV3Request struct {
	value *UpdateProjectGroupV3Request
	isSet bool
}

func (v NullableUpdateProjectGroupV3Request) Get() *UpdateProjectGroupV3Request {
	return v.value
}

func (v *NullableUpdateProjectGroupV3Request) Set(val *UpdateProjectGroupV3Request) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateProjectGroupV3Request) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateProjectGroupV3Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateProjectGroupV3Request(val *UpdateProjectGroupV3Request) *NullableUpdateProjectGroupV3Request {
	return &NullableUpdateProjectGroupV3Request{value: val, isSet: true}
}

func (v NullableUpdateProjectGroupV3Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateProjectGroupV3Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


