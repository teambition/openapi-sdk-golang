/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the UpdateProjectPlanTaskV3ResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateProjectPlanTaskV3ResponseResult{}

// UpdateProjectPlanTaskV3ResponseResult 更新计划任务响应（标题、开始时间、截止时间）
type UpdateProjectPlanTaskV3ResponseResult struct {
	// 任务标题
	Content *string `json:"content,omitempty"`
	// 开始时间
	StartDate *time.Time `json:"startDate,omitempty"`
	// 截止时间
	DueDate *time.Time `json:"dueDate,omitempty"`
	// 更新时间
	Updated *time.Time `json:"updated,omitempty"`
}

// NewUpdateProjectPlanTaskV3ResponseResult instantiates a new UpdateProjectPlanTaskV3ResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateProjectPlanTaskV3ResponseResult() *UpdateProjectPlanTaskV3ResponseResult {
	this := UpdateProjectPlanTaskV3ResponseResult{}
	return &this
}

// NewUpdateProjectPlanTaskV3ResponseResultWithDefaults instantiates a new UpdateProjectPlanTaskV3ResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateProjectPlanTaskV3ResponseResultWithDefaults() *UpdateProjectPlanTaskV3ResponseResult {
	this := UpdateProjectPlanTaskV3ResponseResult{}
	return &this
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *UpdateProjectPlanTaskV3ResponseResult) GetContent() string {
	if o == nil || IsNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProjectPlanTaskV3ResponseResult) GetContentOk() (*string, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *UpdateProjectPlanTaskV3ResponseResult) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *UpdateProjectPlanTaskV3ResponseResult) SetContent(v string) {
	o.Content = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *UpdateProjectPlanTaskV3ResponseResult) GetStartDate() time.Time {
	if o == nil || IsNil(o.StartDate) {
		var ret time.Time
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProjectPlanTaskV3ResponseResult) GetStartDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *UpdateProjectPlanTaskV3ResponseResult) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given time.Time and assigns it to the StartDate field.
func (o *UpdateProjectPlanTaskV3ResponseResult) SetStartDate(v time.Time) {
	o.StartDate = &v
}

// GetDueDate returns the DueDate field value if set, zero value otherwise.
func (o *UpdateProjectPlanTaskV3ResponseResult) GetDueDate() time.Time {
	if o == nil || IsNil(o.DueDate) {
		var ret time.Time
		return ret
	}
	return *o.DueDate
}

// GetDueDateOk returns a tuple with the DueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProjectPlanTaskV3ResponseResult) GetDueDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DueDate) {
		return nil, false
	}
	return o.DueDate, true
}

// HasDueDate returns a boolean if a field has been set.
func (o *UpdateProjectPlanTaskV3ResponseResult) HasDueDate() bool {
	if o != nil && !IsNil(o.DueDate) {
		return true
	}

	return false
}

// SetDueDate gets a reference to the given time.Time and assigns it to the DueDate field.
func (o *UpdateProjectPlanTaskV3ResponseResult) SetDueDate(v time.Time) {
	o.DueDate = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *UpdateProjectPlanTaskV3ResponseResult) GetUpdated() time.Time {
	if o == nil || IsNil(o.Updated) {
		var ret time.Time
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProjectPlanTaskV3ResponseResult) GetUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Updated) {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *UpdateProjectPlanTaskV3ResponseResult) HasUpdated() bool {
	if o != nil && !IsNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given time.Time and assigns it to the Updated field.
func (o *UpdateProjectPlanTaskV3ResponseResult) SetUpdated(v time.Time) {
	o.Updated = &v
}

func (o UpdateProjectPlanTaskV3ResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateProjectPlanTaskV3ResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.DueDate) {
		toSerialize["dueDate"] = o.DueDate
	}
	if !IsNil(o.Updated) {
		toSerialize["updated"] = o.Updated
	}
	return toSerialize, nil
}

type NullableUpdateProjectPlanTaskV3ResponseResult struct {
	value *UpdateProjectPlanTaskV3ResponseResult
	isSet bool
}

func (v NullableUpdateProjectPlanTaskV3ResponseResult) Get() *UpdateProjectPlanTaskV3ResponseResult {
	return v.value
}

func (v *NullableUpdateProjectPlanTaskV3ResponseResult) Set(val *UpdateProjectPlanTaskV3ResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateProjectPlanTaskV3ResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateProjectPlanTaskV3ResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateProjectPlanTaskV3ResponseResult(val *UpdateProjectPlanTaskV3ResponseResult) *NullableUpdateProjectPlanTaskV3ResponseResult {
	return &NullableUpdateProjectPlanTaskV3ResponseResult{value: val, isSet: true}
}

func (v NullableUpdateProjectPlanTaskV3ResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateProjectPlanTaskV3ResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


