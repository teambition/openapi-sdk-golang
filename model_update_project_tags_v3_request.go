/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateProjectTagsV3Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateProjectTagsV3Request{}

// UpdateProjectTagsV3Request struct for UpdateProjectTagsV3Request
type UpdateProjectTagsV3Request struct {
	// 项目分组ID集合
	ProjectTagIds []string `json:"projectTagIds,omitempty"`
}

// NewUpdateProjectTagsV3Request instantiates a new UpdateProjectTagsV3Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateProjectTagsV3Request() *UpdateProjectTagsV3Request {
	this := UpdateProjectTagsV3Request{}
	return &this
}

// NewUpdateProjectTagsV3RequestWithDefaults instantiates a new UpdateProjectTagsV3Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateProjectTagsV3RequestWithDefaults() *UpdateProjectTagsV3Request {
	this := UpdateProjectTagsV3Request{}
	return &this
}

// GetProjectTagIds returns the ProjectTagIds field value if set, zero value otherwise.
func (o *UpdateProjectTagsV3Request) GetProjectTagIds() []string {
	if o == nil || IsNil(o.ProjectTagIds) {
		var ret []string
		return ret
	}
	return o.ProjectTagIds
}

// GetProjectTagIdsOk returns a tuple with the ProjectTagIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProjectTagsV3Request) GetProjectTagIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ProjectTagIds) {
		return nil, false
	}
	return o.ProjectTagIds, true
}

// HasProjectTagIds returns a boolean if a field has been set.
func (o *UpdateProjectTagsV3Request) HasProjectTagIds() bool {
	if o != nil && !IsNil(o.ProjectTagIds) {
		return true
	}

	return false
}

// SetProjectTagIds gets a reference to the given []string and assigns it to the ProjectTagIds field.
func (o *UpdateProjectTagsV3Request) SetProjectTagIds(v []string) {
	o.ProjectTagIds = v
}

func (o UpdateProjectTagsV3Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateProjectTagsV3Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProjectTagIds) {
		toSerialize["projectTagIds"] = o.ProjectTagIds
	}
	return toSerialize, nil
}

type NullableUpdateProjectTagsV3Request struct {
	value *UpdateProjectTagsV3Request
	isSet bool
}

func (v NullableUpdateProjectTagsV3Request) Get() *UpdateProjectTagsV3Request {
	return v.value
}

func (v *NullableUpdateProjectTagsV3Request) Set(val *UpdateProjectTagsV3Request) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateProjectTagsV3Request) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateProjectTagsV3Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateProjectTagsV3Request(val *UpdateProjectTagsV3Request) *NullableUpdateProjectTagsV3Request {
	return &NullableUpdateProjectTagsV3Request{value: val, isSet: true}
}

func (v NullableUpdateProjectTagsV3Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateProjectTagsV3Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


