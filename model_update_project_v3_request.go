/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the UpdateProjectV3Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateProjectV3Request{}

// UpdateProjectV3Request struct for UpdateProjectV3Request
type UpdateProjectV3Request struct {
	// 项目名称
	Name *string `json:"name,omitempty"`
	// 项目描述
	Description *string `json:"description,omitempty"`
	// 项目LOGO的url
	Logo *string `json:"logo,omitempty"`
	// 项目可见行，project | organization
	Visibility *string `json:"visibility,omitempty"`
	// 项目启动时间, 空字符串 代表清空
	StartDate *time.Time `json:"startDate,omitempty"`
	// 项目结束时间, 空字符串 代表清空
	EndDate *time.Time `json:"endDate,omitempty"`
}

// NewUpdateProjectV3Request instantiates a new UpdateProjectV3Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateProjectV3Request() *UpdateProjectV3Request {
	this := UpdateProjectV3Request{}
	return &this
}

// NewUpdateProjectV3RequestWithDefaults instantiates a new UpdateProjectV3Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateProjectV3RequestWithDefaults() *UpdateProjectV3Request {
	this := UpdateProjectV3Request{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateProjectV3Request) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProjectV3Request) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateProjectV3Request) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateProjectV3Request) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpdateProjectV3Request) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProjectV3Request) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UpdateProjectV3Request) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpdateProjectV3Request) SetDescription(v string) {
	o.Description = &v
}

// GetLogo returns the Logo field value if set, zero value otherwise.
func (o *UpdateProjectV3Request) GetLogo() string {
	if o == nil || IsNil(o.Logo) {
		var ret string
		return ret
	}
	return *o.Logo
}

// GetLogoOk returns a tuple with the Logo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProjectV3Request) GetLogoOk() (*string, bool) {
	if o == nil || IsNil(o.Logo) {
		return nil, false
	}
	return o.Logo, true
}

// HasLogo returns a boolean if a field has been set.
func (o *UpdateProjectV3Request) HasLogo() bool {
	if o != nil && !IsNil(o.Logo) {
		return true
	}

	return false
}

// SetLogo gets a reference to the given string and assigns it to the Logo field.
func (o *UpdateProjectV3Request) SetLogo(v string) {
	o.Logo = &v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *UpdateProjectV3Request) GetVisibility() string {
	if o == nil || IsNil(o.Visibility) {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProjectV3Request) GetVisibilityOk() (*string, bool) {
	if o == nil || IsNil(o.Visibility) {
		return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *UpdateProjectV3Request) HasVisibility() bool {
	if o != nil && !IsNil(o.Visibility) {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *UpdateProjectV3Request) SetVisibility(v string) {
	o.Visibility = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *UpdateProjectV3Request) GetStartDate() time.Time {
	if o == nil || IsNil(o.StartDate) {
		var ret time.Time
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProjectV3Request) GetStartDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *UpdateProjectV3Request) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given time.Time and assigns it to the StartDate field.
func (o *UpdateProjectV3Request) SetStartDate(v time.Time) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *UpdateProjectV3Request) GetEndDate() time.Time {
	if o == nil || IsNil(o.EndDate) {
		var ret time.Time
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProjectV3Request) GetEndDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *UpdateProjectV3Request) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given time.Time and assigns it to the EndDate field.
func (o *UpdateProjectV3Request) SetEndDate(v time.Time) {
	o.EndDate = &v
}

func (o UpdateProjectV3Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateProjectV3Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Logo) {
		toSerialize["logo"] = o.Logo
	}
	if !IsNil(o.Visibility) {
		toSerialize["visibility"] = o.Visibility
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	return toSerialize, nil
}

type NullableUpdateProjectV3Request struct {
	value *UpdateProjectV3Request
	isSet bool
}

func (v NullableUpdateProjectV3Request) Get() *UpdateProjectV3Request {
	return v.value
}

func (v *NullableUpdateProjectV3Request) Set(val *UpdateProjectV3Request) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateProjectV3Request) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateProjectV3Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateProjectV3Request(val *UpdateProjectV3Request) *NullableUpdateProjectV3Request {
	return &NullableUpdateProjectV3Request{value: val, isSet: true}
}

func (v NullableUpdateProjectV3Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateProjectV3Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


