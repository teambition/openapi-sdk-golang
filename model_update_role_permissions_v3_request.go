/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateRolePermissionsV3Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateRolePermissionsV3Request{}

// UpdateRolePermissionsV3Request struct for UpdateRolePermissionsV3Request
type UpdateRolePermissionsV3Request struct {
	// 权限列表
	Permissions []string `json:"permissions,omitempty"`
}

// NewUpdateRolePermissionsV3Request instantiates a new UpdateRolePermissionsV3Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateRolePermissionsV3Request() *UpdateRolePermissionsV3Request {
	this := UpdateRolePermissionsV3Request{}
	return &this
}

// NewUpdateRolePermissionsV3RequestWithDefaults instantiates a new UpdateRolePermissionsV3Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateRolePermissionsV3RequestWithDefaults() *UpdateRolePermissionsV3Request {
	this := UpdateRolePermissionsV3Request{}
	return &this
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *UpdateRolePermissionsV3Request) GetPermissions() []string {
	if o == nil || IsNil(o.Permissions) {
		var ret []string
		return ret
	}
	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateRolePermissionsV3Request) GetPermissionsOk() ([]string, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *UpdateRolePermissionsV3Request) HasPermissions() bool {
	if o != nil && !IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []string and assigns it to the Permissions field.
func (o *UpdateRolePermissionsV3Request) SetPermissions(v []string) {
	o.Permissions = v
}

func (o UpdateRolePermissionsV3Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateRolePermissionsV3Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Permissions) {
		toSerialize["permissions"] = o.Permissions
	}
	return toSerialize, nil
}

type NullableUpdateRolePermissionsV3Request struct {
	value *UpdateRolePermissionsV3Request
	isSet bool
}

func (v NullableUpdateRolePermissionsV3Request) Get() *UpdateRolePermissionsV3Request {
	return v.value
}

func (v *NullableUpdateRolePermissionsV3Request) Set(val *UpdateRolePermissionsV3Request) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateRolePermissionsV3Request) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateRolePermissionsV3Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateRolePermissionsV3Request(val *UpdateRolePermissionsV3Request) *NullableUpdateRolePermissionsV3Request {
	return &NullableUpdateRolePermissionsV3Request{value: val, isSet: true}
}

func (v NullableUpdateRolePermissionsV3Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateRolePermissionsV3Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


