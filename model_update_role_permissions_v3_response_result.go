/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateRolePermissionsV3ResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateRolePermissionsV3ResponseResult{}

// UpdateRolePermissionsV3ResponseResult 项目角色内容
type UpdateRolePermissionsV3ResponseResult struct {
	// 项目角色ID
	Id *string `json:"id,omitempty"`
	// 角色名字
	Name *string `json:"name,omitempty"`
	// 角色拥有的权限列表
	Permissions []string `json:"permissions,omitempty"`
	// 项目角色等级，0为成员；1为管理员；2为拥有者
	Level *int32 `json:"level,omitempty"`
	// 是否是项目默认角色
	IsDefaultRole *bool `json:"isDefaultRole,omitempty"`
}

// NewUpdateRolePermissionsV3ResponseResult instantiates a new UpdateRolePermissionsV3ResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateRolePermissionsV3ResponseResult() *UpdateRolePermissionsV3ResponseResult {
	this := UpdateRolePermissionsV3ResponseResult{}
	return &this
}

// NewUpdateRolePermissionsV3ResponseResultWithDefaults instantiates a new UpdateRolePermissionsV3ResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateRolePermissionsV3ResponseResultWithDefaults() *UpdateRolePermissionsV3ResponseResult {
	this := UpdateRolePermissionsV3ResponseResult{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *UpdateRolePermissionsV3ResponseResult) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateRolePermissionsV3ResponseResult) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *UpdateRolePermissionsV3ResponseResult) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *UpdateRolePermissionsV3ResponseResult) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateRolePermissionsV3ResponseResult) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateRolePermissionsV3ResponseResult) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateRolePermissionsV3ResponseResult) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateRolePermissionsV3ResponseResult) SetName(v string) {
	o.Name = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *UpdateRolePermissionsV3ResponseResult) GetPermissions() []string {
	if o == nil || IsNil(o.Permissions) {
		var ret []string
		return ret
	}
	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateRolePermissionsV3ResponseResult) GetPermissionsOk() ([]string, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *UpdateRolePermissionsV3ResponseResult) HasPermissions() bool {
	if o != nil && !IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []string and assigns it to the Permissions field.
func (o *UpdateRolePermissionsV3ResponseResult) SetPermissions(v []string) {
	o.Permissions = v
}

// GetLevel returns the Level field value if set, zero value otherwise.
func (o *UpdateRolePermissionsV3ResponseResult) GetLevel() int32 {
	if o == nil || IsNil(o.Level) {
		var ret int32
		return ret
	}
	return *o.Level
}

// GetLevelOk returns a tuple with the Level field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateRolePermissionsV3ResponseResult) GetLevelOk() (*int32, bool) {
	if o == nil || IsNil(o.Level) {
		return nil, false
	}
	return o.Level, true
}

// HasLevel returns a boolean if a field has been set.
func (o *UpdateRolePermissionsV3ResponseResult) HasLevel() bool {
	if o != nil && !IsNil(o.Level) {
		return true
	}

	return false
}

// SetLevel gets a reference to the given int32 and assigns it to the Level field.
func (o *UpdateRolePermissionsV3ResponseResult) SetLevel(v int32) {
	o.Level = &v
}

// GetIsDefaultRole returns the IsDefaultRole field value if set, zero value otherwise.
func (o *UpdateRolePermissionsV3ResponseResult) GetIsDefaultRole() bool {
	if o == nil || IsNil(o.IsDefaultRole) {
		var ret bool
		return ret
	}
	return *o.IsDefaultRole
}

// GetIsDefaultRoleOk returns a tuple with the IsDefaultRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateRolePermissionsV3ResponseResult) GetIsDefaultRoleOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDefaultRole) {
		return nil, false
	}
	return o.IsDefaultRole, true
}

// HasIsDefaultRole returns a boolean if a field has been set.
func (o *UpdateRolePermissionsV3ResponseResult) HasIsDefaultRole() bool {
	if o != nil && !IsNil(o.IsDefaultRole) {
		return true
	}

	return false
}

// SetIsDefaultRole gets a reference to the given bool and assigns it to the IsDefaultRole field.
func (o *UpdateRolePermissionsV3ResponseResult) SetIsDefaultRole(v bool) {
	o.IsDefaultRole = &v
}

func (o UpdateRolePermissionsV3ResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateRolePermissionsV3ResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Permissions) {
		toSerialize["permissions"] = o.Permissions
	}
	if !IsNil(o.Level) {
		toSerialize["level"] = o.Level
	}
	if !IsNil(o.IsDefaultRole) {
		toSerialize["isDefaultRole"] = o.IsDefaultRole
	}
	return toSerialize, nil
}

type NullableUpdateRolePermissionsV3ResponseResult struct {
	value *UpdateRolePermissionsV3ResponseResult
	isSet bool
}

func (v NullableUpdateRolePermissionsV3ResponseResult) Get() *UpdateRolePermissionsV3ResponseResult {
	return v.value
}

func (v *NullableUpdateRolePermissionsV3ResponseResult) Set(val *UpdateRolePermissionsV3ResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateRolePermissionsV3ResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateRolePermissionsV3ResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateRolePermissionsV3ResponseResult(val *UpdateRolePermissionsV3ResponseResult) *NullableUpdateRolePermissionsV3ResponseResult {
	return &NullableUpdateRolePermissionsV3ResponseResult{value: val, isSet: true}
}

func (v NullableUpdateRolePermissionsV3ResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateRolePermissionsV3ResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


