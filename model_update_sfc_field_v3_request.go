/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateSfcFieldV3Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateSfcFieldV3Request{}

// UpdateSfcFieldV3Request struct for UpdateSfcFieldV3Request
type UpdateSfcFieldV3Request struct {
	// 允许修改该字段的项目角色Id列表
	AllowedRoleIds []string `json:"allowedRoleIds,omitempty"`
	// 填写该字段时的默认值
	Default *string `json:"default,omitempty"`
	// 填写该字段时的提示文案
	Placeholder *string `json:"placeholder,omitempty"`
	// 是否必填
	Required *bool `json:"required,omitempty"`
	Payload map[string]interface{} `json:"payload,omitempty"`
	// 该字段当前位置的下一个字段的fieldType，用于确定字段顺序，空值时表示置于最后一位
	NextFieldType *string `json:"nextFieldType,omitempty"`
	// 该字段当前位置的下一个字段的customfieldId，用于确定字段顺序，空值时表示置于最后一位
	NextCustomfieldId *string `json:"nextCustomfieldId,omitempty"`
}

// NewUpdateSfcFieldV3Request instantiates a new UpdateSfcFieldV3Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateSfcFieldV3Request() *UpdateSfcFieldV3Request {
	this := UpdateSfcFieldV3Request{}
	return &this
}

// NewUpdateSfcFieldV3RequestWithDefaults instantiates a new UpdateSfcFieldV3Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateSfcFieldV3RequestWithDefaults() *UpdateSfcFieldV3Request {
	this := UpdateSfcFieldV3Request{}
	return &this
}

// GetAllowedRoleIds returns the AllowedRoleIds field value if set, zero value otherwise.
func (o *UpdateSfcFieldV3Request) GetAllowedRoleIds() []string {
	if o == nil || IsNil(o.AllowedRoleIds) {
		var ret []string
		return ret
	}
	return o.AllowedRoleIds
}

// GetAllowedRoleIdsOk returns a tuple with the AllowedRoleIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSfcFieldV3Request) GetAllowedRoleIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.AllowedRoleIds) {
		return nil, false
	}
	return o.AllowedRoleIds, true
}

// HasAllowedRoleIds returns a boolean if a field has been set.
func (o *UpdateSfcFieldV3Request) HasAllowedRoleIds() bool {
	if o != nil && !IsNil(o.AllowedRoleIds) {
		return true
	}

	return false
}

// SetAllowedRoleIds gets a reference to the given []string and assigns it to the AllowedRoleIds field.
func (o *UpdateSfcFieldV3Request) SetAllowedRoleIds(v []string) {
	o.AllowedRoleIds = v
}

// GetDefault returns the Default field value if set, zero value otherwise.
func (o *UpdateSfcFieldV3Request) GetDefault() string {
	if o == nil || IsNil(o.Default) {
		var ret string
		return ret
	}
	return *o.Default
}

// GetDefaultOk returns a tuple with the Default field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSfcFieldV3Request) GetDefaultOk() (*string, bool) {
	if o == nil || IsNil(o.Default) {
		return nil, false
	}
	return o.Default, true
}

// HasDefault returns a boolean if a field has been set.
func (o *UpdateSfcFieldV3Request) HasDefault() bool {
	if o != nil && !IsNil(o.Default) {
		return true
	}

	return false
}

// SetDefault gets a reference to the given string and assigns it to the Default field.
func (o *UpdateSfcFieldV3Request) SetDefault(v string) {
	o.Default = &v
}

// GetPlaceholder returns the Placeholder field value if set, zero value otherwise.
func (o *UpdateSfcFieldV3Request) GetPlaceholder() string {
	if o == nil || IsNil(o.Placeholder) {
		var ret string
		return ret
	}
	return *o.Placeholder
}

// GetPlaceholderOk returns a tuple with the Placeholder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSfcFieldV3Request) GetPlaceholderOk() (*string, bool) {
	if o == nil || IsNil(o.Placeholder) {
		return nil, false
	}
	return o.Placeholder, true
}

// HasPlaceholder returns a boolean if a field has been set.
func (o *UpdateSfcFieldV3Request) HasPlaceholder() bool {
	if o != nil && !IsNil(o.Placeholder) {
		return true
	}

	return false
}

// SetPlaceholder gets a reference to the given string and assigns it to the Placeholder field.
func (o *UpdateSfcFieldV3Request) SetPlaceholder(v string) {
	o.Placeholder = &v
}

// GetRequired returns the Required field value if set, zero value otherwise.
func (o *UpdateSfcFieldV3Request) GetRequired() bool {
	if o == nil || IsNil(o.Required) {
		var ret bool
		return ret
	}
	return *o.Required
}

// GetRequiredOk returns a tuple with the Required field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSfcFieldV3Request) GetRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.Required) {
		return nil, false
	}
	return o.Required, true
}

// HasRequired returns a boolean if a field has been set.
func (o *UpdateSfcFieldV3Request) HasRequired() bool {
	if o != nil && !IsNil(o.Required) {
		return true
	}

	return false
}

// SetRequired gets a reference to the given bool and assigns it to the Required field.
func (o *UpdateSfcFieldV3Request) SetRequired(v bool) {
	o.Required = &v
}

// GetPayload returns the Payload field value if set, zero value otherwise.
func (o *UpdateSfcFieldV3Request) GetPayload() map[string]interface{} {
	if o == nil || IsNil(o.Payload) {
		var ret map[string]interface{}
		return ret
	}
	return o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSfcFieldV3Request) GetPayloadOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Payload) {
		return map[string]interface{}{}, false
	}
	return o.Payload, true
}

// HasPayload returns a boolean if a field has been set.
func (o *UpdateSfcFieldV3Request) HasPayload() bool {
	if o != nil && !IsNil(o.Payload) {
		return true
	}

	return false
}

// SetPayload gets a reference to the given map[string]interface{} and assigns it to the Payload field.
func (o *UpdateSfcFieldV3Request) SetPayload(v map[string]interface{}) {
	o.Payload = v
}

// GetNextFieldType returns the NextFieldType field value if set, zero value otherwise.
func (o *UpdateSfcFieldV3Request) GetNextFieldType() string {
	if o == nil || IsNil(o.NextFieldType) {
		var ret string
		return ret
	}
	return *o.NextFieldType
}

// GetNextFieldTypeOk returns a tuple with the NextFieldType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSfcFieldV3Request) GetNextFieldTypeOk() (*string, bool) {
	if o == nil || IsNil(o.NextFieldType) {
		return nil, false
	}
	return o.NextFieldType, true
}

// HasNextFieldType returns a boolean if a field has been set.
func (o *UpdateSfcFieldV3Request) HasNextFieldType() bool {
	if o != nil && !IsNil(o.NextFieldType) {
		return true
	}

	return false
}

// SetNextFieldType gets a reference to the given string and assigns it to the NextFieldType field.
func (o *UpdateSfcFieldV3Request) SetNextFieldType(v string) {
	o.NextFieldType = &v
}

// GetNextCustomfieldId returns the NextCustomfieldId field value if set, zero value otherwise.
func (o *UpdateSfcFieldV3Request) GetNextCustomfieldId() string {
	if o == nil || IsNil(o.NextCustomfieldId) {
		var ret string
		return ret
	}
	return *o.NextCustomfieldId
}

// GetNextCustomfieldIdOk returns a tuple with the NextCustomfieldId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSfcFieldV3Request) GetNextCustomfieldIdOk() (*string, bool) {
	if o == nil || IsNil(o.NextCustomfieldId) {
		return nil, false
	}
	return o.NextCustomfieldId, true
}

// HasNextCustomfieldId returns a boolean if a field has been set.
func (o *UpdateSfcFieldV3Request) HasNextCustomfieldId() bool {
	if o != nil && !IsNil(o.NextCustomfieldId) {
		return true
	}

	return false
}

// SetNextCustomfieldId gets a reference to the given string and assigns it to the NextCustomfieldId field.
func (o *UpdateSfcFieldV3Request) SetNextCustomfieldId(v string) {
	o.NextCustomfieldId = &v
}

func (o UpdateSfcFieldV3Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateSfcFieldV3Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowedRoleIds) {
		toSerialize["allowedRoleIds"] = o.AllowedRoleIds
	}
	if !IsNil(o.Default) {
		toSerialize["default"] = o.Default
	}
	if !IsNil(o.Placeholder) {
		toSerialize["placeholder"] = o.Placeholder
	}
	if !IsNil(o.Required) {
		toSerialize["required"] = o.Required
	}
	if !IsNil(o.Payload) {
		toSerialize["payload"] = o.Payload
	}
	if !IsNil(o.NextFieldType) {
		toSerialize["nextFieldType"] = o.NextFieldType
	}
	if !IsNil(o.NextCustomfieldId) {
		toSerialize["nextCustomfieldId"] = o.NextCustomfieldId
	}
	return toSerialize, nil
}

type NullableUpdateSfcFieldV3Request struct {
	value *UpdateSfcFieldV3Request
	isSet bool
}

func (v NullableUpdateSfcFieldV3Request) Get() *UpdateSfcFieldV3Request {
	return v.value
}

func (v *NullableUpdateSfcFieldV3Request) Set(val *UpdateSfcFieldV3Request) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateSfcFieldV3Request) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateSfcFieldV3Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateSfcFieldV3Request(val *UpdateSfcFieldV3Request) *NullableUpdateSfcFieldV3Request {
	return &NullableUpdateSfcFieldV3Request{value: val, isSet: true}
}

func (v NullableUpdateSfcFieldV3Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateSfcFieldV3Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


