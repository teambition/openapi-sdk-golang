/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateSprintLockV3Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateSprintLockV3Request{}

// UpdateSprintLockV3Request struct for UpdateSprintLockV3Request
type UpdateSprintLockV3Request struct {
	// 是否锁定迭代
	IsLocked *bool `json:"isLocked,omitempty"`
	// 是否禁止移入迭代
	DisableMoveIn *bool `json:"disableMoveIn,omitempty"`
	// 是否禁止移出迭代
	DisableMoveOut *bool `json:"disableMoveOut,omitempty"`
	// 允许移入迭代的任务类型ID
	DisableMoveInSfcs []string `json:"disableMoveInSfcs,omitempty"`
	// 允许移出迭代的任务类型ID
	DisableMoveOutSfcs []string `json:"disableMoveOutSfcs,omitempty"`
}

// NewUpdateSprintLockV3Request instantiates a new UpdateSprintLockV3Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateSprintLockV3Request() *UpdateSprintLockV3Request {
	this := UpdateSprintLockV3Request{}
	return &this
}

// NewUpdateSprintLockV3RequestWithDefaults instantiates a new UpdateSprintLockV3Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateSprintLockV3RequestWithDefaults() *UpdateSprintLockV3Request {
	this := UpdateSprintLockV3Request{}
	return &this
}

// GetIsLocked returns the IsLocked field value if set, zero value otherwise.
func (o *UpdateSprintLockV3Request) GetIsLocked() bool {
	if o == nil || IsNil(o.IsLocked) {
		var ret bool
		return ret
	}
	return *o.IsLocked
}

// GetIsLockedOk returns a tuple with the IsLocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSprintLockV3Request) GetIsLockedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsLocked) {
		return nil, false
	}
	return o.IsLocked, true
}

// HasIsLocked returns a boolean if a field has been set.
func (o *UpdateSprintLockV3Request) HasIsLocked() bool {
	if o != nil && !IsNil(o.IsLocked) {
		return true
	}

	return false
}

// SetIsLocked gets a reference to the given bool and assigns it to the IsLocked field.
func (o *UpdateSprintLockV3Request) SetIsLocked(v bool) {
	o.IsLocked = &v
}

// GetDisableMoveIn returns the DisableMoveIn field value if set, zero value otherwise.
func (o *UpdateSprintLockV3Request) GetDisableMoveIn() bool {
	if o == nil || IsNil(o.DisableMoveIn) {
		var ret bool
		return ret
	}
	return *o.DisableMoveIn
}

// GetDisableMoveInOk returns a tuple with the DisableMoveIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSprintLockV3Request) GetDisableMoveInOk() (*bool, bool) {
	if o == nil || IsNil(o.DisableMoveIn) {
		return nil, false
	}
	return o.DisableMoveIn, true
}

// HasDisableMoveIn returns a boolean if a field has been set.
func (o *UpdateSprintLockV3Request) HasDisableMoveIn() bool {
	if o != nil && !IsNil(o.DisableMoveIn) {
		return true
	}

	return false
}

// SetDisableMoveIn gets a reference to the given bool and assigns it to the DisableMoveIn field.
func (o *UpdateSprintLockV3Request) SetDisableMoveIn(v bool) {
	o.DisableMoveIn = &v
}

// GetDisableMoveOut returns the DisableMoveOut field value if set, zero value otherwise.
func (o *UpdateSprintLockV3Request) GetDisableMoveOut() bool {
	if o == nil || IsNil(o.DisableMoveOut) {
		var ret bool
		return ret
	}
	return *o.DisableMoveOut
}

// GetDisableMoveOutOk returns a tuple with the DisableMoveOut field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSprintLockV3Request) GetDisableMoveOutOk() (*bool, bool) {
	if o == nil || IsNil(o.DisableMoveOut) {
		return nil, false
	}
	return o.DisableMoveOut, true
}

// HasDisableMoveOut returns a boolean if a field has been set.
func (o *UpdateSprintLockV3Request) HasDisableMoveOut() bool {
	if o != nil && !IsNil(o.DisableMoveOut) {
		return true
	}

	return false
}

// SetDisableMoveOut gets a reference to the given bool and assigns it to the DisableMoveOut field.
func (o *UpdateSprintLockV3Request) SetDisableMoveOut(v bool) {
	o.DisableMoveOut = &v
}

// GetDisableMoveInSfcs returns the DisableMoveInSfcs field value if set, zero value otherwise.
func (o *UpdateSprintLockV3Request) GetDisableMoveInSfcs() []string {
	if o == nil || IsNil(o.DisableMoveInSfcs) {
		var ret []string
		return ret
	}
	return o.DisableMoveInSfcs
}

// GetDisableMoveInSfcsOk returns a tuple with the DisableMoveInSfcs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSprintLockV3Request) GetDisableMoveInSfcsOk() ([]string, bool) {
	if o == nil || IsNil(o.DisableMoveInSfcs) {
		return nil, false
	}
	return o.DisableMoveInSfcs, true
}

// HasDisableMoveInSfcs returns a boolean if a field has been set.
func (o *UpdateSprintLockV3Request) HasDisableMoveInSfcs() bool {
	if o != nil && !IsNil(o.DisableMoveInSfcs) {
		return true
	}

	return false
}

// SetDisableMoveInSfcs gets a reference to the given []string and assigns it to the DisableMoveInSfcs field.
func (o *UpdateSprintLockV3Request) SetDisableMoveInSfcs(v []string) {
	o.DisableMoveInSfcs = v
}

// GetDisableMoveOutSfcs returns the DisableMoveOutSfcs field value if set, zero value otherwise.
func (o *UpdateSprintLockV3Request) GetDisableMoveOutSfcs() []string {
	if o == nil || IsNil(o.DisableMoveOutSfcs) {
		var ret []string
		return ret
	}
	return o.DisableMoveOutSfcs
}

// GetDisableMoveOutSfcsOk returns a tuple with the DisableMoveOutSfcs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSprintLockV3Request) GetDisableMoveOutSfcsOk() ([]string, bool) {
	if o == nil || IsNil(o.DisableMoveOutSfcs) {
		return nil, false
	}
	return o.DisableMoveOutSfcs, true
}

// HasDisableMoveOutSfcs returns a boolean if a field has been set.
func (o *UpdateSprintLockV3Request) HasDisableMoveOutSfcs() bool {
	if o != nil && !IsNil(o.DisableMoveOutSfcs) {
		return true
	}

	return false
}

// SetDisableMoveOutSfcs gets a reference to the given []string and assigns it to the DisableMoveOutSfcs field.
func (o *UpdateSprintLockV3Request) SetDisableMoveOutSfcs(v []string) {
	o.DisableMoveOutSfcs = v
}

func (o UpdateSprintLockV3Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateSprintLockV3Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsLocked) {
		toSerialize["isLocked"] = o.IsLocked
	}
	if !IsNil(o.DisableMoveIn) {
		toSerialize["disableMoveIn"] = o.DisableMoveIn
	}
	if !IsNil(o.DisableMoveOut) {
		toSerialize["disableMoveOut"] = o.DisableMoveOut
	}
	if !IsNil(o.DisableMoveInSfcs) {
		toSerialize["disableMoveInSfcs"] = o.DisableMoveInSfcs
	}
	if !IsNil(o.DisableMoveOutSfcs) {
		toSerialize["disableMoveOutSfcs"] = o.DisableMoveOutSfcs
	}
	return toSerialize, nil
}

type NullableUpdateSprintLockV3Request struct {
	value *UpdateSprintLockV3Request
	isSet bool
}

func (v NullableUpdateSprintLockV3Request) Get() *UpdateSprintLockV3Request {
	return v.value
}

func (v *NullableUpdateSprintLockV3Request) Set(val *UpdateSprintLockV3Request) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateSprintLockV3Request) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateSprintLockV3Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateSprintLockV3Request(val *UpdateSprintLockV3Request) *NullableUpdateSprintLockV3Request {
	return &NullableUpdateSprintLockV3Request{value: val, isSet: true}
}

func (v NullableUpdateSprintLockV3Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateSprintLockV3Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


