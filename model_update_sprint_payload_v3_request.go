/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateSprintPayloadV3Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateSprintPayloadV3Request{}

// UpdateSprintPayloadV3Request struct for UpdateSprintPayloadV3Request
type UpdateSprintPayloadV3Request struct {
	// 限制开始迭代操作
	StartSprintLock *bool `json:"startSprintLock,omitempty"`
	// 限制完成迭代操作
	CompleteSprintLock *bool `json:"completeSprintLock,omitempty"`
	// 限制锁定迭代操作
	LockSprintLock *bool `json:"lockSprintLock,omitempty"`
	// 限制删除迭代操作
	DeleteSprintLock *bool `json:"deleteSprintLock,omitempty"`
	// 限制更新迭代操作
	UpdateSprintLock *bool `json:"updateSprintLock,omitempty"`
}

// NewUpdateSprintPayloadV3Request instantiates a new UpdateSprintPayloadV3Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateSprintPayloadV3Request() *UpdateSprintPayloadV3Request {
	this := UpdateSprintPayloadV3Request{}
	return &this
}

// NewUpdateSprintPayloadV3RequestWithDefaults instantiates a new UpdateSprintPayloadV3Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateSprintPayloadV3RequestWithDefaults() *UpdateSprintPayloadV3Request {
	this := UpdateSprintPayloadV3Request{}
	return &this
}

// GetStartSprintLock returns the StartSprintLock field value if set, zero value otherwise.
func (o *UpdateSprintPayloadV3Request) GetStartSprintLock() bool {
	if o == nil || IsNil(o.StartSprintLock) {
		var ret bool
		return ret
	}
	return *o.StartSprintLock
}

// GetStartSprintLockOk returns a tuple with the StartSprintLock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSprintPayloadV3Request) GetStartSprintLockOk() (*bool, bool) {
	if o == nil || IsNil(o.StartSprintLock) {
		return nil, false
	}
	return o.StartSprintLock, true
}

// HasStartSprintLock returns a boolean if a field has been set.
func (o *UpdateSprintPayloadV3Request) HasStartSprintLock() bool {
	if o != nil && !IsNil(o.StartSprintLock) {
		return true
	}

	return false
}

// SetStartSprintLock gets a reference to the given bool and assigns it to the StartSprintLock field.
func (o *UpdateSprintPayloadV3Request) SetStartSprintLock(v bool) {
	o.StartSprintLock = &v
}

// GetCompleteSprintLock returns the CompleteSprintLock field value if set, zero value otherwise.
func (o *UpdateSprintPayloadV3Request) GetCompleteSprintLock() bool {
	if o == nil || IsNil(o.CompleteSprintLock) {
		var ret bool
		return ret
	}
	return *o.CompleteSprintLock
}

// GetCompleteSprintLockOk returns a tuple with the CompleteSprintLock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSprintPayloadV3Request) GetCompleteSprintLockOk() (*bool, bool) {
	if o == nil || IsNil(o.CompleteSprintLock) {
		return nil, false
	}
	return o.CompleteSprintLock, true
}

// HasCompleteSprintLock returns a boolean if a field has been set.
func (o *UpdateSprintPayloadV3Request) HasCompleteSprintLock() bool {
	if o != nil && !IsNil(o.CompleteSprintLock) {
		return true
	}

	return false
}

// SetCompleteSprintLock gets a reference to the given bool and assigns it to the CompleteSprintLock field.
func (o *UpdateSprintPayloadV3Request) SetCompleteSprintLock(v bool) {
	o.CompleteSprintLock = &v
}

// GetLockSprintLock returns the LockSprintLock field value if set, zero value otherwise.
func (o *UpdateSprintPayloadV3Request) GetLockSprintLock() bool {
	if o == nil || IsNil(o.LockSprintLock) {
		var ret bool
		return ret
	}
	return *o.LockSprintLock
}

// GetLockSprintLockOk returns a tuple with the LockSprintLock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSprintPayloadV3Request) GetLockSprintLockOk() (*bool, bool) {
	if o == nil || IsNil(o.LockSprintLock) {
		return nil, false
	}
	return o.LockSprintLock, true
}

// HasLockSprintLock returns a boolean if a field has been set.
func (o *UpdateSprintPayloadV3Request) HasLockSprintLock() bool {
	if o != nil && !IsNil(o.LockSprintLock) {
		return true
	}

	return false
}

// SetLockSprintLock gets a reference to the given bool and assigns it to the LockSprintLock field.
func (o *UpdateSprintPayloadV3Request) SetLockSprintLock(v bool) {
	o.LockSprintLock = &v
}

// GetDeleteSprintLock returns the DeleteSprintLock field value if set, zero value otherwise.
func (o *UpdateSprintPayloadV3Request) GetDeleteSprintLock() bool {
	if o == nil || IsNil(o.DeleteSprintLock) {
		var ret bool
		return ret
	}
	return *o.DeleteSprintLock
}

// GetDeleteSprintLockOk returns a tuple with the DeleteSprintLock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSprintPayloadV3Request) GetDeleteSprintLockOk() (*bool, bool) {
	if o == nil || IsNil(o.DeleteSprintLock) {
		return nil, false
	}
	return o.DeleteSprintLock, true
}

// HasDeleteSprintLock returns a boolean if a field has been set.
func (o *UpdateSprintPayloadV3Request) HasDeleteSprintLock() bool {
	if o != nil && !IsNil(o.DeleteSprintLock) {
		return true
	}

	return false
}

// SetDeleteSprintLock gets a reference to the given bool and assigns it to the DeleteSprintLock field.
func (o *UpdateSprintPayloadV3Request) SetDeleteSprintLock(v bool) {
	o.DeleteSprintLock = &v
}

// GetUpdateSprintLock returns the UpdateSprintLock field value if set, zero value otherwise.
func (o *UpdateSprintPayloadV3Request) GetUpdateSprintLock() bool {
	if o == nil || IsNil(o.UpdateSprintLock) {
		var ret bool
		return ret
	}
	return *o.UpdateSprintLock
}

// GetUpdateSprintLockOk returns a tuple with the UpdateSprintLock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSprintPayloadV3Request) GetUpdateSprintLockOk() (*bool, bool) {
	if o == nil || IsNil(o.UpdateSprintLock) {
		return nil, false
	}
	return o.UpdateSprintLock, true
}

// HasUpdateSprintLock returns a boolean if a field has been set.
func (o *UpdateSprintPayloadV3Request) HasUpdateSprintLock() bool {
	if o != nil && !IsNil(o.UpdateSprintLock) {
		return true
	}

	return false
}

// SetUpdateSprintLock gets a reference to the given bool and assigns it to the UpdateSprintLock field.
func (o *UpdateSprintPayloadV3Request) SetUpdateSprintLock(v bool) {
	o.UpdateSprintLock = &v
}

func (o UpdateSprintPayloadV3Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateSprintPayloadV3Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StartSprintLock) {
		toSerialize["startSprintLock"] = o.StartSprintLock
	}
	if !IsNil(o.CompleteSprintLock) {
		toSerialize["completeSprintLock"] = o.CompleteSprintLock
	}
	if !IsNil(o.LockSprintLock) {
		toSerialize["lockSprintLock"] = o.LockSprintLock
	}
	if !IsNil(o.DeleteSprintLock) {
		toSerialize["deleteSprintLock"] = o.DeleteSprintLock
	}
	if !IsNil(o.UpdateSprintLock) {
		toSerialize["updateSprintLock"] = o.UpdateSprintLock
	}
	return toSerialize, nil
}

type NullableUpdateSprintPayloadV3Request struct {
	value *UpdateSprintPayloadV3Request
	isSet bool
}

func (v NullableUpdateSprintPayloadV3Request) Get() *UpdateSprintPayloadV3Request {
	return v.value
}

func (v *NullableUpdateSprintPayloadV3Request) Set(val *UpdateSprintPayloadV3Request) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateSprintPayloadV3Request) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateSprintPayloadV3Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateSprintPayloadV3Request(val *UpdateSprintPayloadV3Request) *NullableUpdateSprintPayloadV3Request {
	return &NullableUpdateSprintPayloadV3Request{value: val, isSet: true}
}

func (v NullableUpdateSprintPayloadV3Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateSprintPayloadV3Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


