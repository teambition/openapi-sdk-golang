/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the UpdateSprintPayloadV3ResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateSprintPayloadV3ResponseResult{}

// UpdateSprintPayloadV3ResponseResult 迭代更新结果
type UpdateSprintPayloadV3ResponseResult struct {
	// 迭代 ID
	Id *string `json:"id,omitempty"`
	Updated *time.Time `json:"updated,omitempty"`
	// 迭代补充字段，如迭代锁定等信息
	Payload map[string]interface{} `json:"payload,omitempty"`
}

// NewUpdateSprintPayloadV3ResponseResult instantiates a new UpdateSprintPayloadV3ResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateSprintPayloadV3ResponseResult() *UpdateSprintPayloadV3ResponseResult {
	this := UpdateSprintPayloadV3ResponseResult{}
	return &this
}

// NewUpdateSprintPayloadV3ResponseResultWithDefaults instantiates a new UpdateSprintPayloadV3ResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateSprintPayloadV3ResponseResultWithDefaults() *UpdateSprintPayloadV3ResponseResult {
	this := UpdateSprintPayloadV3ResponseResult{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *UpdateSprintPayloadV3ResponseResult) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSprintPayloadV3ResponseResult) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *UpdateSprintPayloadV3ResponseResult) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *UpdateSprintPayloadV3ResponseResult) SetId(v string) {
	o.Id = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *UpdateSprintPayloadV3ResponseResult) GetUpdated() time.Time {
	if o == nil || IsNil(o.Updated) {
		var ret time.Time
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSprintPayloadV3ResponseResult) GetUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Updated) {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *UpdateSprintPayloadV3ResponseResult) HasUpdated() bool {
	if o != nil && !IsNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given time.Time and assigns it to the Updated field.
func (o *UpdateSprintPayloadV3ResponseResult) SetUpdated(v time.Time) {
	o.Updated = &v
}

// GetPayload returns the Payload field value if set, zero value otherwise.
func (o *UpdateSprintPayloadV3ResponseResult) GetPayload() map[string]interface{} {
	if o == nil || IsNil(o.Payload) {
		var ret map[string]interface{}
		return ret
	}
	return o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSprintPayloadV3ResponseResult) GetPayloadOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Payload) {
		return map[string]interface{}{}, false
	}
	return o.Payload, true
}

// HasPayload returns a boolean if a field has been set.
func (o *UpdateSprintPayloadV3ResponseResult) HasPayload() bool {
	if o != nil && !IsNil(o.Payload) {
		return true
	}

	return false
}

// SetPayload gets a reference to the given map[string]interface{} and assigns it to the Payload field.
func (o *UpdateSprintPayloadV3ResponseResult) SetPayload(v map[string]interface{}) {
	o.Payload = v
}

func (o UpdateSprintPayloadV3ResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateSprintPayloadV3ResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Updated) {
		toSerialize["updated"] = o.Updated
	}
	if !IsNil(o.Payload) {
		toSerialize["payload"] = o.Payload
	}
	return toSerialize, nil
}

type NullableUpdateSprintPayloadV3ResponseResult struct {
	value *UpdateSprintPayloadV3ResponseResult
	isSet bool
}

func (v NullableUpdateSprintPayloadV3ResponseResult) Get() *UpdateSprintPayloadV3ResponseResult {
	return v.value
}

func (v *NullableUpdateSprintPayloadV3ResponseResult) Set(val *UpdateSprintPayloadV3ResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateSprintPayloadV3ResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateSprintPayloadV3ResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateSprintPayloadV3ResponseResult(val *UpdateSprintPayloadV3ResponseResult) *NullableUpdateSprintPayloadV3ResponseResult {
	return &NullableUpdateSprintPayloadV3ResponseResult{value: val, isSet: true}
}

func (v NullableUpdateSprintPayloadV3ResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateSprintPayloadV3ResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


