/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateSprintV3Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateSprintV3Response{}

// UpdateSprintV3Response 
type UpdateSprintV3Response struct {
	Result *UpdateSprintV3ResponseResult `json:"result,omitempty"`
	// 响应状态码
	Code *float32 `json:"code,omitempty"`
	// 异常错误信息
	ErrorMessage *string `json:"errorMessage,omitempty"`
	// 请求 ID，请求异常时可提供此 ID，进行问题排查。
	RequestId *string `json:"requestId,omitempty"`
}

// NewUpdateSprintV3Response instantiates a new UpdateSprintV3Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateSprintV3Response() *UpdateSprintV3Response {
	this := UpdateSprintV3Response{}
	return &this
}

// NewUpdateSprintV3ResponseWithDefaults instantiates a new UpdateSprintV3Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateSprintV3ResponseWithDefaults() *UpdateSprintV3Response {
	this := UpdateSprintV3Response{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *UpdateSprintV3Response) GetResult() UpdateSprintV3ResponseResult {
	if o == nil || IsNil(o.Result) {
		var ret UpdateSprintV3ResponseResult
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSprintV3Response) GetResultOk() (*UpdateSprintV3ResponseResult, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *UpdateSprintV3Response) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given UpdateSprintV3ResponseResult and assigns it to the Result field.
func (o *UpdateSprintV3Response) SetResult(v UpdateSprintV3ResponseResult) {
	o.Result = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *UpdateSprintV3Response) GetCode() float32 {
	if o == nil || IsNil(o.Code) {
		var ret float32
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSprintV3Response) GetCodeOk() (*float32, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *UpdateSprintV3Response) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given float32 and assigns it to the Code field.
func (o *UpdateSprintV3Response) SetCode(v float32) {
	o.Code = &v
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise.
func (o *UpdateSprintV3Response) GetErrorMessage() string {
	if o == nil || IsNil(o.ErrorMessage) {
		var ret string
		return ret
	}
	return *o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSprintV3Response) GetErrorMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorMessage) {
		return nil, false
	}
	return o.ErrorMessage, true
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *UpdateSprintV3Response) HasErrorMessage() bool {
	if o != nil && !IsNil(o.ErrorMessage) {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given string and assigns it to the ErrorMessage field.
func (o *UpdateSprintV3Response) SetErrorMessage(v string) {
	o.ErrorMessage = &v
}

// GetRequestId returns the RequestId field value if set, zero value otherwise.
func (o *UpdateSprintV3Response) GetRequestId() string {
	if o == nil || IsNil(o.RequestId) {
		var ret string
		return ret
	}
	return *o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSprintV3Response) GetRequestIdOk() (*string, bool) {
	if o == nil || IsNil(o.RequestId) {
		return nil, false
	}
	return o.RequestId, true
}

// HasRequestId returns a boolean if a field has been set.
func (o *UpdateSprintV3Response) HasRequestId() bool {
	if o != nil && !IsNil(o.RequestId) {
		return true
	}

	return false
}

// SetRequestId gets a reference to the given string and assigns it to the RequestId field.
func (o *UpdateSprintV3Response) SetRequestId(v string) {
	o.RequestId = &v
}

func (o UpdateSprintV3Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateSprintV3Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.ErrorMessage) {
		toSerialize["errorMessage"] = o.ErrorMessage
	}
	if !IsNil(o.RequestId) {
		toSerialize["requestId"] = o.RequestId
	}
	return toSerialize, nil
}

type NullableUpdateSprintV3Response struct {
	value *UpdateSprintV3Response
	isSet bool
}

func (v NullableUpdateSprintV3Response) Get() *UpdateSprintV3Response {
	return v.value
}

func (v *NullableUpdateSprintV3Response) Set(val *UpdateSprintV3Response) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateSprintV3Response) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateSprintV3Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateSprintV3Response(val *UpdateSprintV3Response) *NullableUpdateSprintV3Response {
	return &NullableUpdateSprintV3Response{value: val, isSet: true}
}

func (v NullableUpdateSprintV3Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateSprintV3Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


