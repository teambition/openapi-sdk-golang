/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateStatusCustomFieldV3Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateStatusCustomFieldV3Request{}

// UpdateStatusCustomFieldV3Request struct for UpdateStatusCustomFieldV3Request
type UpdateStatusCustomFieldV3Request struct {
	// 自定义字段ID
	CustomfieldId *string `json:"customfieldId,omitempty"`
	// 自定义字段名称(如果提供自定义字段ID 则忽略)
	CustomfieldName *string `json:"customfieldName,omitempty"`
	// 自定义字段InstanceId(如果提供自定义字段ID 或者 自定义字段名称 则忽略)
	CustomfieldInstanceId *string `json:"customfieldInstanceId,omitempty"`
	AllowedRoleIds []string `json:"allowedRoleIds,omitempty"`
	Islinklocked *bool `json:"islinklocked,omitempty"`
}

// NewUpdateStatusCustomFieldV3Request instantiates a new UpdateStatusCustomFieldV3Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateStatusCustomFieldV3Request() *UpdateStatusCustomFieldV3Request {
	this := UpdateStatusCustomFieldV3Request{}
	return &this
}

// NewUpdateStatusCustomFieldV3RequestWithDefaults instantiates a new UpdateStatusCustomFieldV3Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateStatusCustomFieldV3RequestWithDefaults() *UpdateStatusCustomFieldV3Request {
	this := UpdateStatusCustomFieldV3Request{}
	return &this
}

// GetCustomfieldId returns the CustomfieldId field value if set, zero value otherwise.
func (o *UpdateStatusCustomFieldV3Request) GetCustomfieldId() string {
	if o == nil || IsNil(o.CustomfieldId) {
		var ret string
		return ret
	}
	return *o.CustomfieldId
}

// GetCustomfieldIdOk returns a tuple with the CustomfieldId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateStatusCustomFieldV3Request) GetCustomfieldIdOk() (*string, bool) {
	if o == nil || IsNil(o.CustomfieldId) {
		return nil, false
	}
	return o.CustomfieldId, true
}

// HasCustomfieldId returns a boolean if a field has been set.
func (o *UpdateStatusCustomFieldV3Request) HasCustomfieldId() bool {
	if o != nil && !IsNil(o.CustomfieldId) {
		return true
	}

	return false
}

// SetCustomfieldId gets a reference to the given string and assigns it to the CustomfieldId field.
func (o *UpdateStatusCustomFieldV3Request) SetCustomfieldId(v string) {
	o.CustomfieldId = &v
}

// GetCustomfieldName returns the CustomfieldName field value if set, zero value otherwise.
func (o *UpdateStatusCustomFieldV3Request) GetCustomfieldName() string {
	if o == nil || IsNil(o.CustomfieldName) {
		var ret string
		return ret
	}
	return *o.CustomfieldName
}

// GetCustomfieldNameOk returns a tuple with the CustomfieldName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateStatusCustomFieldV3Request) GetCustomfieldNameOk() (*string, bool) {
	if o == nil || IsNil(o.CustomfieldName) {
		return nil, false
	}
	return o.CustomfieldName, true
}

// HasCustomfieldName returns a boolean if a field has been set.
func (o *UpdateStatusCustomFieldV3Request) HasCustomfieldName() bool {
	if o != nil && !IsNil(o.CustomfieldName) {
		return true
	}

	return false
}

// SetCustomfieldName gets a reference to the given string and assigns it to the CustomfieldName field.
func (o *UpdateStatusCustomFieldV3Request) SetCustomfieldName(v string) {
	o.CustomfieldName = &v
}

// GetCustomfieldInstanceId returns the CustomfieldInstanceId field value if set, zero value otherwise.
func (o *UpdateStatusCustomFieldV3Request) GetCustomfieldInstanceId() string {
	if o == nil || IsNil(o.CustomfieldInstanceId) {
		var ret string
		return ret
	}
	return *o.CustomfieldInstanceId
}

// GetCustomfieldInstanceIdOk returns a tuple with the CustomfieldInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateStatusCustomFieldV3Request) GetCustomfieldInstanceIdOk() (*string, bool) {
	if o == nil || IsNil(o.CustomfieldInstanceId) {
		return nil, false
	}
	return o.CustomfieldInstanceId, true
}

// HasCustomfieldInstanceId returns a boolean if a field has been set.
func (o *UpdateStatusCustomFieldV3Request) HasCustomfieldInstanceId() bool {
	if o != nil && !IsNil(o.CustomfieldInstanceId) {
		return true
	}

	return false
}

// SetCustomfieldInstanceId gets a reference to the given string and assigns it to the CustomfieldInstanceId field.
func (o *UpdateStatusCustomFieldV3Request) SetCustomfieldInstanceId(v string) {
	o.CustomfieldInstanceId = &v
}

// GetAllowedRoleIds returns the AllowedRoleIds field value if set, zero value otherwise.
func (o *UpdateStatusCustomFieldV3Request) GetAllowedRoleIds() []string {
	if o == nil || IsNil(o.AllowedRoleIds) {
		var ret []string
		return ret
	}
	return o.AllowedRoleIds
}

// GetAllowedRoleIdsOk returns a tuple with the AllowedRoleIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateStatusCustomFieldV3Request) GetAllowedRoleIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.AllowedRoleIds) {
		return nil, false
	}
	return o.AllowedRoleIds, true
}

// HasAllowedRoleIds returns a boolean if a field has been set.
func (o *UpdateStatusCustomFieldV3Request) HasAllowedRoleIds() bool {
	if o != nil && !IsNil(o.AllowedRoleIds) {
		return true
	}

	return false
}

// SetAllowedRoleIds gets a reference to the given []string and assigns it to the AllowedRoleIds field.
func (o *UpdateStatusCustomFieldV3Request) SetAllowedRoleIds(v []string) {
	o.AllowedRoleIds = v
}

// GetIslinklocked returns the Islinklocked field value if set, zero value otherwise.
func (o *UpdateStatusCustomFieldV3Request) GetIslinklocked() bool {
	if o == nil || IsNil(o.Islinklocked) {
		var ret bool
		return ret
	}
	return *o.Islinklocked
}

// GetIslinklockedOk returns a tuple with the Islinklocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateStatusCustomFieldV3Request) GetIslinklockedOk() (*bool, bool) {
	if o == nil || IsNil(o.Islinklocked) {
		return nil, false
	}
	return o.Islinklocked, true
}

// HasIslinklocked returns a boolean if a field has been set.
func (o *UpdateStatusCustomFieldV3Request) HasIslinklocked() bool {
	if o != nil && !IsNil(o.Islinklocked) {
		return true
	}

	return false
}

// SetIslinklocked gets a reference to the given bool and assigns it to the Islinklocked field.
func (o *UpdateStatusCustomFieldV3Request) SetIslinklocked(v bool) {
	o.Islinklocked = &v
}

func (o UpdateStatusCustomFieldV3Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateStatusCustomFieldV3Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CustomfieldId) {
		toSerialize["customfieldId"] = o.CustomfieldId
	}
	if !IsNil(o.CustomfieldName) {
		toSerialize["customfieldName"] = o.CustomfieldName
	}
	if !IsNil(o.CustomfieldInstanceId) {
		toSerialize["customfieldInstanceId"] = o.CustomfieldInstanceId
	}
	if !IsNil(o.AllowedRoleIds) {
		toSerialize["allowedRoleIds"] = o.AllowedRoleIds
	}
	if !IsNil(o.Islinklocked) {
		toSerialize["islinklocked"] = o.Islinklocked
	}
	return toSerialize, nil
}

type NullableUpdateStatusCustomFieldV3Request struct {
	value *UpdateStatusCustomFieldV3Request
	isSet bool
}

func (v NullableUpdateStatusCustomFieldV3Request) Get() *UpdateStatusCustomFieldV3Request {
	return v.value
}

func (v *NullableUpdateStatusCustomFieldV3Request) Set(val *UpdateStatusCustomFieldV3Request) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateStatusCustomFieldV3Request) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateStatusCustomFieldV3Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateStatusCustomFieldV3Request(val *UpdateStatusCustomFieldV3Request) *NullableUpdateStatusCustomFieldV3Request {
	return &NullableUpdateStatusCustomFieldV3Request{value: val, isSet: true}
}

func (v NullableUpdateStatusCustomFieldV3Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateStatusCustomFieldV3Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


