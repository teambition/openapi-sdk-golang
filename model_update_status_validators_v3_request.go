/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateStatusValidatorsV3Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateStatusValidatorsV3Request{}

// UpdateStatusValidatorsV3Request struct for UpdateStatusValidatorsV3Request
type UpdateStatusValidatorsV3Request struct {
	// 
	Validators []ListStatusValidatorsV3ResponseResultInner `json:"validators,omitempty"`
}

// NewUpdateStatusValidatorsV3Request instantiates a new UpdateStatusValidatorsV3Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateStatusValidatorsV3Request() *UpdateStatusValidatorsV3Request {
	this := UpdateStatusValidatorsV3Request{}
	return &this
}

// NewUpdateStatusValidatorsV3RequestWithDefaults instantiates a new UpdateStatusValidatorsV3Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateStatusValidatorsV3RequestWithDefaults() *UpdateStatusValidatorsV3Request {
	this := UpdateStatusValidatorsV3Request{}
	return &this
}

// GetValidators returns the Validators field value if set, zero value otherwise.
func (o *UpdateStatusValidatorsV3Request) GetValidators() []ListStatusValidatorsV3ResponseResultInner {
	if o == nil || IsNil(o.Validators) {
		var ret []ListStatusValidatorsV3ResponseResultInner
		return ret
	}
	return o.Validators
}

// GetValidatorsOk returns a tuple with the Validators field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateStatusValidatorsV3Request) GetValidatorsOk() ([]ListStatusValidatorsV3ResponseResultInner, bool) {
	if o == nil || IsNil(o.Validators) {
		return nil, false
	}
	return o.Validators, true
}

// HasValidators returns a boolean if a field has been set.
func (o *UpdateStatusValidatorsV3Request) HasValidators() bool {
	if o != nil && !IsNil(o.Validators) {
		return true
	}

	return false
}

// SetValidators gets a reference to the given []ListStatusValidatorsV3ResponseResultInner and assigns it to the Validators field.
func (o *UpdateStatusValidatorsV3Request) SetValidators(v []ListStatusValidatorsV3ResponseResultInner) {
	o.Validators = v
}

func (o UpdateStatusValidatorsV3Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateStatusValidatorsV3Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Validators) {
		toSerialize["validators"] = o.Validators
	}
	return toSerialize, nil
}

type NullableUpdateStatusValidatorsV3Request struct {
	value *UpdateStatusValidatorsV3Request
	isSet bool
}

func (v NullableUpdateStatusValidatorsV3Request) Get() *UpdateStatusValidatorsV3Request {
	return v.value
}

func (v *NullableUpdateStatusValidatorsV3Request) Set(val *UpdateStatusValidatorsV3Request) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateStatusValidatorsV3Request) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateStatusValidatorsV3Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateStatusValidatorsV3Request(val *UpdateStatusValidatorsV3Request) *NullableUpdateStatusValidatorsV3Request {
	return &NullableUpdateStatusValidatorsV3Request{value: val, isSet: true}
}

func (v NullableUpdateStatusValidatorsV3Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateStatusValidatorsV3Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


