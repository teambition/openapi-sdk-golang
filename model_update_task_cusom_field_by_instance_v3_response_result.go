/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the UpdateTaskCusomFieldByInstanceV3ResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateTaskCusomFieldByInstanceV3ResponseResult{}

// UpdateTaskCusomFieldByInstanceV3ResponseResult 更新任务字段响应
type UpdateTaskCusomFieldByInstanceV3ResponseResult struct {
	// 更新时间
	Updated *time.Time `json:"updated,omitempty"`
}

// NewUpdateTaskCusomFieldByInstanceV3ResponseResult instantiates a new UpdateTaskCusomFieldByInstanceV3ResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateTaskCusomFieldByInstanceV3ResponseResult() *UpdateTaskCusomFieldByInstanceV3ResponseResult {
	this := UpdateTaskCusomFieldByInstanceV3ResponseResult{}
	return &this
}

// NewUpdateTaskCusomFieldByInstanceV3ResponseResultWithDefaults instantiates a new UpdateTaskCusomFieldByInstanceV3ResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateTaskCusomFieldByInstanceV3ResponseResultWithDefaults() *UpdateTaskCusomFieldByInstanceV3ResponseResult {
	this := UpdateTaskCusomFieldByInstanceV3ResponseResult{}
	return &this
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *UpdateTaskCusomFieldByInstanceV3ResponseResult) GetUpdated() time.Time {
	if o == nil || IsNil(o.Updated) {
		var ret time.Time
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTaskCusomFieldByInstanceV3ResponseResult) GetUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Updated) {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *UpdateTaskCusomFieldByInstanceV3ResponseResult) HasUpdated() bool {
	if o != nil && !IsNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given time.Time and assigns it to the Updated field.
func (o *UpdateTaskCusomFieldByInstanceV3ResponseResult) SetUpdated(v time.Time) {
	o.Updated = &v
}

func (o UpdateTaskCusomFieldByInstanceV3ResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateTaskCusomFieldByInstanceV3ResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Updated) {
		toSerialize["updated"] = o.Updated
	}
	return toSerialize, nil
}

type NullableUpdateTaskCusomFieldByInstanceV3ResponseResult struct {
	value *UpdateTaskCusomFieldByInstanceV3ResponseResult
	isSet bool
}

func (v NullableUpdateTaskCusomFieldByInstanceV3ResponseResult) Get() *UpdateTaskCusomFieldByInstanceV3ResponseResult {
	return v.value
}

func (v *NullableUpdateTaskCusomFieldByInstanceV3ResponseResult) Set(val *UpdateTaskCusomFieldByInstanceV3ResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateTaskCusomFieldByInstanceV3ResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateTaskCusomFieldByInstanceV3ResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateTaskCusomFieldByInstanceV3ResponseResult(val *UpdateTaskCusomFieldByInstanceV3ResponseResult) *NullableUpdateTaskCusomFieldByInstanceV3ResponseResult {
	return &NullableUpdateTaskCusomFieldByInstanceV3ResponseResult{value: val, isSet: true}
}

func (v NullableUpdateTaskCusomFieldByInstanceV3ResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateTaskCusomFieldByInstanceV3ResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


