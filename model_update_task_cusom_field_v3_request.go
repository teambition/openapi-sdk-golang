/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateTaskCusomFieldV3Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateTaskCusomFieldV3Request{}

// UpdateTaskCusomFieldV3Request 修改自定义字段请求
type UpdateTaskCusomFieldV3Request struct {
	// 自定义字段ID
	CustomfieldId *string `json:"customfieldId,omitempty"`
	// 自定义字段名称(如果提供自定义字段ID 则忽略)
	CustomfieldName *string `json:"customfieldName,omitempty"`
	// 自定义字段InstanceId(如果提供自定义字段ID 或者 自定义字段名称 则忽略)
	CustomfieldInstanceId *string `json:"customfieldInstanceId,omitempty"`
	// 自定义字段别名(如果提供自定义字段ID 则忽略)
	CustomfieldAlias *string `json:"customfieldAlias,omitempty"`
	// 是否忽略触发动态
	DisableActivity *bool `json:"disableActivity,omitempty"`
	// 字段值集合
	Value []UpdateTaskCusomFieldV3RequestValueInner `json:"value,omitempty"`
	// 新增的字段值列表
	AddValues []UpdateTaskCusomFieldV3RequestAddValuesInner `json:"addValues,omitempty"`
	// 移除的字段值列表
	DelValues []UpdateTaskCusomFieldV3RequestDelValuesInner `json:"delValues,omitempty"`
}

// NewUpdateTaskCusomFieldV3Request instantiates a new UpdateTaskCusomFieldV3Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateTaskCusomFieldV3Request() *UpdateTaskCusomFieldV3Request {
	this := UpdateTaskCusomFieldV3Request{}
	return &this
}

// NewUpdateTaskCusomFieldV3RequestWithDefaults instantiates a new UpdateTaskCusomFieldV3Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateTaskCusomFieldV3RequestWithDefaults() *UpdateTaskCusomFieldV3Request {
	this := UpdateTaskCusomFieldV3Request{}
	return &this
}

// GetCustomfieldId returns the CustomfieldId field value if set, zero value otherwise.
func (o *UpdateTaskCusomFieldV3Request) GetCustomfieldId() string {
	if o == nil || IsNil(o.CustomfieldId) {
		var ret string
		return ret
	}
	return *o.CustomfieldId
}

// GetCustomfieldIdOk returns a tuple with the CustomfieldId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTaskCusomFieldV3Request) GetCustomfieldIdOk() (*string, bool) {
	if o == nil || IsNil(o.CustomfieldId) {
		return nil, false
	}
	return o.CustomfieldId, true
}

// HasCustomfieldId returns a boolean if a field has been set.
func (o *UpdateTaskCusomFieldV3Request) HasCustomfieldId() bool {
	if o != nil && !IsNil(o.CustomfieldId) {
		return true
	}

	return false
}

// SetCustomfieldId gets a reference to the given string and assigns it to the CustomfieldId field.
func (o *UpdateTaskCusomFieldV3Request) SetCustomfieldId(v string) {
	o.CustomfieldId = &v
}

// GetCustomfieldName returns the CustomfieldName field value if set, zero value otherwise.
func (o *UpdateTaskCusomFieldV3Request) GetCustomfieldName() string {
	if o == nil || IsNil(o.CustomfieldName) {
		var ret string
		return ret
	}
	return *o.CustomfieldName
}

// GetCustomfieldNameOk returns a tuple with the CustomfieldName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTaskCusomFieldV3Request) GetCustomfieldNameOk() (*string, bool) {
	if o == nil || IsNil(o.CustomfieldName) {
		return nil, false
	}
	return o.CustomfieldName, true
}

// HasCustomfieldName returns a boolean if a field has been set.
func (o *UpdateTaskCusomFieldV3Request) HasCustomfieldName() bool {
	if o != nil && !IsNil(o.CustomfieldName) {
		return true
	}

	return false
}

// SetCustomfieldName gets a reference to the given string and assigns it to the CustomfieldName field.
func (o *UpdateTaskCusomFieldV3Request) SetCustomfieldName(v string) {
	o.CustomfieldName = &v
}

// GetCustomfieldInstanceId returns the CustomfieldInstanceId field value if set, zero value otherwise.
func (o *UpdateTaskCusomFieldV3Request) GetCustomfieldInstanceId() string {
	if o == nil || IsNil(o.CustomfieldInstanceId) {
		var ret string
		return ret
	}
	return *o.CustomfieldInstanceId
}

// GetCustomfieldInstanceIdOk returns a tuple with the CustomfieldInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTaskCusomFieldV3Request) GetCustomfieldInstanceIdOk() (*string, bool) {
	if o == nil || IsNil(o.CustomfieldInstanceId) {
		return nil, false
	}
	return o.CustomfieldInstanceId, true
}

// HasCustomfieldInstanceId returns a boolean if a field has been set.
func (o *UpdateTaskCusomFieldV3Request) HasCustomfieldInstanceId() bool {
	if o != nil && !IsNil(o.CustomfieldInstanceId) {
		return true
	}

	return false
}

// SetCustomfieldInstanceId gets a reference to the given string and assigns it to the CustomfieldInstanceId field.
func (o *UpdateTaskCusomFieldV3Request) SetCustomfieldInstanceId(v string) {
	o.CustomfieldInstanceId = &v
}

// GetCustomfieldAlias returns the CustomfieldAlias field value if set, zero value otherwise.
func (o *UpdateTaskCusomFieldV3Request) GetCustomfieldAlias() string {
	if o == nil || IsNil(o.CustomfieldAlias) {
		var ret string
		return ret
	}
	return *o.CustomfieldAlias
}

// GetCustomfieldAliasOk returns a tuple with the CustomfieldAlias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTaskCusomFieldV3Request) GetCustomfieldAliasOk() (*string, bool) {
	if o == nil || IsNil(o.CustomfieldAlias) {
		return nil, false
	}
	return o.CustomfieldAlias, true
}

// HasCustomfieldAlias returns a boolean if a field has been set.
func (o *UpdateTaskCusomFieldV3Request) HasCustomfieldAlias() bool {
	if o != nil && !IsNil(o.CustomfieldAlias) {
		return true
	}

	return false
}

// SetCustomfieldAlias gets a reference to the given string and assigns it to the CustomfieldAlias field.
func (o *UpdateTaskCusomFieldV3Request) SetCustomfieldAlias(v string) {
	o.CustomfieldAlias = &v
}

// GetDisableActivity returns the DisableActivity field value if set, zero value otherwise.
func (o *UpdateTaskCusomFieldV3Request) GetDisableActivity() bool {
	if o == nil || IsNil(o.DisableActivity) {
		var ret bool
		return ret
	}
	return *o.DisableActivity
}

// GetDisableActivityOk returns a tuple with the DisableActivity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTaskCusomFieldV3Request) GetDisableActivityOk() (*bool, bool) {
	if o == nil || IsNil(o.DisableActivity) {
		return nil, false
	}
	return o.DisableActivity, true
}

// HasDisableActivity returns a boolean if a field has been set.
func (o *UpdateTaskCusomFieldV3Request) HasDisableActivity() bool {
	if o != nil && !IsNil(o.DisableActivity) {
		return true
	}

	return false
}

// SetDisableActivity gets a reference to the given bool and assigns it to the DisableActivity field.
func (o *UpdateTaskCusomFieldV3Request) SetDisableActivity(v bool) {
	o.DisableActivity = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *UpdateTaskCusomFieldV3Request) GetValue() []UpdateTaskCusomFieldV3RequestValueInner {
	if o == nil || IsNil(o.Value) {
		var ret []UpdateTaskCusomFieldV3RequestValueInner
		return ret
	}
	return o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTaskCusomFieldV3Request) GetValueOk() ([]UpdateTaskCusomFieldV3RequestValueInner, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *UpdateTaskCusomFieldV3Request) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given []UpdateTaskCusomFieldV3RequestValueInner and assigns it to the Value field.
func (o *UpdateTaskCusomFieldV3Request) SetValue(v []UpdateTaskCusomFieldV3RequestValueInner) {
	o.Value = v
}

// GetAddValues returns the AddValues field value if set, zero value otherwise.
func (o *UpdateTaskCusomFieldV3Request) GetAddValues() []UpdateTaskCusomFieldV3RequestAddValuesInner {
	if o == nil || IsNil(o.AddValues) {
		var ret []UpdateTaskCusomFieldV3RequestAddValuesInner
		return ret
	}
	return o.AddValues
}

// GetAddValuesOk returns a tuple with the AddValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTaskCusomFieldV3Request) GetAddValuesOk() ([]UpdateTaskCusomFieldV3RequestAddValuesInner, bool) {
	if o == nil || IsNil(o.AddValues) {
		return nil, false
	}
	return o.AddValues, true
}

// HasAddValues returns a boolean if a field has been set.
func (o *UpdateTaskCusomFieldV3Request) HasAddValues() bool {
	if o != nil && !IsNil(o.AddValues) {
		return true
	}

	return false
}

// SetAddValues gets a reference to the given []UpdateTaskCusomFieldV3RequestAddValuesInner and assigns it to the AddValues field.
func (o *UpdateTaskCusomFieldV3Request) SetAddValues(v []UpdateTaskCusomFieldV3RequestAddValuesInner) {
	o.AddValues = v
}

// GetDelValues returns the DelValues field value if set, zero value otherwise.
func (o *UpdateTaskCusomFieldV3Request) GetDelValues() []UpdateTaskCusomFieldV3RequestDelValuesInner {
	if o == nil || IsNil(o.DelValues) {
		var ret []UpdateTaskCusomFieldV3RequestDelValuesInner
		return ret
	}
	return o.DelValues
}

// GetDelValuesOk returns a tuple with the DelValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTaskCusomFieldV3Request) GetDelValuesOk() ([]UpdateTaskCusomFieldV3RequestDelValuesInner, bool) {
	if o == nil || IsNil(o.DelValues) {
		return nil, false
	}
	return o.DelValues, true
}

// HasDelValues returns a boolean if a field has been set.
func (o *UpdateTaskCusomFieldV3Request) HasDelValues() bool {
	if o != nil && !IsNil(o.DelValues) {
		return true
	}

	return false
}

// SetDelValues gets a reference to the given []UpdateTaskCusomFieldV3RequestDelValuesInner and assigns it to the DelValues field.
func (o *UpdateTaskCusomFieldV3Request) SetDelValues(v []UpdateTaskCusomFieldV3RequestDelValuesInner) {
	o.DelValues = v
}

func (o UpdateTaskCusomFieldV3Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateTaskCusomFieldV3Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CustomfieldId) {
		toSerialize["customfieldId"] = o.CustomfieldId
	}
	if !IsNil(o.CustomfieldName) {
		toSerialize["customfieldName"] = o.CustomfieldName
	}
	if !IsNil(o.CustomfieldInstanceId) {
		toSerialize["customfieldInstanceId"] = o.CustomfieldInstanceId
	}
	if !IsNil(o.CustomfieldAlias) {
		toSerialize["customfieldAlias"] = o.CustomfieldAlias
	}
	if !IsNil(o.DisableActivity) {
		toSerialize["disableActivity"] = o.DisableActivity
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.AddValues) {
		toSerialize["addValues"] = o.AddValues
	}
	if !IsNil(o.DelValues) {
		toSerialize["delValues"] = o.DelValues
	}
	return toSerialize, nil
}

type NullableUpdateTaskCusomFieldV3Request struct {
	value *UpdateTaskCusomFieldV3Request
	isSet bool
}

func (v NullableUpdateTaskCusomFieldV3Request) Get() *UpdateTaskCusomFieldV3Request {
	return v.value
}

func (v *NullableUpdateTaskCusomFieldV3Request) Set(val *UpdateTaskCusomFieldV3Request) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateTaskCusomFieldV3Request) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateTaskCusomFieldV3Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateTaskCusomFieldV3Request(val *UpdateTaskCusomFieldV3Request) *NullableUpdateTaskCusomFieldV3Request {
	return &NullableUpdateTaskCusomFieldV3Request{value: val, isSet: true}
}

func (v NullableUpdateTaskCusomFieldV3Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateTaskCusomFieldV3Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


