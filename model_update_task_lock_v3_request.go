/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateTaskLockV3Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateTaskLockV3Request{}

// UpdateTaskLockV3Request struct for UpdateTaskLockV3Request
type UpdateTaskLockV3Request struct {
	// 新增锁定动作（加锁）
	Add []UpdateTaskLockV3RequestAddInner `json:"add,omitempty"`
	// 删除锁定动作（解锁）
	Del []UpdateTaskLockV3RequestAddInner `json:"del,omitempty"`
}

// NewUpdateTaskLockV3Request instantiates a new UpdateTaskLockV3Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateTaskLockV3Request() *UpdateTaskLockV3Request {
	this := UpdateTaskLockV3Request{}
	return &this
}

// NewUpdateTaskLockV3RequestWithDefaults instantiates a new UpdateTaskLockV3Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateTaskLockV3RequestWithDefaults() *UpdateTaskLockV3Request {
	this := UpdateTaskLockV3Request{}
	return &this
}

// GetAdd returns the Add field value if set, zero value otherwise.
func (o *UpdateTaskLockV3Request) GetAdd() []UpdateTaskLockV3RequestAddInner {
	if o == nil || IsNil(o.Add) {
		var ret []UpdateTaskLockV3RequestAddInner
		return ret
	}
	return o.Add
}

// GetAddOk returns a tuple with the Add field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTaskLockV3Request) GetAddOk() ([]UpdateTaskLockV3RequestAddInner, bool) {
	if o == nil || IsNil(o.Add) {
		return nil, false
	}
	return o.Add, true
}

// HasAdd returns a boolean if a field has been set.
func (o *UpdateTaskLockV3Request) HasAdd() bool {
	if o != nil && !IsNil(o.Add) {
		return true
	}

	return false
}

// SetAdd gets a reference to the given []UpdateTaskLockV3RequestAddInner and assigns it to the Add field.
func (o *UpdateTaskLockV3Request) SetAdd(v []UpdateTaskLockV3RequestAddInner) {
	o.Add = v
}

// GetDel returns the Del field value if set, zero value otherwise.
func (o *UpdateTaskLockV3Request) GetDel() []UpdateTaskLockV3RequestAddInner {
	if o == nil || IsNil(o.Del) {
		var ret []UpdateTaskLockV3RequestAddInner
		return ret
	}
	return o.Del
}

// GetDelOk returns a tuple with the Del field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTaskLockV3Request) GetDelOk() ([]UpdateTaskLockV3RequestAddInner, bool) {
	if o == nil || IsNil(o.Del) {
		return nil, false
	}
	return o.Del, true
}

// HasDel returns a boolean if a field has been set.
func (o *UpdateTaskLockV3Request) HasDel() bool {
	if o != nil && !IsNil(o.Del) {
		return true
	}

	return false
}

// SetDel gets a reference to the given []UpdateTaskLockV3RequestAddInner and assigns it to the Del field.
func (o *UpdateTaskLockV3Request) SetDel(v []UpdateTaskLockV3RequestAddInner) {
	o.Del = v
}

func (o UpdateTaskLockV3Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateTaskLockV3Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Add) {
		toSerialize["add"] = o.Add
	}
	if !IsNil(o.Del) {
		toSerialize["del"] = o.Del
	}
	return toSerialize, nil
}

type NullableUpdateTaskLockV3Request struct {
	value *UpdateTaskLockV3Request
	isSet bool
}

func (v NullableUpdateTaskLockV3Request) Get() *UpdateTaskLockV3Request {
	return v.value
}

func (v *NullableUpdateTaskLockV3Request) Set(val *UpdateTaskLockV3Request) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateTaskLockV3Request) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateTaskLockV3Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateTaskLockV3Request(val *UpdateTaskLockV3Request) *NullableUpdateTaskLockV3Request {
	return &NullableUpdateTaskLockV3Request{value: val, isSet: true}
}

func (v NullableUpdateTaskLockV3Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateTaskLockV3Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


