/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateTaskNoteV3Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateTaskNoteV3Request{}

// UpdateTaskNoteV3Request 更新任务备注请求
type UpdateTaskNoteV3Request struct {
	// 任务备注
	Note *string `json:"note,omitempty"`
	// 任务备注渲染模式, markdown, rtf, rtf就是富文本，富文本需要提交 rtfValueToken
	RenderMode *string `json:"renderMode,omitempty"`
	// 富文本内容，格式仅限从 rtf/render 接口中获取的 rtfValue
	RtfValueToken *string `json:"rtfValueToken,omitempty"`
}

// NewUpdateTaskNoteV3Request instantiates a new UpdateTaskNoteV3Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateTaskNoteV3Request() *UpdateTaskNoteV3Request {
	this := UpdateTaskNoteV3Request{}
	return &this
}

// NewUpdateTaskNoteV3RequestWithDefaults instantiates a new UpdateTaskNoteV3Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateTaskNoteV3RequestWithDefaults() *UpdateTaskNoteV3Request {
	this := UpdateTaskNoteV3Request{}
	return &this
}

// GetNote returns the Note field value if set, zero value otherwise.
func (o *UpdateTaskNoteV3Request) GetNote() string {
	if o == nil || IsNil(o.Note) {
		var ret string
		return ret
	}
	return *o.Note
}

// GetNoteOk returns a tuple with the Note field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTaskNoteV3Request) GetNoteOk() (*string, bool) {
	if o == nil || IsNil(o.Note) {
		return nil, false
	}
	return o.Note, true
}

// HasNote returns a boolean if a field has been set.
func (o *UpdateTaskNoteV3Request) HasNote() bool {
	if o != nil && !IsNil(o.Note) {
		return true
	}

	return false
}

// SetNote gets a reference to the given string and assigns it to the Note field.
func (o *UpdateTaskNoteV3Request) SetNote(v string) {
	o.Note = &v
}

// GetRenderMode returns the RenderMode field value if set, zero value otherwise.
func (o *UpdateTaskNoteV3Request) GetRenderMode() string {
	if o == nil || IsNil(o.RenderMode) {
		var ret string
		return ret
	}
	return *o.RenderMode
}

// GetRenderModeOk returns a tuple with the RenderMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTaskNoteV3Request) GetRenderModeOk() (*string, bool) {
	if o == nil || IsNil(o.RenderMode) {
		return nil, false
	}
	return o.RenderMode, true
}

// HasRenderMode returns a boolean if a field has been set.
func (o *UpdateTaskNoteV3Request) HasRenderMode() bool {
	if o != nil && !IsNil(o.RenderMode) {
		return true
	}

	return false
}

// SetRenderMode gets a reference to the given string and assigns it to the RenderMode field.
func (o *UpdateTaskNoteV3Request) SetRenderMode(v string) {
	o.RenderMode = &v
}

// GetRtfValueToken returns the RtfValueToken field value if set, zero value otherwise.
func (o *UpdateTaskNoteV3Request) GetRtfValueToken() string {
	if o == nil || IsNil(o.RtfValueToken) {
		var ret string
		return ret
	}
	return *o.RtfValueToken
}

// GetRtfValueTokenOk returns a tuple with the RtfValueToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTaskNoteV3Request) GetRtfValueTokenOk() (*string, bool) {
	if o == nil || IsNil(o.RtfValueToken) {
		return nil, false
	}
	return o.RtfValueToken, true
}

// HasRtfValueToken returns a boolean if a field has been set.
func (o *UpdateTaskNoteV3Request) HasRtfValueToken() bool {
	if o != nil && !IsNil(o.RtfValueToken) {
		return true
	}

	return false
}

// SetRtfValueToken gets a reference to the given string and assigns it to the RtfValueToken field.
func (o *UpdateTaskNoteV3Request) SetRtfValueToken(v string) {
	o.RtfValueToken = &v
}

func (o UpdateTaskNoteV3Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateTaskNoteV3Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Note) {
		toSerialize["note"] = o.Note
	}
	if !IsNil(o.RenderMode) {
		toSerialize["renderMode"] = o.RenderMode
	}
	if !IsNil(o.RtfValueToken) {
		toSerialize["rtfValueToken"] = o.RtfValueToken
	}
	return toSerialize, nil
}

type NullableUpdateTaskNoteV3Request struct {
	value *UpdateTaskNoteV3Request
	isSet bool
}

func (v NullableUpdateTaskNoteV3Request) Get() *UpdateTaskNoteV3Request {
	return v.value
}

func (v *NullableUpdateTaskNoteV3Request) Set(val *UpdateTaskNoteV3Request) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateTaskNoteV3Request) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateTaskNoteV3Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateTaskNoteV3Request(val *UpdateTaskNoteV3Request) *NullableUpdateTaskNoteV3Request {
	return &NullableUpdateTaskNoteV3Request{value: val, isSet: true}
}

func (v NullableUpdateTaskNoteV3Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateTaskNoteV3Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


