/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateTaskParentV3Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateTaskParentV3Request{}

// UpdateTaskParentV3Request struct for UpdateTaskParentV3Request
type UpdateTaskParentV3Request struct {
	// 目标任务ID
	TargetId *string `json:"targetId,omitempty"`
}

// NewUpdateTaskParentV3Request instantiates a new UpdateTaskParentV3Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateTaskParentV3Request() *UpdateTaskParentV3Request {
	this := UpdateTaskParentV3Request{}
	return &this
}

// NewUpdateTaskParentV3RequestWithDefaults instantiates a new UpdateTaskParentV3Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateTaskParentV3RequestWithDefaults() *UpdateTaskParentV3Request {
	this := UpdateTaskParentV3Request{}
	return &this
}

// GetTargetId returns the TargetId field value if set, zero value otherwise.
func (o *UpdateTaskParentV3Request) GetTargetId() string {
	if o == nil || IsNil(o.TargetId) {
		var ret string
		return ret
	}
	return *o.TargetId
}

// GetTargetIdOk returns a tuple with the TargetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTaskParentV3Request) GetTargetIdOk() (*string, bool) {
	if o == nil || IsNil(o.TargetId) {
		return nil, false
	}
	return o.TargetId, true
}

// HasTargetId returns a boolean if a field has been set.
func (o *UpdateTaskParentV3Request) HasTargetId() bool {
	if o != nil && !IsNil(o.TargetId) {
		return true
	}

	return false
}

// SetTargetId gets a reference to the given string and assigns it to the TargetId field.
func (o *UpdateTaskParentV3Request) SetTargetId(v string) {
	o.TargetId = &v
}

func (o UpdateTaskParentV3Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateTaskParentV3Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TargetId) {
		toSerialize["targetId"] = o.TargetId
	}
	return toSerialize, nil
}

type NullableUpdateTaskParentV3Request struct {
	value *UpdateTaskParentV3Request
	isSet bool
}

func (v NullableUpdateTaskParentV3Request) Get() *UpdateTaskParentV3Request {
	return v.value
}

func (v *NullableUpdateTaskParentV3Request) Set(val *UpdateTaskParentV3Request) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateTaskParentV3Request) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateTaskParentV3Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateTaskParentV3Request(val *UpdateTaskParentV3Request) *NullableUpdateTaskParentV3Request {
	return &NullableUpdateTaskParentV3Request{value: val, isSet: true}
}

func (v NullableUpdateTaskParentV3Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateTaskParentV3Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


