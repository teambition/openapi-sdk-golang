/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the UpdateTaskProgressV3ResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateTaskProgressV3ResponseResult{}

// UpdateTaskProgressV3ResponseResult 
type UpdateTaskProgressV3ResponseResult struct {
	// 进度
	Progress *float32 `json:"progress,omitempty"`
	// 
	Updated *time.Time `json:"updated,omitempty"`
}

// NewUpdateTaskProgressV3ResponseResult instantiates a new UpdateTaskProgressV3ResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateTaskProgressV3ResponseResult() *UpdateTaskProgressV3ResponseResult {
	this := UpdateTaskProgressV3ResponseResult{}
	return &this
}

// NewUpdateTaskProgressV3ResponseResultWithDefaults instantiates a new UpdateTaskProgressV3ResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateTaskProgressV3ResponseResultWithDefaults() *UpdateTaskProgressV3ResponseResult {
	this := UpdateTaskProgressV3ResponseResult{}
	return &this
}

// GetProgress returns the Progress field value if set, zero value otherwise.
func (o *UpdateTaskProgressV3ResponseResult) GetProgress() float32 {
	if o == nil || IsNil(o.Progress) {
		var ret float32
		return ret
	}
	return *o.Progress
}

// GetProgressOk returns a tuple with the Progress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTaskProgressV3ResponseResult) GetProgressOk() (*float32, bool) {
	if o == nil || IsNil(o.Progress) {
		return nil, false
	}
	return o.Progress, true
}

// HasProgress returns a boolean if a field has been set.
func (o *UpdateTaskProgressV3ResponseResult) HasProgress() bool {
	if o != nil && !IsNil(o.Progress) {
		return true
	}

	return false
}

// SetProgress gets a reference to the given float32 and assigns it to the Progress field.
func (o *UpdateTaskProgressV3ResponseResult) SetProgress(v float32) {
	o.Progress = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *UpdateTaskProgressV3ResponseResult) GetUpdated() time.Time {
	if o == nil || IsNil(o.Updated) {
		var ret time.Time
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTaskProgressV3ResponseResult) GetUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Updated) {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *UpdateTaskProgressV3ResponseResult) HasUpdated() bool {
	if o != nil && !IsNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given time.Time and assigns it to the Updated field.
func (o *UpdateTaskProgressV3ResponseResult) SetUpdated(v time.Time) {
	o.Updated = &v
}

func (o UpdateTaskProgressV3ResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateTaskProgressV3ResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Progress) {
		toSerialize["progress"] = o.Progress
	}
	if !IsNil(o.Updated) {
		toSerialize["updated"] = o.Updated
	}
	return toSerialize, nil
}

type NullableUpdateTaskProgressV3ResponseResult struct {
	value *UpdateTaskProgressV3ResponseResult
	isSet bool
}

func (v NullableUpdateTaskProgressV3ResponseResult) Get() *UpdateTaskProgressV3ResponseResult {
	return v.value
}

func (v *NullableUpdateTaskProgressV3ResponseResult) Set(val *UpdateTaskProgressV3ResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateTaskProgressV3ResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateTaskProgressV3ResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateTaskProgressV3ResponseResult(val *UpdateTaskProgressV3ResponseResult) *NullableUpdateTaskProgressV3ResponseResult {
	return &NullableUpdateTaskProgressV3ResponseResult{value: val, isSet: true}
}

func (v NullableUpdateTaskProgressV3ResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateTaskProgressV3ResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


