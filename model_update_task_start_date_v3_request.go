/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the UpdateTaskStartDateV3Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateTaskStartDateV3Request{}

// UpdateTaskStartDateV3Request struct for UpdateTaskStartDateV3Request
type UpdateTaskStartDateV3Request struct {
	StartDate *time.Time `json:"startDate,omitempty"`
	// 是否忽略触发动态
	DisableActivity *bool `json:"disableActivity,omitempty"`
	// 是否忽略触发通知
	DisableNotification *bool `json:"disableNotification,omitempty"`
}

// NewUpdateTaskStartDateV3Request instantiates a new UpdateTaskStartDateV3Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateTaskStartDateV3Request() *UpdateTaskStartDateV3Request {
	this := UpdateTaskStartDateV3Request{}
	return &this
}

// NewUpdateTaskStartDateV3RequestWithDefaults instantiates a new UpdateTaskStartDateV3Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateTaskStartDateV3RequestWithDefaults() *UpdateTaskStartDateV3Request {
	this := UpdateTaskStartDateV3Request{}
	return &this
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *UpdateTaskStartDateV3Request) GetStartDate() time.Time {
	if o == nil || IsNil(o.StartDate) {
		var ret time.Time
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTaskStartDateV3Request) GetStartDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *UpdateTaskStartDateV3Request) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given time.Time and assigns it to the StartDate field.
func (o *UpdateTaskStartDateV3Request) SetStartDate(v time.Time) {
	o.StartDate = &v
}

// GetDisableActivity returns the DisableActivity field value if set, zero value otherwise.
func (o *UpdateTaskStartDateV3Request) GetDisableActivity() bool {
	if o == nil || IsNil(o.DisableActivity) {
		var ret bool
		return ret
	}
	return *o.DisableActivity
}

// GetDisableActivityOk returns a tuple with the DisableActivity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTaskStartDateV3Request) GetDisableActivityOk() (*bool, bool) {
	if o == nil || IsNil(o.DisableActivity) {
		return nil, false
	}
	return o.DisableActivity, true
}

// HasDisableActivity returns a boolean if a field has been set.
func (o *UpdateTaskStartDateV3Request) HasDisableActivity() bool {
	if o != nil && !IsNil(o.DisableActivity) {
		return true
	}

	return false
}

// SetDisableActivity gets a reference to the given bool and assigns it to the DisableActivity field.
func (o *UpdateTaskStartDateV3Request) SetDisableActivity(v bool) {
	o.DisableActivity = &v
}

// GetDisableNotification returns the DisableNotification field value if set, zero value otherwise.
func (o *UpdateTaskStartDateV3Request) GetDisableNotification() bool {
	if o == nil || IsNil(o.DisableNotification) {
		var ret bool
		return ret
	}
	return *o.DisableNotification
}

// GetDisableNotificationOk returns a tuple with the DisableNotification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTaskStartDateV3Request) GetDisableNotificationOk() (*bool, bool) {
	if o == nil || IsNil(o.DisableNotification) {
		return nil, false
	}
	return o.DisableNotification, true
}

// HasDisableNotification returns a boolean if a field has been set.
func (o *UpdateTaskStartDateV3Request) HasDisableNotification() bool {
	if o != nil && !IsNil(o.DisableNotification) {
		return true
	}

	return false
}

// SetDisableNotification gets a reference to the given bool and assigns it to the DisableNotification field.
func (o *UpdateTaskStartDateV3Request) SetDisableNotification(v bool) {
	o.DisableNotification = &v
}

func (o UpdateTaskStartDateV3Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateTaskStartDateV3Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.DisableActivity) {
		toSerialize["disableActivity"] = o.DisableActivity
	}
	if !IsNil(o.DisableNotification) {
		toSerialize["disableNotification"] = o.DisableNotification
	}
	return toSerialize, nil
}

type NullableUpdateTaskStartDateV3Request struct {
	value *UpdateTaskStartDateV3Request
	isSet bool
}

func (v NullableUpdateTaskStartDateV3Request) Get() *UpdateTaskStartDateV3Request {
	return v.value
}

func (v *NullableUpdateTaskStartDateV3Request) Set(val *UpdateTaskStartDateV3Request) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateTaskStartDateV3Request) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateTaskStartDateV3Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateTaskStartDateV3Request(val *UpdateTaskStartDateV3Request) *NullableUpdateTaskStartDateV3Request {
	return &NullableUpdateTaskStartDateV3Request{value: val, isSet: true}
}

func (v NullableUpdateTaskStartDateV3Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateTaskStartDateV3Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


