/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the UpdateTaskStartDateV3ResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateTaskStartDateV3ResponseResult{}

// UpdateTaskStartDateV3ResponseResult struct for UpdateTaskStartDateV3ResponseResult
type UpdateTaskStartDateV3ResponseResult struct {
	StartDate *time.Time `json:"startDate,omitempty"`
	Updated *time.Time `json:"updated,omitempty"`
}

// NewUpdateTaskStartDateV3ResponseResult instantiates a new UpdateTaskStartDateV3ResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateTaskStartDateV3ResponseResult() *UpdateTaskStartDateV3ResponseResult {
	this := UpdateTaskStartDateV3ResponseResult{}
	return &this
}

// NewUpdateTaskStartDateV3ResponseResultWithDefaults instantiates a new UpdateTaskStartDateV3ResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateTaskStartDateV3ResponseResultWithDefaults() *UpdateTaskStartDateV3ResponseResult {
	this := UpdateTaskStartDateV3ResponseResult{}
	return &this
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *UpdateTaskStartDateV3ResponseResult) GetStartDate() time.Time {
	if o == nil || IsNil(o.StartDate) {
		var ret time.Time
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTaskStartDateV3ResponseResult) GetStartDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *UpdateTaskStartDateV3ResponseResult) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given time.Time and assigns it to the StartDate field.
func (o *UpdateTaskStartDateV3ResponseResult) SetStartDate(v time.Time) {
	o.StartDate = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *UpdateTaskStartDateV3ResponseResult) GetUpdated() time.Time {
	if o == nil || IsNil(o.Updated) {
		var ret time.Time
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTaskStartDateV3ResponseResult) GetUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Updated) {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *UpdateTaskStartDateV3ResponseResult) HasUpdated() bool {
	if o != nil && !IsNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given time.Time and assigns it to the Updated field.
func (o *UpdateTaskStartDateV3ResponseResult) SetUpdated(v time.Time) {
	o.Updated = &v
}

func (o UpdateTaskStartDateV3ResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateTaskStartDateV3ResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.Updated) {
		toSerialize["updated"] = o.Updated
	}
	return toSerialize, nil
}

type NullableUpdateTaskStartDateV3ResponseResult struct {
	value *UpdateTaskStartDateV3ResponseResult
	isSet bool
}

func (v NullableUpdateTaskStartDateV3ResponseResult) Get() *UpdateTaskStartDateV3ResponseResult {
	return v.value
}

func (v *NullableUpdateTaskStartDateV3ResponseResult) Set(val *UpdateTaskStartDateV3ResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateTaskStartDateV3ResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateTaskStartDateV3ResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateTaskStartDateV3ResponseResult(val *UpdateTaskStartDateV3ResponseResult) *NullableUpdateTaskStartDateV3ResponseResult {
	return &NullableUpdateTaskStartDateV3ResponseResult{value: val, isSet: true}
}

func (v NullableUpdateTaskStartDateV3ResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateTaskStartDateV3ResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


