/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateTaskTagsV3Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateTaskTagsV3Request{}

// UpdateTaskTagsV3Request struct for UpdateTaskTagsV3Request
type UpdateTaskTagsV3Request struct {
	// 替换的标签ID集合
	TagIds []string `json:"tagIds,omitempty"`
	// 替换的标签名称列表（列表中标签取通过标签名匹配到的第一个标签，与tagIds同时传入时优先用tagIds）
	TagNames []string `json:"tagNames,omitempty"`
	// 删除的标签ID集合
	DelTagIds []string `json:"delTagIds,omitempty"`
	// 删除的标签名称列表（列表中标签取通过标签名匹配到的第一个标签，与tagIds同时传入时优先用delTagIds）
	DelTagNames []string `json:"delTagNames,omitempty"`
	// 新增的标签ID集合
	AddTagIds []string `json:"addTagIds,omitempty"`
	// 新增的标签名称列表（列表中标签取通过标签名匹配到的第一个标签，与tagIds同时传入时优先用addTagIds）
	AddTagNames []string `json:"addTagNames,omitempty"`
}

// NewUpdateTaskTagsV3Request instantiates a new UpdateTaskTagsV3Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateTaskTagsV3Request() *UpdateTaskTagsV3Request {
	this := UpdateTaskTagsV3Request{}
	return &this
}

// NewUpdateTaskTagsV3RequestWithDefaults instantiates a new UpdateTaskTagsV3Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateTaskTagsV3RequestWithDefaults() *UpdateTaskTagsV3Request {
	this := UpdateTaskTagsV3Request{}
	return &this
}

// GetTagIds returns the TagIds field value if set, zero value otherwise.
func (o *UpdateTaskTagsV3Request) GetTagIds() []string {
	if o == nil || IsNil(o.TagIds) {
		var ret []string
		return ret
	}
	return o.TagIds
}

// GetTagIdsOk returns a tuple with the TagIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTaskTagsV3Request) GetTagIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.TagIds) {
		return nil, false
	}
	return o.TagIds, true
}

// HasTagIds returns a boolean if a field has been set.
func (o *UpdateTaskTagsV3Request) HasTagIds() bool {
	if o != nil && !IsNil(o.TagIds) {
		return true
	}

	return false
}

// SetTagIds gets a reference to the given []string and assigns it to the TagIds field.
func (o *UpdateTaskTagsV3Request) SetTagIds(v []string) {
	o.TagIds = v
}

// GetTagNames returns the TagNames field value if set, zero value otherwise.
func (o *UpdateTaskTagsV3Request) GetTagNames() []string {
	if o == nil || IsNil(o.TagNames) {
		var ret []string
		return ret
	}
	return o.TagNames
}

// GetTagNamesOk returns a tuple with the TagNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTaskTagsV3Request) GetTagNamesOk() ([]string, bool) {
	if o == nil || IsNil(o.TagNames) {
		return nil, false
	}
	return o.TagNames, true
}

// HasTagNames returns a boolean if a field has been set.
func (o *UpdateTaskTagsV3Request) HasTagNames() bool {
	if o != nil && !IsNil(o.TagNames) {
		return true
	}

	return false
}

// SetTagNames gets a reference to the given []string and assigns it to the TagNames field.
func (o *UpdateTaskTagsV3Request) SetTagNames(v []string) {
	o.TagNames = v
}

// GetDelTagIds returns the DelTagIds field value if set, zero value otherwise.
func (o *UpdateTaskTagsV3Request) GetDelTagIds() []string {
	if o == nil || IsNil(o.DelTagIds) {
		var ret []string
		return ret
	}
	return o.DelTagIds
}

// GetDelTagIdsOk returns a tuple with the DelTagIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTaskTagsV3Request) GetDelTagIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.DelTagIds) {
		return nil, false
	}
	return o.DelTagIds, true
}

// HasDelTagIds returns a boolean if a field has been set.
func (o *UpdateTaskTagsV3Request) HasDelTagIds() bool {
	if o != nil && !IsNil(o.DelTagIds) {
		return true
	}

	return false
}

// SetDelTagIds gets a reference to the given []string and assigns it to the DelTagIds field.
func (o *UpdateTaskTagsV3Request) SetDelTagIds(v []string) {
	o.DelTagIds = v
}

// GetDelTagNames returns the DelTagNames field value if set, zero value otherwise.
func (o *UpdateTaskTagsV3Request) GetDelTagNames() []string {
	if o == nil || IsNil(o.DelTagNames) {
		var ret []string
		return ret
	}
	return o.DelTagNames
}

// GetDelTagNamesOk returns a tuple with the DelTagNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTaskTagsV3Request) GetDelTagNamesOk() ([]string, bool) {
	if o == nil || IsNil(o.DelTagNames) {
		return nil, false
	}
	return o.DelTagNames, true
}

// HasDelTagNames returns a boolean if a field has been set.
func (o *UpdateTaskTagsV3Request) HasDelTagNames() bool {
	if o != nil && !IsNil(o.DelTagNames) {
		return true
	}

	return false
}

// SetDelTagNames gets a reference to the given []string and assigns it to the DelTagNames field.
func (o *UpdateTaskTagsV3Request) SetDelTagNames(v []string) {
	o.DelTagNames = v
}

// GetAddTagIds returns the AddTagIds field value if set, zero value otherwise.
func (o *UpdateTaskTagsV3Request) GetAddTagIds() []string {
	if o == nil || IsNil(o.AddTagIds) {
		var ret []string
		return ret
	}
	return o.AddTagIds
}

// GetAddTagIdsOk returns a tuple with the AddTagIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTaskTagsV3Request) GetAddTagIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.AddTagIds) {
		return nil, false
	}
	return o.AddTagIds, true
}

// HasAddTagIds returns a boolean if a field has been set.
func (o *UpdateTaskTagsV3Request) HasAddTagIds() bool {
	if o != nil && !IsNil(o.AddTagIds) {
		return true
	}

	return false
}

// SetAddTagIds gets a reference to the given []string and assigns it to the AddTagIds field.
func (o *UpdateTaskTagsV3Request) SetAddTagIds(v []string) {
	o.AddTagIds = v
}

// GetAddTagNames returns the AddTagNames field value if set, zero value otherwise.
func (o *UpdateTaskTagsV3Request) GetAddTagNames() []string {
	if o == nil || IsNil(o.AddTagNames) {
		var ret []string
		return ret
	}
	return o.AddTagNames
}

// GetAddTagNamesOk returns a tuple with the AddTagNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTaskTagsV3Request) GetAddTagNamesOk() ([]string, bool) {
	if o == nil || IsNil(o.AddTagNames) {
		return nil, false
	}
	return o.AddTagNames, true
}

// HasAddTagNames returns a boolean if a field has been set.
func (o *UpdateTaskTagsV3Request) HasAddTagNames() bool {
	if o != nil && !IsNil(o.AddTagNames) {
		return true
	}

	return false
}

// SetAddTagNames gets a reference to the given []string and assigns it to the AddTagNames field.
func (o *UpdateTaskTagsV3Request) SetAddTagNames(v []string) {
	o.AddTagNames = v
}

func (o UpdateTaskTagsV3Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateTaskTagsV3Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TagIds) {
		toSerialize["tagIds"] = o.TagIds
	}
	if !IsNil(o.TagNames) {
		toSerialize["tagNames"] = o.TagNames
	}
	if !IsNil(o.DelTagIds) {
		toSerialize["delTagIds"] = o.DelTagIds
	}
	if !IsNil(o.DelTagNames) {
		toSerialize["delTagNames"] = o.DelTagNames
	}
	if !IsNil(o.AddTagIds) {
		toSerialize["addTagIds"] = o.AddTagIds
	}
	if !IsNil(o.AddTagNames) {
		toSerialize["addTagNames"] = o.AddTagNames
	}
	return toSerialize, nil
}

type NullableUpdateTaskTagsV3Request struct {
	value *UpdateTaskTagsV3Request
	isSet bool
}

func (v NullableUpdateTaskTagsV3Request) Get() *UpdateTaskTagsV3Request {
	return v.value
}

func (v *NullableUpdateTaskTagsV3Request) Set(val *UpdateTaskTagsV3Request) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateTaskTagsV3Request) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateTaskTagsV3Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateTaskTagsV3Request(val *UpdateTaskTagsV3Request) *NullableUpdateTaskTagsV3Request {
	return &NullableUpdateTaskTagsV3Request{value: val, isSet: true}
}

func (v NullableUpdateTaskTagsV3Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateTaskTagsV3Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


