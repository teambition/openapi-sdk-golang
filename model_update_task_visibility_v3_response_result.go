/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the UpdateTaskVisibilityV3ResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateTaskVisibilityV3ResponseResult{}

// UpdateTaskVisibilityV3ResponseResult struct for UpdateTaskVisibilityV3ResponseResult
type UpdateTaskVisibilityV3ResponseResult struct {
	// 可见性
	Visible *string `json:"visible,omitempty"`
	// 更新时间
	Updated *time.Time `json:"updated,omitempty"`
}

// NewUpdateTaskVisibilityV3ResponseResult instantiates a new UpdateTaskVisibilityV3ResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateTaskVisibilityV3ResponseResult() *UpdateTaskVisibilityV3ResponseResult {
	this := UpdateTaskVisibilityV3ResponseResult{}
	return &this
}

// NewUpdateTaskVisibilityV3ResponseResultWithDefaults instantiates a new UpdateTaskVisibilityV3ResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateTaskVisibilityV3ResponseResultWithDefaults() *UpdateTaskVisibilityV3ResponseResult {
	this := UpdateTaskVisibilityV3ResponseResult{}
	return &this
}

// GetVisible returns the Visible field value if set, zero value otherwise.
func (o *UpdateTaskVisibilityV3ResponseResult) GetVisible() string {
	if o == nil || IsNil(o.Visible) {
		var ret string
		return ret
	}
	return *o.Visible
}

// GetVisibleOk returns a tuple with the Visible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTaskVisibilityV3ResponseResult) GetVisibleOk() (*string, bool) {
	if o == nil || IsNil(o.Visible) {
		return nil, false
	}
	return o.Visible, true
}

// HasVisible returns a boolean if a field has been set.
func (o *UpdateTaskVisibilityV3ResponseResult) HasVisible() bool {
	if o != nil && !IsNil(o.Visible) {
		return true
	}

	return false
}

// SetVisible gets a reference to the given string and assigns it to the Visible field.
func (o *UpdateTaskVisibilityV3ResponseResult) SetVisible(v string) {
	o.Visible = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *UpdateTaskVisibilityV3ResponseResult) GetUpdated() time.Time {
	if o == nil || IsNil(o.Updated) {
		var ret time.Time
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTaskVisibilityV3ResponseResult) GetUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Updated) {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *UpdateTaskVisibilityV3ResponseResult) HasUpdated() bool {
	if o != nil && !IsNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given time.Time and assigns it to the Updated field.
func (o *UpdateTaskVisibilityV3ResponseResult) SetUpdated(v time.Time) {
	o.Updated = &v
}

func (o UpdateTaskVisibilityV3ResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateTaskVisibilityV3ResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Visible) {
		toSerialize["visible"] = o.Visible
	}
	if !IsNil(o.Updated) {
		toSerialize["updated"] = o.Updated
	}
	return toSerialize, nil
}

type NullableUpdateTaskVisibilityV3ResponseResult struct {
	value *UpdateTaskVisibilityV3ResponseResult
	isSet bool
}

func (v NullableUpdateTaskVisibilityV3ResponseResult) Get() *UpdateTaskVisibilityV3ResponseResult {
	return v.value
}

func (v *NullableUpdateTaskVisibilityV3ResponseResult) Set(val *UpdateTaskVisibilityV3ResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateTaskVisibilityV3ResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateTaskVisibilityV3ResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateTaskVisibilityV3ResponseResult(val *UpdateTaskVisibilityV3ResponseResult) *NullableUpdateTaskVisibilityV3ResponseResult {
	return &NullableUpdateTaskVisibilityV3ResponseResult{value: val, isSet: true}
}

func (v NullableUpdateTaskVisibilityV3ResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateTaskVisibilityV3ResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


