/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateTestCaseFlowStatusV3ResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateTestCaseFlowStatusV3ResponseResult{}

// UpdateTestCaseFlowStatusV3ResponseResult struct for UpdateTestCaseFlowStatusV3ResponseResult
type UpdateTestCaseFlowStatusV3ResponseResult struct {
	// 创建者 ID
	CreatorId *string `json:"creatorId,omitempty"`
	// 工作流状态 ID
	FlowstatusId *string `json:"flowstatusId,omitempty"`
	// 测试用例 ID
	Id *string `json:"id,omitempty"`
	// 是否归档
	IsArchived *string `json:"isArchived,omitempty"`
	// 是否完成
	IsDone *bool `json:"isDone,omitempty"`
	// 用例位置
	Pos *int32 `json:"pos,omitempty"`
	// 项目 ID
	ProjectId *string `json:"projectId,omitempty"`
	// 测试计划 ID
	TestplanId *string `json:"testplanId,omitempty"`
	// 用例名称
	Title *string `json:"title,omitempty"`
	// 短ID
	UniqueId *int32 `json:"uniqueId,omitempty"`
}

// NewUpdateTestCaseFlowStatusV3ResponseResult instantiates a new UpdateTestCaseFlowStatusV3ResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateTestCaseFlowStatusV3ResponseResult() *UpdateTestCaseFlowStatusV3ResponseResult {
	this := UpdateTestCaseFlowStatusV3ResponseResult{}
	return &this
}

// NewUpdateTestCaseFlowStatusV3ResponseResultWithDefaults instantiates a new UpdateTestCaseFlowStatusV3ResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateTestCaseFlowStatusV3ResponseResultWithDefaults() *UpdateTestCaseFlowStatusV3ResponseResult {
	this := UpdateTestCaseFlowStatusV3ResponseResult{}
	return &this
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise.
func (o *UpdateTestCaseFlowStatusV3ResponseResult) GetCreatorId() string {
	if o == nil || IsNil(o.CreatorId) {
		var ret string
		return ret
	}
	return *o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTestCaseFlowStatusV3ResponseResult) GetCreatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorId) {
		return nil, false
	}
	return o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *UpdateTestCaseFlowStatusV3ResponseResult) HasCreatorId() bool {
	if o != nil && !IsNil(o.CreatorId) {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given string and assigns it to the CreatorId field.
func (o *UpdateTestCaseFlowStatusV3ResponseResult) SetCreatorId(v string) {
	o.CreatorId = &v
}

// GetFlowstatusId returns the FlowstatusId field value if set, zero value otherwise.
func (o *UpdateTestCaseFlowStatusV3ResponseResult) GetFlowstatusId() string {
	if o == nil || IsNil(o.FlowstatusId) {
		var ret string
		return ret
	}
	return *o.FlowstatusId
}

// GetFlowstatusIdOk returns a tuple with the FlowstatusId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTestCaseFlowStatusV3ResponseResult) GetFlowstatusIdOk() (*string, bool) {
	if o == nil || IsNil(o.FlowstatusId) {
		return nil, false
	}
	return o.FlowstatusId, true
}

// HasFlowstatusId returns a boolean if a field has been set.
func (o *UpdateTestCaseFlowStatusV3ResponseResult) HasFlowstatusId() bool {
	if o != nil && !IsNil(o.FlowstatusId) {
		return true
	}

	return false
}

// SetFlowstatusId gets a reference to the given string and assigns it to the FlowstatusId field.
func (o *UpdateTestCaseFlowStatusV3ResponseResult) SetFlowstatusId(v string) {
	o.FlowstatusId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *UpdateTestCaseFlowStatusV3ResponseResult) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTestCaseFlowStatusV3ResponseResult) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *UpdateTestCaseFlowStatusV3ResponseResult) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *UpdateTestCaseFlowStatusV3ResponseResult) SetId(v string) {
	o.Id = &v
}

// GetIsArchived returns the IsArchived field value if set, zero value otherwise.
func (o *UpdateTestCaseFlowStatusV3ResponseResult) GetIsArchived() string {
	if o == nil || IsNil(o.IsArchived) {
		var ret string
		return ret
	}
	return *o.IsArchived
}

// GetIsArchivedOk returns a tuple with the IsArchived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTestCaseFlowStatusV3ResponseResult) GetIsArchivedOk() (*string, bool) {
	if o == nil || IsNil(o.IsArchived) {
		return nil, false
	}
	return o.IsArchived, true
}

// HasIsArchived returns a boolean if a field has been set.
func (o *UpdateTestCaseFlowStatusV3ResponseResult) HasIsArchived() bool {
	if o != nil && !IsNil(o.IsArchived) {
		return true
	}

	return false
}

// SetIsArchived gets a reference to the given string and assigns it to the IsArchived field.
func (o *UpdateTestCaseFlowStatusV3ResponseResult) SetIsArchived(v string) {
	o.IsArchived = &v
}

// GetIsDone returns the IsDone field value if set, zero value otherwise.
func (o *UpdateTestCaseFlowStatusV3ResponseResult) GetIsDone() bool {
	if o == nil || IsNil(o.IsDone) {
		var ret bool
		return ret
	}
	return *o.IsDone
}

// GetIsDoneOk returns a tuple with the IsDone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTestCaseFlowStatusV3ResponseResult) GetIsDoneOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDone) {
		return nil, false
	}
	return o.IsDone, true
}

// HasIsDone returns a boolean if a field has been set.
func (o *UpdateTestCaseFlowStatusV3ResponseResult) HasIsDone() bool {
	if o != nil && !IsNil(o.IsDone) {
		return true
	}

	return false
}

// SetIsDone gets a reference to the given bool and assigns it to the IsDone field.
func (o *UpdateTestCaseFlowStatusV3ResponseResult) SetIsDone(v bool) {
	o.IsDone = &v
}

// GetPos returns the Pos field value if set, zero value otherwise.
func (o *UpdateTestCaseFlowStatusV3ResponseResult) GetPos() int32 {
	if o == nil || IsNil(o.Pos) {
		var ret int32
		return ret
	}
	return *o.Pos
}

// GetPosOk returns a tuple with the Pos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTestCaseFlowStatusV3ResponseResult) GetPosOk() (*int32, bool) {
	if o == nil || IsNil(o.Pos) {
		return nil, false
	}
	return o.Pos, true
}

// HasPos returns a boolean if a field has been set.
func (o *UpdateTestCaseFlowStatusV3ResponseResult) HasPos() bool {
	if o != nil && !IsNil(o.Pos) {
		return true
	}

	return false
}

// SetPos gets a reference to the given int32 and assigns it to the Pos field.
func (o *UpdateTestCaseFlowStatusV3ResponseResult) SetPos(v int32) {
	o.Pos = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *UpdateTestCaseFlowStatusV3ResponseResult) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId) {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTestCaseFlowStatusV3ResponseResult) GetProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *UpdateTestCaseFlowStatusV3ResponseResult) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *UpdateTestCaseFlowStatusV3ResponseResult) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetTestplanId returns the TestplanId field value if set, zero value otherwise.
func (o *UpdateTestCaseFlowStatusV3ResponseResult) GetTestplanId() string {
	if o == nil || IsNil(o.TestplanId) {
		var ret string
		return ret
	}
	return *o.TestplanId
}

// GetTestplanIdOk returns a tuple with the TestplanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTestCaseFlowStatusV3ResponseResult) GetTestplanIdOk() (*string, bool) {
	if o == nil || IsNil(o.TestplanId) {
		return nil, false
	}
	return o.TestplanId, true
}

// HasTestplanId returns a boolean if a field has been set.
func (o *UpdateTestCaseFlowStatusV3ResponseResult) HasTestplanId() bool {
	if o != nil && !IsNil(o.TestplanId) {
		return true
	}

	return false
}

// SetTestplanId gets a reference to the given string and assigns it to the TestplanId field.
func (o *UpdateTestCaseFlowStatusV3ResponseResult) SetTestplanId(v string) {
	o.TestplanId = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *UpdateTestCaseFlowStatusV3ResponseResult) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTestCaseFlowStatusV3ResponseResult) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *UpdateTestCaseFlowStatusV3ResponseResult) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *UpdateTestCaseFlowStatusV3ResponseResult) SetTitle(v string) {
	o.Title = &v
}

// GetUniqueId returns the UniqueId field value if set, zero value otherwise.
func (o *UpdateTestCaseFlowStatusV3ResponseResult) GetUniqueId() int32 {
	if o == nil || IsNil(o.UniqueId) {
		var ret int32
		return ret
	}
	return *o.UniqueId
}

// GetUniqueIdOk returns a tuple with the UniqueId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTestCaseFlowStatusV3ResponseResult) GetUniqueIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UniqueId) {
		return nil, false
	}
	return o.UniqueId, true
}

// HasUniqueId returns a boolean if a field has been set.
func (o *UpdateTestCaseFlowStatusV3ResponseResult) HasUniqueId() bool {
	if o != nil && !IsNil(o.UniqueId) {
		return true
	}

	return false
}

// SetUniqueId gets a reference to the given int32 and assigns it to the UniqueId field.
func (o *UpdateTestCaseFlowStatusV3ResponseResult) SetUniqueId(v int32) {
	o.UniqueId = &v
}

func (o UpdateTestCaseFlowStatusV3ResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateTestCaseFlowStatusV3ResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatorId) {
		toSerialize["creatorId"] = o.CreatorId
	}
	if !IsNil(o.FlowstatusId) {
		toSerialize["flowstatusId"] = o.FlowstatusId
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.IsArchived) {
		toSerialize["isArchived"] = o.IsArchived
	}
	if !IsNil(o.IsDone) {
		toSerialize["isDone"] = o.IsDone
	}
	if !IsNil(o.Pos) {
		toSerialize["pos"] = o.Pos
	}
	if !IsNil(o.ProjectId) {
		toSerialize["projectId"] = o.ProjectId
	}
	if !IsNil(o.TestplanId) {
		toSerialize["testplanId"] = o.TestplanId
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.UniqueId) {
		toSerialize["uniqueId"] = o.UniqueId
	}
	return toSerialize, nil
}

type NullableUpdateTestCaseFlowStatusV3ResponseResult struct {
	value *UpdateTestCaseFlowStatusV3ResponseResult
	isSet bool
}

func (v NullableUpdateTestCaseFlowStatusV3ResponseResult) Get() *UpdateTestCaseFlowStatusV3ResponseResult {
	return v.value
}

func (v *NullableUpdateTestCaseFlowStatusV3ResponseResult) Set(val *UpdateTestCaseFlowStatusV3ResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateTestCaseFlowStatusV3ResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateTestCaseFlowStatusV3ResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateTestCaseFlowStatusV3ResponseResult(val *UpdateTestCaseFlowStatusV3ResponseResult) *NullableUpdateTestCaseFlowStatusV3ResponseResult {
	return &NullableUpdateTestCaseFlowStatusV3ResponseResult{value: val, isSet: true}
}

func (v NullableUpdateTestCaseFlowStatusV3ResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateTestCaseFlowStatusV3ResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


