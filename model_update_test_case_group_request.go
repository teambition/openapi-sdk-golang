/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateTestCaseGroupRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateTestCaseGroupRequest{}

// UpdateTestCaseGroupRequest struct for UpdateTestCaseGroupRequest
type UpdateTestCaseGroupRequest struct {
	// 分组 ID
	CommongroupId *string `json:"commongroupId,omitempty"`
}

// NewUpdateTestCaseGroupRequest instantiates a new UpdateTestCaseGroupRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateTestCaseGroupRequest() *UpdateTestCaseGroupRequest {
	this := UpdateTestCaseGroupRequest{}
	return &this
}

// NewUpdateTestCaseGroupRequestWithDefaults instantiates a new UpdateTestCaseGroupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateTestCaseGroupRequestWithDefaults() *UpdateTestCaseGroupRequest {
	this := UpdateTestCaseGroupRequest{}
	return &this
}

// GetCommongroupId returns the CommongroupId field value if set, zero value otherwise.
func (o *UpdateTestCaseGroupRequest) GetCommongroupId() string {
	if o == nil || IsNil(o.CommongroupId) {
		var ret string
		return ret
	}
	return *o.CommongroupId
}

// GetCommongroupIdOk returns a tuple with the CommongroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTestCaseGroupRequest) GetCommongroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.CommongroupId) {
		return nil, false
	}
	return o.CommongroupId, true
}

// HasCommongroupId returns a boolean if a field has been set.
func (o *UpdateTestCaseGroupRequest) HasCommongroupId() bool {
	if o != nil && !IsNil(o.CommongroupId) {
		return true
	}

	return false
}

// SetCommongroupId gets a reference to the given string and assigns it to the CommongroupId field.
func (o *UpdateTestCaseGroupRequest) SetCommongroupId(v string) {
	o.CommongroupId = &v
}

func (o UpdateTestCaseGroupRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateTestCaseGroupRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CommongroupId) {
		toSerialize["commongroupId"] = o.CommongroupId
	}
	return toSerialize, nil
}

type NullableUpdateTestCaseGroupRequest struct {
	value *UpdateTestCaseGroupRequest
	isSet bool
}

func (v NullableUpdateTestCaseGroupRequest) Get() *UpdateTestCaseGroupRequest {
	return v.value
}

func (v *NullableUpdateTestCaseGroupRequest) Set(val *UpdateTestCaseGroupRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateTestCaseGroupRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateTestCaseGroupRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateTestCaseGroupRequest(val *UpdateTestCaseGroupRequest) *NullableUpdateTestCaseGroupRequest {
	return &NullableUpdateTestCaseGroupRequest{value: val, isSet: true}
}

func (v NullableUpdateTestCaseGroupRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateTestCaseGroupRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


