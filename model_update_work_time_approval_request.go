/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateWorkTimeApprovalRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateWorkTimeApprovalRequest{}

// UpdateWorkTimeApprovalRequest struct for UpdateWorkTimeApprovalRequest
type UpdateWorkTimeApprovalRequest struct {
	// 审批状态，enum: 待审批 NONE、新建 NEW、运行中 RUNNING、已完成-同意 COMPLETED-AGREE、已完成-拒绝 COMPLETED-REFUSE、撤销 TERMINATED
	Status *string `json:"status,omitempty"`
	// 三方审批单实例ID，非必填
	InstanceId *string `json:"instanceId,omitempty"`
	// 审批单链接
	Url *string `json:"url,omitempty"`
	// 审批单title， 我的审批列表展示用
	Title *string `json:"title,omitempty"`
	// 审批单提交时间， 我的审批列表展示用，例：2023-04-10T07:50:17.947Z
	SubmitTime *string `json:"submitTime,omitempty"`
	// 审批单完成时间， 我的审批列表展示用，例：2023-04-10T07:50:17.947Z
	FinishTime *string `json:"finishTime,omitempty"`
}

// NewUpdateWorkTimeApprovalRequest instantiates a new UpdateWorkTimeApprovalRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateWorkTimeApprovalRequest() *UpdateWorkTimeApprovalRequest {
	this := UpdateWorkTimeApprovalRequest{}
	return &this
}

// NewUpdateWorkTimeApprovalRequestWithDefaults instantiates a new UpdateWorkTimeApprovalRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateWorkTimeApprovalRequestWithDefaults() *UpdateWorkTimeApprovalRequest {
	this := UpdateWorkTimeApprovalRequest{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *UpdateWorkTimeApprovalRequest) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateWorkTimeApprovalRequest) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *UpdateWorkTimeApprovalRequest) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *UpdateWorkTimeApprovalRequest) SetStatus(v string) {
	o.Status = &v
}

// GetInstanceId returns the InstanceId field value if set, zero value otherwise.
func (o *UpdateWorkTimeApprovalRequest) GetInstanceId() string {
	if o == nil || IsNil(o.InstanceId) {
		var ret string
		return ret
	}
	return *o.InstanceId
}

// GetInstanceIdOk returns a tuple with the InstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateWorkTimeApprovalRequest) GetInstanceIdOk() (*string, bool) {
	if o == nil || IsNil(o.InstanceId) {
		return nil, false
	}
	return o.InstanceId, true
}

// HasInstanceId returns a boolean if a field has been set.
func (o *UpdateWorkTimeApprovalRequest) HasInstanceId() bool {
	if o != nil && !IsNil(o.InstanceId) {
		return true
	}

	return false
}

// SetInstanceId gets a reference to the given string and assigns it to the InstanceId field.
func (o *UpdateWorkTimeApprovalRequest) SetInstanceId(v string) {
	o.InstanceId = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *UpdateWorkTimeApprovalRequest) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateWorkTimeApprovalRequest) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *UpdateWorkTimeApprovalRequest) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *UpdateWorkTimeApprovalRequest) SetUrl(v string) {
	o.Url = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *UpdateWorkTimeApprovalRequest) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateWorkTimeApprovalRequest) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *UpdateWorkTimeApprovalRequest) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *UpdateWorkTimeApprovalRequest) SetTitle(v string) {
	o.Title = &v
}

// GetSubmitTime returns the SubmitTime field value if set, zero value otherwise.
func (o *UpdateWorkTimeApprovalRequest) GetSubmitTime() string {
	if o == nil || IsNil(o.SubmitTime) {
		var ret string
		return ret
	}
	return *o.SubmitTime
}

// GetSubmitTimeOk returns a tuple with the SubmitTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateWorkTimeApprovalRequest) GetSubmitTimeOk() (*string, bool) {
	if o == nil || IsNil(o.SubmitTime) {
		return nil, false
	}
	return o.SubmitTime, true
}

// HasSubmitTime returns a boolean if a field has been set.
func (o *UpdateWorkTimeApprovalRequest) HasSubmitTime() bool {
	if o != nil && !IsNil(o.SubmitTime) {
		return true
	}

	return false
}

// SetSubmitTime gets a reference to the given string and assigns it to the SubmitTime field.
func (o *UpdateWorkTimeApprovalRequest) SetSubmitTime(v string) {
	o.SubmitTime = &v
}

// GetFinishTime returns the FinishTime field value if set, zero value otherwise.
func (o *UpdateWorkTimeApprovalRequest) GetFinishTime() string {
	if o == nil || IsNil(o.FinishTime) {
		var ret string
		return ret
	}
	return *o.FinishTime
}

// GetFinishTimeOk returns a tuple with the FinishTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateWorkTimeApprovalRequest) GetFinishTimeOk() (*string, bool) {
	if o == nil || IsNil(o.FinishTime) {
		return nil, false
	}
	return o.FinishTime, true
}

// HasFinishTime returns a boolean if a field has been set.
func (o *UpdateWorkTimeApprovalRequest) HasFinishTime() bool {
	if o != nil && !IsNil(o.FinishTime) {
		return true
	}

	return false
}

// SetFinishTime gets a reference to the given string and assigns it to the FinishTime field.
func (o *UpdateWorkTimeApprovalRequest) SetFinishTime(v string) {
	o.FinishTime = &v
}

func (o UpdateWorkTimeApprovalRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateWorkTimeApprovalRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.InstanceId) {
		toSerialize["instanceId"] = o.InstanceId
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.SubmitTime) {
		toSerialize["submitTime"] = o.SubmitTime
	}
	if !IsNil(o.FinishTime) {
		toSerialize["finishTime"] = o.FinishTime
	}
	return toSerialize, nil
}

type NullableUpdateWorkTimeApprovalRequest struct {
	value *UpdateWorkTimeApprovalRequest
	isSet bool
}

func (v NullableUpdateWorkTimeApprovalRequest) Get() *UpdateWorkTimeApprovalRequest {
	return v.value
}

func (v *NullableUpdateWorkTimeApprovalRequest) Set(val *UpdateWorkTimeApprovalRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateWorkTimeApprovalRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateWorkTimeApprovalRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateWorkTimeApprovalRequest(val *UpdateWorkTimeApprovalRequest) *NullableUpdateWorkTimeApprovalRequest {
	return &NullableUpdateWorkTimeApprovalRequest{value: val, isSet: true}
}

func (v NullableUpdateWorkTimeApprovalRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateWorkTimeApprovalRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


