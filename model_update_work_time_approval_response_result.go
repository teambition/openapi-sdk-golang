/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateWorkTimeApprovalResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateWorkTimeApprovalResponseResult{}

// UpdateWorkTimeApprovalResponseResult struct for UpdateWorkTimeApprovalResponseResult
type UpdateWorkTimeApprovalResponseResult struct {
	// openid, tb 侧关联ID, 回写状态时入参
	OpenId *string `json:"openId,omitempty"`
	WorkTimeIds []string `json:"workTimeIds,omitempty"`
	// 实际工时数(单位:毫秒)
	Time *int32 `json:"time,omitempty"`
	// 企业ID
	OrganizationId *string `json:"organizationId,omitempty"`
	// 任务ID
	TaskId *string `json:"taskId,omitempty"`
	// 填报人用户ID
	UserId *string `json:"userId,omitempty"`
	// 创建人用户ID
	CreatorId *string `json:"creatorId,omitempty"`
	// 审批状态，enum: 待审批 NONE、新建 NEW、运行中 RUNNING、已完成-同意 COMPLETED-AGREE、已完成-拒绝 COMPLETED-REFUSE、撤销 TERMINATED
	Status *string `json:"status,omitempty"`
	// 创建时间
	CreatedAt *string `json:"createdAt,omitempty"`
	// 更新时间
	UpdatedAt *string `json:"updatedAt,omitempty"`
	// 审批单链接
	Url *string `json:"url,omitempty"`
	// 审批单title
	Title *string `json:"title,omitempty"`
	// 审批单提交时间
	SubmitTime *string `json:"submitTime,omitempty"`
	// 审批单完成时间
	FinishTime *string `json:"finishTime,omitempty"`
	// 三方审批单实例ID
	InstanceId *string `json:"instanceId,omitempty"`
}

// NewUpdateWorkTimeApprovalResponseResult instantiates a new UpdateWorkTimeApprovalResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateWorkTimeApprovalResponseResult() *UpdateWorkTimeApprovalResponseResult {
	this := UpdateWorkTimeApprovalResponseResult{}
	return &this
}

// NewUpdateWorkTimeApprovalResponseResultWithDefaults instantiates a new UpdateWorkTimeApprovalResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateWorkTimeApprovalResponseResultWithDefaults() *UpdateWorkTimeApprovalResponseResult {
	this := UpdateWorkTimeApprovalResponseResult{}
	return &this
}

// GetOpenId returns the OpenId field value if set, zero value otherwise.
func (o *UpdateWorkTimeApprovalResponseResult) GetOpenId() string {
	if o == nil || IsNil(o.OpenId) {
		var ret string
		return ret
	}
	return *o.OpenId
}

// GetOpenIdOk returns a tuple with the OpenId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateWorkTimeApprovalResponseResult) GetOpenIdOk() (*string, bool) {
	if o == nil || IsNil(o.OpenId) {
		return nil, false
	}
	return o.OpenId, true
}

// HasOpenId returns a boolean if a field has been set.
func (o *UpdateWorkTimeApprovalResponseResult) HasOpenId() bool {
	if o != nil && !IsNil(o.OpenId) {
		return true
	}

	return false
}

// SetOpenId gets a reference to the given string and assigns it to the OpenId field.
func (o *UpdateWorkTimeApprovalResponseResult) SetOpenId(v string) {
	o.OpenId = &v
}

// GetWorkTimeIds returns the WorkTimeIds field value if set, zero value otherwise.
func (o *UpdateWorkTimeApprovalResponseResult) GetWorkTimeIds() []string {
	if o == nil || IsNil(o.WorkTimeIds) {
		var ret []string
		return ret
	}
	return o.WorkTimeIds
}

// GetWorkTimeIdsOk returns a tuple with the WorkTimeIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateWorkTimeApprovalResponseResult) GetWorkTimeIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.WorkTimeIds) {
		return nil, false
	}
	return o.WorkTimeIds, true
}

// HasWorkTimeIds returns a boolean if a field has been set.
func (o *UpdateWorkTimeApprovalResponseResult) HasWorkTimeIds() bool {
	if o != nil && !IsNil(o.WorkTimeIds) {
		return true
	}

	return false
}

// SetWorkTimeIds gets a reference to the given []string and assigns it to the WorkTimeIds field.
func (o *UpdateWorkTimeApprovalResponseResult) SetWorkTimeIds(v []string) {
	o.WorkTimeIds = v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *UpdateWorkTimeApprovalResponseResult) GetTime() int32 {
	if o == nil || IsNil(o.Time) {
		var ret int32
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateWorkTimeApprovalResponseResult) GetTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.Time) {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *UpdateWorkTimeApprovalResponseResult) HasTime() bool {
	if o != nil && !IsNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given int32 and assigns it to the Time field.
func (o *UpdateWorkTimeApprovalResponseResult) SetTime(v int32) {
	o.Time = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *UpdateWorkTimeApprovalResponseResult) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateWorkTimeApprovalResponseResult) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *UpdateWorkTimeApprovalResponseResult) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *UpdateWorkTimeApprovalResponseResult) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetTaskId returns the TaskId field value if set, zero value otherwise.
func (o *UpdateWorkTimeApprovalResponseResult) GetTaskId() string {
	if o == nil || IsNil(o.TaskId) {
		var ret string
		return ret
	}
	return *o.TaskId
}

// GetTaskIdOk returns a tuple with the TaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateWorkTimeApprovalResponseResult) GetTaskIdOk() (*string, bool) {
	if o == nil || IsNil(o.TaskId) {
		return nil, false
	}
	return o.TaskId, true
}

// HasTaskId returns a boolean if a field has been set.
func (o *UpdateWorkTimeApprovalResponseResult) HasTaskId() bool {
	if o != nil && !IsNil(o.TaskId) {
		return true
	}

	return false
}

// SetTaskId gets a reference to the given string and assigns it to the TaskId field.
func (o *UpdateWorkTimeApprovalResponseResult) SetTaskId(v string) {
	o.TaskId = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *UpdateWorkTimeApprovalResponseResult) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateWorkTimeApprovalResponseResult) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *UpdateWorkTimeApprovalResponseResult) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *UpdateWorkTimeApprovalResponseResult) SetUserId(v string) {
	o.UserId = &v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise.
func (o *UpdateWorkTimeApprovalResponseResult) GetCreatorId() string {
	if o == nil || IsNil(o.CreatorId) {
		var ret string
		return ret
	}
	return *o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateWorkTimeApprovalResponseResult) GetCreatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorId) {
		return nil, false
	}
	return o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *UpdateWorkTimeApprovalResponseResult) HasCreatorId() bool {
	if o != nil && !IsNil(o.CreatorId) {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given string and assigns it to the CreatorId field.
func (o *UpdateWorkTimeApprovalResponseResult) SetCreatorId(v string) {
	o.CreatorId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *UpdateWorkTimeApprovalResponseResult) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateWorkTimeApprovalResponseResult) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *UpdateWorkTimeApprovalResponseResult) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *UpdateWorkTimeApprovalResponseResult) SetStatus(v string) {
	o.Status = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *UpdateWorkTimeApprovalResponseResult) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateWorkTimeApprovalResponseResult) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *UpdateWorkTimeApprovalResponseResult) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *UpdateWorkTimeApprovalResponseResult) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *UpdateWorkTimeApprovalResponseResult) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateWorkTimeApprovalResponseResult) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *UpdateWorkTimeApprovalResponseResult) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *UpdateWorkTimeApprovalResponseResult) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *UpdateWorkTimeApprovalResponseResult) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateWorkTimeApprovalResponseResult) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *UpdateWorkTimeApprovalResponseResult) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *UpdateWorkTimeApprovalResponseResult) SetUrl(v string) {
	o.Url = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *UpdateWorkTimeApprovalResponseResult) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateWorkTimeApprovalResponseResult) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *UpdateWorkTimeApprovalResponseResult) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *UpdateWorkTimeApprovalResponseResult) SetTitle(v string) {
	o.Title = &v
}

// GetSubmitTime returns the SubmitTime field value if set, zero value otherwise.
func (o *UpdateWorkTimeApprovalResponseResult) GetSubmitTime() string {
	if o == nil || IsNil(o.SubmitTime) {
		var ret string
		return ret
	}
	return *o.SubmitTime
}

// GetSubmitTimeOk returns a tuple with the SubmitTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateWorkTimeApprovalResponseResult) GetSubmitTimeOk() (*string, bool) {
	if o == nil || IsNil(o.SubmitTime) {
		return nil, false
	}
	return o.SubmitTime, true
}

// HasSubmitTime returns a boolean if a field has been set.
func (o *UpdateWorkTimeApprovalResponseResult) HasSubmitTime() bool {
	if o != nil && !IsNil(o.SubmitTime) {
		return true
	}

	return false
}

// SetSubmitTime gets a reference to the given string and assigns it to the SubmitTime field.
func (o *UpdateWorkTimeApprovalResponseResult) SetSubmitTime(v string) {
	o.SubmitTime = &v
}

// GetFinishTime returns the FinishTime field value if set, zero value otherwise.
func (o *UpdateWorkTimeApprovalResponseResult) GetFinishTime() string {
	if o == nil || IsNil(o.FinishTime) {
		var ret string
		return ret
	}
	return *o.FinishTime
}

// GetFinishTimeOk returns a tuple with the FinishTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateWorkTimeApprovalResponseResult) GetFinishTimeOk() (*string, bool) {
	if o == nil || IsNil(o.FinishTime) {
		return nil, false
	}
	return o.FinishTime, true
}

// HasFinishTime returns a boolean if a field has been set.
func (o *UpdateWorkTimeApprovalResponseResult) HasFinishTime() bool {
	if o != nil && !IsNil(o.FinishTime) {
		return true
	}

	return false
}

// SetFinishTime gets a reference to the given string and assigns it to the FinishTime field.
func (o *UpdateWorkTimeApprovalResponseResult) SetFinishTime(v string) {
	o.FinishTime = &v
}

// GetInstanceId returns the InstanceId field value if set, zero value otherwise.
func (o *UpdateWorkTimeApprovalResponseResult) GetInstanceId() string {
	if o == nil || IsNil(o.InstanceId) {
		var ret string
		return ret
	}
	return *o.InstanceId
}

// GetInstanceIdOk returns a tuple with the InstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateWorkTimeApprovalResponseResult) GetInstanceIdOk() (*string, bool) {
	if o == nil || IsNil(o.InstanceId) {
		return nil, false
	}
	return o.InstanceId, true
}

// HasInstanceId returns a boolean if a field has been set.
func (o *UpdateWorkTimeApprovalResponseResult) HasInstanceId() bool {
	if o != nil && !IsNil(o.InstanceId) {
		return true
	}

	return false
}

// SetInstanceId gets a reference to the given string and assigns it to the InstanceId field.
func (o *UpdateWorkTimeApprovalResponseResult) SetInstanceId(v string) {
	o.InstanceId = &v
}

func (o UpdateWorkTimeApprovalResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateWorkTimeApprovalResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OpenId) {
		toSerialize["openId"] = o.OpenId
	}
	if !IsNil(o.WorkTimeIds) {
		toSerialize["workTimeIds"] = o.WorkTimeIds
	}
	if !IsNil(o.Time) {
		toSerialize["time"] = o.Time
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if !IsNil(o.TaskId) {
		toSerialize["taskId"] = o.TaskId
	}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	if !IsNil(o.CreatorId) {
		toSerialize["creatorId"] = o.CreatorId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.SubmitTime) {
		toSerialize["submitTime"] = o.SubmitTime
	}
	if !IsNil(o.FinishTime) {
		toSerialize["finishTime"] = o.FinishTime
	}
	if !IsNil(o.InstanceId) {
		toSerialize["instanceId"] = o.InstanceId
	}
	return toSerialize, nil
}

type NullableUpdateWorkTimeApprovalResponseResult struct {
	value *UpdateWorkTimeApprovalResponseResult
	isSet bool
}

func (v NullableUpdateWorkTimeApprovalResponseResult) Get() *UpdateWorkTimeApprovalResponseResult {
	return v.value
}

func (v *NullableUpdateWorkTimeApprovalResponseResult) Set(val *UpdateWorkTimeApprovalResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateWorkTimeApprovalResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateWorkTimeApprovalResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateWorkTimeApprovalResponseResult(val *UpdateWorkTimeApprovalResponseResult) *NullableUpdateWorkTimeApprovalResponseResult {
	return &NullableUpdateWorkTimeApprovalResponseResult{value: val, isSet: true}
}

func (v NullableUpdateWorkTimeApprovalResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateWorkTimeApprovalResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


