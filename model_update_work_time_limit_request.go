/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateWorkTimeLimitRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateWorkTimeLimitRequest{}

// UpdateWorkTimeLimitRequest struct for UpdateWorkTimeLimitRequest
type UpdateWorkTimeLimitRequest struct {
	// 限制填报的用户ID(需要与 date 一起传来限制人天的填报)
	UserId *string `json:"userId,omitempty"`
	// 限制填报的日期（格式：YYYY-MM-DD）
	Date *string `json:"date,omitempty"`
	// 限制填报的最大时间（单位：ms）
	MaxTime *string `json:"maxTime,omitempty"`
}

// NewUpdateWorkTimeLimitRequest instantiates a new UpdateWorkTimeLimitRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateWorkTimeLimitRequest() *UpdateWorkTimeLimitRequest {
	this := UpdateWorkTimeLimitRequest{}
	return &this
}

// NewUpdateWorkTimeLimitRequestWithDefaults instantiates a new UpdateWorkTimeLimitRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateWorkTimeLimitRequestWithDefaults() *UpdateWorkTimeLimitRequest {
	this := UpdateWorkTimeLimitRequest{}
	return &this
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *UpdateWorkTimeLimitRequest) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateWorkTimeLimitRequest) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *UpdateWorkTimeLimitRequest) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *UpdateWorkTimeLimitRequest) SetUserId(v string) {
	o.UserId = &v
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *UpdateWorkTimeLimitRequest) GetDate() string {
	if o == nil || IsNil(o.Date) {
		var ret string
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateWorkTimeLimitRequest) GetDateOk() (*string, bool) {
	if o == nil || IsNil(o.Date) {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *UpdateWorkTimeLimitRequest) HasDate() bool {
	if o != nil && !IsNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given string and assigns it to the Date field.
func (o *UpdateWorkTimeLimitRequest) SetDate(v string) {
	o.Date = &v
}

// GetMaxTime returns the MaxTime field value if set, zero value otherwise.
func (o *UpdateWorkTimeLimitRequest) GetMaxTime() string {
	if o == nil || IsNil(o.MaxTime) {
		var ret string
		return ret
	}
	return *o.MaxTime
}

// GetMaxTimeOk returns a tuple with the MaxTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateWorkTimeLimitRequest) GetMaxTimeOk() (*string, bool) {
	if o == nil || IsNil(o.MaxTime) {
		return nil, false
	}
	return o.MaxTime, true
}

// HasMaxTime returns a boolean if a field has been set.
func (o *UpdateWorkTimeLimitRequest) HasMaxTime() bool {
	if o != nil && !IsNil(o.MaxTime) {
		return true
	}

	return false
}

// SetMaxTime gets a reference to the given string and assigns it to the MaxTime field.
func (o *UpdateWorkTimeLimitRequest) SetMaxTime(v string) {
	o.MaxTime = &v
}

func (o UpdateWorkTimeLimitRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateWorkTimeLimitRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	if !IsNil(o.Date) {
		toSerialize["date"] = o.Date
	}
	if !IsNil(o.MaxTime) {
		toSerialize["maxTime"] = o.MaxTime
	}
	return toSerialize, nil
}

type NullableUpdateWorkTimeLimitRequest struct {
	value *UpdateWorkTimeLimitRequest
	isSet bool
}

func (v NullableUpdateWorkTimeLimitRequest) Get() *UpdateWorkTimeLimitRequest {
	return v.value
}

func (v *NullableUpdateWorkTimeLimitRequest) Set(val *UpdateWorkTimeLimitRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateWorkTimeLimitRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateWorkTimeLimitRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateWorkTimeLimitRequest(val *UpdateWorkTimeLimitRequest) *NullableUpdateWorkTimeLimitRequest {
	return &NullableUpdateWorkTimeLimitRequest{value: val, isSet: true}
}

func (v NullableUpdateWorkTimeLimitRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateWorkTimeLimitRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


