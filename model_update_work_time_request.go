/*
Teambition Open API

Teambition Open API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateWorkTimeRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateWorkTimeRequest{}

// UpdateWorkTimeRequest struct for UpdateWorkTimeRequest
type UpdateWorkTimeRequest struct {
	// 工时所属日期字符串 如'2023-03-04'
	Date *string `json:"date,omitempty"`
	// 更新实际工时数（毫秒）如 39600000
	Worktime *int32 `json:"worktime,omitempty"`
	// 工作进展
	Description *string `json:"description,omitempty"`
	// 工时执行者 ID
	UserId *string `json:"userId,omitempty"`
}

// NewUpdateWorkTimeRequest instantiates a new UpdateWorkTimeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateWorkTimeRequest() *UpdateWorkTimeRequest {
	this := UpdateWorkTimeRequest{}
	return &this
}

// NewUpdateWorkTimeRequestWithDefaults instantiates a new UpdateWorkTimeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateWorkTimeRequestWithDefaults() *UpdateWorkTimeRequest {
	this := UpdateWorkTimeRequest{}
	return &this
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *UpdateWorkTimeRequest) GetDate() string {
	if o == nil || IsNil(o.Date) {
		var ret string
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateWorkTimeRequest) GetDateOk() (*string, bool) {
	if o == nil || IsNil(o.Date) {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *UpdateWorkTimeRequest) HasDate() bool {
	if o != nil && !IsNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given string and assigns it to the Date field.
func (o *UpdateWorkTimeRequest) SetDate(v string) {
	o.Date = &v
}

// GetWorktime returns the Worktime field value if set, zero value otherwise.
func (o *UpdateWorkTimeRequest) GetWorktime() int32 {
	if o == nil || IsNil(o.Worktime) {
		var ret int32
		return ret
	}
	return *o.Worktime
}

// GetWorktimeOk returns a tuple with the Worktime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateWorkTimeRequest) GetWorktimeOk() (*int32, bool) {
	if o == nil || IsNil(o.Worktime) {
		return nil, false
	}
	return o.Worktime, true
}

// HasWorktime returns a boolean if a field has been set.
func (o *UpdateWorkTimeRequest) HasWorktime() bool {
	if o != nil && !IsNil(o.Worktime) {
		return true
	}

	return false
}

// SetWorktime gets a reference to the given int32 and assigns it to the Worktime field.
func (o *UpdateWorkTimeRequest) SetWorktime(v int32) {
	o.Worktime = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpdateWorkTimeRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateWorkTimeRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UpdateWorkTimeRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpdateWorkTimeRequest) SetDescription(v string) {
	o.Description = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *UpdateWorkTimeRequest) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateWorkTimeRequest) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *UpdateWorkTimeRequest) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *UpdateWorkTimeRequest) SetUserId(v string) {
	o.UserId = &v
}

func (o UpdateWorkTimeRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateWorkTimeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Date) {
		toSerialize["date"] = o.Date
	}
	if !IsNil(o.Worktime) {
		toSerialize["worktime"] = o.Worktime
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	return toSerialize, nil
}

type NullableUpdateWorkTimeRequest struct {
	value *UpdateWorkTimeRequest
	isSet bool
}

func (v NullableUpdateWorkTimeRequest) Get() *UpdateWorkTimeRequest {
	return v.value
}

func (v *NullableUpdateWorkTimeRequest) Set(val *UpdateWorkTimeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateWorkTimeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateWorkTimeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateWorkTimeRequest(val *UpdateWorkTimeRequest) *NullableUpdateWorkTimeRequest {
	return &NullableUpdateWorkTimeRequest{value: val, isSet: true}
}

func (v NullableUpdateWorkTimeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateWorkTimeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


